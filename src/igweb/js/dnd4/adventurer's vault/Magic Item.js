(function(global, undefined) {
  "use strict";
  
  var elements = global.elements || (global.elements = {});
  var types = elements.types || (elements.types = {});
  var byID = elements.id || (elements.id = {});
  var te;
  
  var Magic_Item = types['Magic Item'] || (types['Magic Item'] = {});
  te = Magic_Item["Absence Amulet +3"] = new RulesElement({
    name: "Absence Amulet +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3510",
    source: "Adventurer's Vault",
    categories: ["Absence Amulet +3", "ID_FMP_MAGIC_ITEM_3510"],
    rules: function(model) {
      model.statadd("Fortitude Defense", 3, "Enhancement");
      model.statadd("Reflex Defense", 3, "Enhancement");
      model.statadd("Will Defense", 3, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Absence Amulet +4"] = new RulesElement({
    name: "Absence Amulet +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3511",
    source: "Adventurer's Vault",
    categories: ["Absence Amulet +4", "ID_FMP_MAGIC_ITEM_3511"],
    rules: function(model) {
      model.statadd("Fortitude Defense", 4, "Enhancement");
      model.statadd("Reflex Defense", 4, "Enhancement");
      model.statadd("Will Defense", 4, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Absence Amulet +5"] = new RulesElement({
    name: "Absence Amulet +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3512",
    source: "Adventurer's Vault",
    categories: ["Absence Amulet +5", "ID_FMP_MAGIC_ITEM_3512"],
    rules: function(model) {
      model.statadd("Fortitude Defense", 5, "Enhancement");
      model.statadd("Reflex Defense", 5, "Enhancement");
      model.statadd("Will Defense", 5, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Absence Amulet +6"] = new RulesElement({
    name: "Absence Amulet +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3513",
    source: "Adventurer's Vault",
    categories: ["Absence Amulet +6", "ID_FMP_MAGIC_ITEM_3513"],
    rules: function(model) {
      model.statadd("Fortitude Defense", 6, "Enhancement");
      model.statadd("Reflex Defense", 6, "Enhancement");
      model.statadd("Will Defense", 6, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Abyssal Adornment +3"] = new RulesElement({
    name: "Abyssal Adornment +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3514",
    source: "Adventurer's Vault",
    categories: ["Abyssal Adornment +3", "ID_FMP_MAGIC_ITEM_3514"],
    rules: function(model) {
      model.statadd("Fortitude Defense", 3, "Enhancement");
      model.statadd("Reflex Defense", 3, "Enhancement");
      model.statadd("Will Defense", 3, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Abyssal Adornment +4"] = new RulesElement({
    name: "Abyssal Adornment +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3515",
    source: "Adventurer's Vault",
    categories: ["Abyssal Adornment +4", "ID_FMP_MAGIC_ITEM_3515"],
    rules: function(model) {
      model.statadd("Fortitude Defense", 4, "Enhancement");
      model.statadd("Reflex Defense", 4, "Enhancement");
      model.statadd("Will Defense", 4, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Abyssal Adornment +5"] = new RulesElement({
    name: "Abyssal Adornment +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3516",
    source: "Adventurer's Vault",
    categories: ["Abyssal Adornment +5", "ID_FMP_MAGIC_ITEM_3516"],
    rules: function(model) {
      model.statadd("Fortitude Defense", 5, "Enhancement");
      model.statadd("Reflex Defense", 5, "Enhancement");
      model.statadd("Will Defense", 5, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Abyssal Adornment +6"] = new RulesElement({
    name: "Abyssal Adornment +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3517",
    source: "Adventurer's Vault",
    categories: ["Abyssal Adornment +6", "ID_FMP_MAGIC_ITEM_3517"],
    rules: function(model) {
      model.statadd("Fortitude Defense", 6, "Enhancement");
      model.statadd("Reflex Defense", 6, "Enhancement");
      model.statadd("Will Defense", 6, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Acidic Weapon +1"] = new RulesElement({
    name: "Acidic Weapon +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1911",
    source: "Adventurer's Vault",
    categories: ["Acidic Weapon +1", "ID_FMP_MAGIC_ITEM_1911"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Acidic Weapon +2"] = new RulesElement({
    name: "Acidic Weapon +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1912",
    source: "Adventurer's Vault",
    categories: ["Acidic Weapon +2", "ID_FMP_MAGIC_ITEM_1912"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Acidic Weapon +3"] = new RulesElement({
    name: "Acidic Weapon +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1913",
    source: "Adventurer's Vault",
    categories: ["Acidic Weapon +3", "ID_FMP_MAGIC_ITEM_1913"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Acidic Weapon +4"] = new RulesElement({
    name: "Acidic Weapon +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1914",
    source: "Adventurer's Vault",
    categories: ["Acidic Weapon +4", "ID_FMP_MAGIC_ITEM_1914"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Acidic Weapon +5"] = new RulesElement({
    name: "Acidic Weapon +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1915",
    source: "Adventurer's Vault",
    categories: ["Acidic Weapon +5", "ID_FMP_MAGIC_ITEM_1915"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Acidic Weapon +6"] = new RulesElement({
    name: "Acidic Weapon +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1916",
    source: "Adventurer's Vault",
    categories: ["Acidic Weapon +6", "ID_FMP_MAGIC_ITEM_1916"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Adamantine Rod +3"] = new RulesElement({
    name: "Adamantine Rod +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2779",
    source: "Adventurer's Vault",
    categories: ["Adamantine Rod +3", "ID_FMP_MAGIC_ITEM_2779"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Adamantine Rod +4"] = new RulesElement({
    name: "Adamantine Rod +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2780",
    source: "Adventurer's Vault",
    categories: ["Adamantine Rod +4", "ID_FMP_MAGIC_ITEM_2780"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Adamantine Rod +5"] = new RulesElement({
    name: "Adamantine Rod +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2781",
    source: "Adventurer's Vault",
    categories: ["Adamantine Rod +5", "ID_FMP_MAGIC_ITEM_2781"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Adamantine Rod +6"] = new RulesElement({
    name: "Adamantine Rod +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2782",
    source: "Adventurer's Vault",
    categories: ["Adamantine Rod +6", "ID_FMP_MAGIC_ITEM_2782"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Adamantine Weapon +2"] = new RulesElement({
    name: "Adamantine Weapon +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1917",
    source: "Adventurer's Vault",
    categories: ["Adamantine Weapon +2", "ID_FMP_MAGIC_ITEM_1917"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Adamantine Weapon +3"] = new RulesElement({
    name: "Adamantine Weapon +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1918",
    source: "Adventurer's Vault",
    categories: ["Adamantine Weapon +3", "ID_FMP_MAGIC_ITEM_1918"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Adamantine Weapon +4"] = new RulesElement({
    name: "Adamantine Weapon +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1919",
    source: "Adventurer's Vault",
    categories: ["Adamantine Weapon +4", "ID_FMP_MAGIC_ITEM_1919"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Adamantine Weapon +5"] = new RulesElement({
    name: "Adamantine Weapon +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1920",
    source: "Adventurer's Vault",
    categories: ["Adamantine Weapon +5", "ID_FMP_MAGIC_ITEM_1920"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Adamantine Weapon +6"] = new RulesElement({
    name: "Adamantine Weapon +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1921",
    source: "Adventurer's Vault",
    categories: ["Adamantine Weapon +6", "ID_FMP_MAGIC_ITEM_1921"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Addergrease Armor +1"] = new RulesElement({
    name: "Addergrease Armor +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1427",
    source: "Adventurer's Vault",
    categories: ["Addergrease Armor +1", "ID_FMP_MAGIC_ITEM_1427"],
    rules: function(model) {
      model.statadd("Armor Class", 1, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 1);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Addergrease Armor +2"] = new RulesElement({
    name: "Addergrease Armor +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1428",
    source: "Adventurer's Vault",
    categories: ["Addergrease Armor +2", "ID_FMP_MAGIC_ITEM_1428"],
    rules: function(model) {
      model.statadd("Armor Class", 2, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 2);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Addergrease Armor +3"] = new RulesElement({
    name: "Addergrease Armor +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1429",
    source: "Adventurer's Vault",
    categories: ["Addergrease Armor +3", "ID_FMP_MAGIC_ITEM_1429"],
    rules: function(model) {
      model.statadd("Armor Class", 3, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 3);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Addergrease Armor +4"] = new RulesElement({
    name: "Addergrease Armor +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1430",
    source: "Adventurer's Vault",
    categories: ["Addergrease Armor +4", "ID_FMP_MAGIC_ITEM_1430"],
    rules: function(model) {
      model.statadd("Armor Class", 4, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 4);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Addergrease Armor +5"] = new RulesElement({
    name: "Addergrease Armor +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1431",
    source: "Adventurer's Vault",
    categories: ["Addergrease Armor +5", "ID_FMP_MAGIC_ITEM_1431"],
    rules: function(model) {
      model.statadd("Armor Class", 5, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 5);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Addergrease Armor +6"] = new RulesElement({
    name: "Addergrease Armor +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1432",
    source: "Adventurer's Vault",
    categories: ["Addergrease Armor +6", "ID_FMP_MAGIC_ITEM_1432"],
    rules: function(model) {
      model.statadd("Armor Class", 6, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 6);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Agile Armor +1"] = new RulesElement({
    name: "Agile Armor +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1433",
    source: "Adventurer's Vault",
    categories: ["Agile Armor +1", "ID_FMP_MAGIC_ITEM_1433"],
    rules: function(model) {
      model.statadd("AC", function() { /* while you are not bloodied (max +1) */ return abilitymod(model.stat("dex")); }, "item");
      model.statadd("Armor Class", 1, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 1);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Agile Armor +2"] = new RulesElement({
    name: "Agile Armor +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1434",
    source: "Adventurer's Vault",
    categories: ["Agile Armor +2", "ID_FMP_MAGIC_ITEM_1434"],
    rules: function(model) {
      model.statadd("AC", function() { /* while you are not bloodied (max +1) */ return abilitymod(model.stat("dex")); }, "item");
      model.statadd("Armor Class", 2, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 2);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Agile Armor +3"] = new RulesElement({
    name: "Agile Armor +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1435",
    source: "Adventurer's Vault",
    categories: ["Agile Armor +3", "ID_FMP_MAGIC_ITEM_1435"],
    rules: function(model) {
      model.statadd("AC", function() { /* while you are not bloodied (max +2) */ return abilitymod(model.stat("dex")); }, "item");
      model.statadd("Armor Class", 3, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 3);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Agile Armor +4"] = new RulesElement({
    name: "Agile Armor +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1436",
    source: "Adventurer's Vault",
    categories: ["Agile Armor +4", "ID_FMP_MAGIC_ITEM_1436"],
    rules: function(model) {
      model.statadd("AC", function() { /* while you are not bloodied (max +2) */ return abilitymod(model.stat("dex")); }, "item");
      model.statadd("Armor Class", 4, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 4);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Agile Armor +5"] = new RulesElement({
    name: "Agile Armor +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1437",
    source: "Adventurer's Vault",
    categories: ["Agile Armor +5", "ID_FMP_MAGIC_ITEM_1437"],
    rules: function(model) {
      model.statadd("AC", function() { /* while you are not bloodied (max +3) */ return abilitymod(model.stat("dex")); }, "item");
      model.statadd("Armor Class", 5, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 5);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Agile Armor +6"] = new RulesElement({
    name: "Agile Armor +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1438",
    source: "Adventurer's Vault",
    categories: ["Agile Armor +6", "ID_FMP_MAGIC_ITEM_1438"],
    rules: function(model) {
      model.statadd("AC", function() { /* while you are not bloodied (max +3) */ return abilitymod(model.stat("dex")); }, "item");
      model.statadd("Armor Class", 6, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 6);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Airstriders (epic tier)"] = new RulesElement({
    name: "Airstriders (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3296",
    source: "Adventurer's Vault",
    categories: ["Airstriders (epic tier)", "ID_FMP_MAGIC_ITEM_3296"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Alchemical Silver (epic tier)"] = new RulesElement({
    name: "Alchemical Silver (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1300",
    source: "Adventurer's Vault",
    categories: ["Alchemical Silver (epic tier)", "ID_FMP_MAGIC_ITEM_1300"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Alchemical Silver (heroic tier)"] = new RulesElement({
    name: "Alchemical Silver (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1296",
    source: "Adventurer's Vault",
    categories: ["Alchemical Silver (heroic tier)", "ID_FMP_MAGIC_ITEM_1296"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Alchemical Silver (paragon tier)"] = new RulesElement({
    name: "Alchemical Silver (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1298",
    source: "Adventurer's Vault",
    categories: ["Alchemical Silver (paragon tier)", "ID_FMP_MAGIC_ITEM_1298"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Alchemist's Acid (level 1)"] = new RulesElement({
    name: "Alchemist's Acid (level 1)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1302",
    source: "Adventurer's Vault",
    categories: ["Alchemist's Acid (level 1)", "ID_FMP_MAGIC_ITEM_1302"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Alchemist's Acid (level 11)"] = new RulesElement({
    name: "Alchemist's Acid (level 11)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1304",
    source: "Adventurer's Vault",
    categories: ["Alchemist's Acid (level 11)", "ID_FMP_MAGIC_ITEM_1304"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Alchemist's Acid (level 16)"] = new RulesElement({
    name: "Alchemist's Acid (level 16)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1305",
    source: "Adventurer's Vault",
    categories: ["Alchemist's Acid (level 16)", "ID_FMP_MAGIC_ITEM_1305"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Alchemist's Acid (level 21)"] = new RulesElement({
    name: "Alchemist's Acid (level 21)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1306",
    source: "Adventurer's Vault",
    categories: ["Alchemist's Acid (level 21)", "ID_FMP_MAGIC_ITEM_1306"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Alchemist's Acid (level 26)"] = new RulesElement({
    name: "Alchemist's Acid (level 26)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1307",
    source: "Adventurer's Vault",
    categories: ["Alchemist's Acid (level 26)", "ID_FMP_MAGIC_ITEM_1307"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Alchemist's Acid (level 6)"] = new RulesElement({
    name: "Alchemist's Acid (level 6)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1303",
    source: "Adventurer's Vault",
    categories: ["Alchemist's Acid (level 6)", "ID_FMP_MAGIC_ITEM_1303"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Alchemist's Fire (level 1)"] = new RulesElement({
    name: "Alchemist's Fire (level 1)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1308",
    source: "Adventurer's Vault",
    categories: ["Alchemist's Fire (level 1)", "ID_FMP_MAGIC_ITEM_1308"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Alchemist's Fire (level 11)"] = new RulesElement({
    name: "Alchemist's Fire (level 11)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1310",
    source: "Adventurer's Vault",
    categories: ["Alchemist's Fire (level 11)", "ID_FMP_MAGIC_ITEM_1310"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Alchemist's Fire (level 16)"] = new RulesElement({
    name: "Alchemist's Fire (level 16)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1311",
    source: "Adventurer's Vault",
    categories: ["Alchemist's Fire (level 16)", "ID_FMP_MAGIC_ITEM_1311"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Alchemist's Fire (level 21)"] = new RulesElement({
    name: "Alchemist's Fire (level 21)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1312",
    source: "Adventurer's Vault",
    categories: ["Alchemist's Fire (level 21)", "ID_FMP_MAGIC_ITEM_1312"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Alchemist's Fire (level 26)"] = new RulesElement({
    name: "Alchemist's Fire (level 26)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1313",
    source: "Adventurer's Vault",
    categories: ["Alchemist's Fire (level 26)", "ID_FMP_MAGIC_ITEM_1313"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Alchemist's Fire (level 6)"] = new RulesElement({
    name: "Alchemist's Fire (level 6)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1309",
    source: "Adventurer's Vault",
    categories: ["Alchemist's Fire (level 6)", "ID_FMP_MAGIC_ITEM_1309"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Alchemist's Frost (level 1)"] = new RulesElement({
    name: "Alchemist's Frost (level 1)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1314",
    source: "Adventurer's Vault",
    categories: ["Alchemist's Frost (level 1)", "ID_FMP_MAGIC_ITEM_1314"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Alchemist's Frost (level 11)"] = new RulesElement({
    name: "Alchemist's Frost (level 11)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1316",
    source: "Adventurer's Vault",
    categories: ["Alchemist's Frost (level 11)", "ID_FMP_MAGIC_ITEM_1316"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Alchemist's Frost (level 16)"] = new RulesElement({
    name: "Alchemist's Frost (level 16)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1317",
    source: "Adventurer's Vault",
    categories: ["Alchemist's Frost (level 16)", "ID_FMP_MAGIC_ITEM_1317"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Alchemist's Frost (level 21)"] = new RulesElement({
    name: "Alchemist's Frost (level 21)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1318",
    source: "Adventurer's Vault",
    categories: ["Alchemist's Frost (level 21)", "ID_FMP_MAGIC_ITEM_1318"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Alchemist's Frost (level 26)"] = new RulesElement({
    name: "Alchemist's Frost (level 26)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1319",
    source: "Adventurer's Vault",
    categories: ["Alchemist's Frost (level 26)", "ID_FMP_MAGIC_ITEM_1319"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Alchemist's Frost (level 6)"] = new RulesElement({
    name: "Alchemist's Frost (level 6)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1315",
    source: "Adventurer's Vault",
    categories: ["Alchemist's Frost (level 6)", "ID_FMP_MAGIC_ITEM_1315"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Amethyst Band of Invisible Eyes (paragon tier)"] = new RulesElement({
    name: "Amethyst Band of Invisible Eyes (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3722",
    source: "Adventurer's Vault",
    categories: ["Amethyst Band of Invisible Eyes (paragon tier)", "ID_FMP_MAGIC_ITEM_3722"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Amulet of Aranea +3"] = new RulesElement({
    name: "Amulet of Aranea +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3518",
    source: "Adventurer's Vault",
    categories: ["Amulet of Aranea +3", "ID_FMP_MAGIC_ITEM_3518"],
    rules: function(model) {
      model.statadd("Amulet of Aranea +3", 10, "Amulet of Aranea +3");
      model.statadd("resist:poison", function() { return model.stat("Amulet of Aranea +3"); }, "resist");
      model.statadd("Fortitude Defense", 3, "Enhancement");
      model.statadd("Reflex Defense", 3, "Enhancement");
      model.statadd("Will Defense", 3, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Amulet of Aranea +4"] = new RulesElement({
    name: "Amulet of Aranea +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3519",
    source: "Adventurer's Vault",
    categories: ["Amulet of Aranea +4", "ID_FMP_MAGIC_ITEM_3519"],
    rules: function(model) {
      model.statadd("Amulet of Aranea +4", 10, "Amulet of Aranea +4");
      model.statadd("resist:poison", function() { return model.stat("Amulet of Aranea +4"); }, "resist");
      model.statadd("Fortitude Defense", 4, "Enhancement");
      model.statadd("Reflex Defense", 4, "Enhancement");
      model.statadd("Will Defense", 4, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Amulet of Aranea +5"] = new RulesElement({
    name: "Amulet of Aranea +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3520",
    source: "Adventurer's Vault",
    categories: ["Amulet of Aranea +5", "ID_FMP_MAGIC_ITEM_3520"],
    rules: function(model) {
      model.statadd("Amulet of Aranea +5", 15, "Amulet of Aranea +5");
      model.statadd("resist:poison", function() { return model.stat("Amulet of Aranea +5"); }, "resist");
      model.statadd("Fortitude Defense", 5, "Enhancement");
      model.statadd("Reflex Defense", 5, "Enhancement");
      model.statadd("Will Defense", 5, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Amulet of Aranea +6"] = new RulesElement({
    name: "Amulet of Aranea +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3521",
    source: "Adventurer's Vault",
    categories: ["Amulet of Aranea +6", "ID_FMP_MAGIC_ITEM_3521"],
    rules: function(model) {
      model.statadd("Amulet of Aranea +6", 15, "Amulet of Aranea +6");
      model.statadd("resist:poison", function() { return model.stat("Amulet of Aranea +6"); }, "resist");
      model.statadd("Fortitude Defense", 6, "Enhancement");
      model.statadd("Reflex Defense", 6, "Enhancement");
      model.statadd("Will Defense", 6, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Amulet of Attenuation +3"] = new RulesElement({
    name: "Amulet of Attenuation +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3522",
    source: "Adventurer's Vault",
    categories: ["Amulet of Attenuation +3", "ID_FMP_MAGIC_ITEM_3522"],
    rules: function(model) {
      model.statadd("Fortitude Defense", 3, "Enhancement");
      model.statadd("Reflex Defense", 3, "Enhancement");
      model.statadd("Will Defense", 3, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Amulet of Attenuation +4"] = new RulesElement({
    name: "Amulet of Attenuation +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3523",
    source: "Adventurer's Vault",
    categories: ["Amulet of Attenuation +4", "ID_FMP_MAGIC_ITEM_3523"],
    rules: function(model) {
      model.statadd("Fortitude Defense", 4, "Enhancement");
      model.statadd("Reflex Defense", 4, "Enhancement");
      model.statadd("Will Defense", 4, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Amulet of Attenuation +5"] = new RulesElement({
    name: "Amulet of Attenuation +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3524",
    source: "Adventurer's Vault",
    categories: ["Amulet of Attenuation +5", "ID_FMP_MAGIC_ITEM_3524"],
    rules: function(model) {
      model.statadd("Fortitude Defense", 5, "Enhancement");
      model.statadd("Reflex Defense", 5, "Enhancement");
      model.statadd("Will Defense", 5, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Amulet of Attenuation +6"] = new RulesElement({
    name: "Amulet of Attenuation +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3525",
    source: "Adventurer's Vault",
    categories: ["Amulet of Attenuation +6", "ID_FMP_MAGIC_ITEM_3525"],
    rules: function(model) {
      model.statadd("Fortitude Defense", 6, "Enhancement");
      model.statadd("Reflex Defense", 6, "Enhancement");
      model.statadd("Will Defense", 6, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Amulet of Bodily Sanctity +3"] = new RulesElement({
    name: "Amulet of Bodily Sanctity +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3526",
    source: "Adventurer's Vault",
    categories: ["Amulet of Bodily Sanctity +3", "ID_FMP_MAGIC_ITEM_3526"],
    rules: function(model) {
      model.statadd("Saving Throws", function() { /* against ongoing damage */ return 2; }, "item");
      model.statadd("Fortitude Defense", 3, "Enhancement");
      model.statadd("Reflex Defense", 3, "Enhancement");
      model.statadd("Will Defense", 3, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Amulet of Bodily Sanctity +4"] = new RulesElement({
    name: "Amulet of Bodily Sanctity +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3527",
    source: "Adventurer's Vault",
    categories: ["Amulet of Bodily Sanctity +4", "ID_FMP_MAGIC_ITEM_3527"],
    rules: function(model) {
      model.statadd("Saving Throws", function() { /* against ongoing damage */ return 2; }, "item");
      model.statadd("Fortitude Defense", 4, "Enhancement");
      model.statadd("Reflex Defense", 4, "Enhancement");
      model.statadd("Will Defense", 4, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Amulet of Bodily Sanctity +5"] = new RulesElement({
    name: "Amulet of Bodily Sanctity +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3528",
    source: "Adventurer's Vault",
    categories: ["Amulet of Bodily Sanctity +5", "ID_FMP_MAGIC_ITEM_3528"],
    rules: function(model) {
      model.statadd("Saving Throws", function() { /* against ongoing damage */ return 2; }, "item");
      model.statadd("Fortitude Defense", 5, "Enhancement");
      model.statadd("Reflex Defense", 5, "Enhancement");
      model.statadd("Will Defense", 5, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Amulet of Bodily Sanctity +6"] = new RulesElement({
    name: "Amulet of Bodily Sanctity +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3529",
    source: "Adventurer's Vault",
    categories: ["Amulet of Bodily Sanctity +6", "ID_FMP_MAGIC_ITEM_3529"],
    rules: function(model) {
      model.statadd("Saving Throws", function() { /* against ongoing damage */ return 2; }, "item");
      model.statadd("Fortitude Defense", 6, "Enhancement");
      model.statadd("Reflex Defense", 6, "Enhancement");
      model.statadd("Will Defense", 6, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Amulet of Elusive Prey +3"] = new RulesElement({
    name: "Amulet of Elusive Prey +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3530",
    source: "Adventurer's Vault",
    categories: ["Amulet of Elusive Prey +3", "ID_FMP_MAGIC_ITEM_3530"],
    rules: function(model) {
      model.statadd("Fortitude Defense", 3, "Enhancement");
      model.statadd("Reflex Defense", 3, "Enhancement");
      model.statadd("Will Defense", 3, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Amulet of Elusive Prey +4"] = new RulesElement({
    name: "Amulet of Elusive Prey +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3531",
    source: "Adventurer's Vault",
    categories: ["Amulet of Elusive Prey +4", "ID_FMP_MAGIC_ITEM_3531"],
    rules: function(model) {
      model.statadd("Fortitude Defense", 4, "Enhancement");
      model.statadd("Reflex Defense", 4, "Enhancement");
      model.statadd("Will Defense", 4, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Amulet of Elusive Prey +5"] = new RulesElement({
    name: "Amulet of Elusive Prey +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3532",
    source: "Adventurer's Vault",
    categories: ["Amulet of Elusive Prey +5", "ID_FMP_MAGIC_ITEM_3532"],
    rules: function(model) {
      model.statadd("Fortitude Defense", 5, "Enhancement");
      model.statadd("Reflex Defense", 5, "Enhancement");
      model.statadd("Will Defense", 5, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Amulet of Elusive Prey +6"] = new RulesElement({
    name: "Amulet of Elusive Prey +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3533",
    source: "Adventurer's Vault",
    categories: ["Amulet of Elusive Prey +6", "ID_FMP_MAGIC_ITEM_3533"],
    rules: function(model) {
      model.statadd("Fortitude Defense", 6, "Enhancement");
      model.statadd("Reflex Defense", 6, "Enhancement");
      model.statadd("Will Defense", 6, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Amulet of Inner Voice +3"] = new RulesElement({
    name: "Amulet of Inner Voice +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3534",
    source: "Adventurer's Vault",
    categories: ["Amulet of Inner Voice +3", "ID_FMP_MAGIC_ITEM_3534"],
    rules: function(model) {
      model.statadd("Saving Throws", function() { /* against effects with the charm or fear keyword */ return 2; }, "item");
      model.statadd("Fortitude Defense", 3, "Enhancement");
      model.statadd("Reflex Defense", 3, "Enhancement");
      model.statadd("Will Defense", 3, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Amulet of Inner Voice +4"] = new RulesElement({
    name: "Amulet of Inner Voice +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3535",
    source: "Adventurer's Vault",
    categories: ["Amulet of Inner Voice +4", "ID_FMP_MAGIC_ITEM_3535"],
    rules: function(model) {
      model.statadd("Saving Throws", function() { /* against effects with the charm or fear keyword */ return 2; }, "item");
      model.statadd("Fortitude Defense", 4, "Enhancement");
      model.statadd("Reflex Defense", 4, "Enhancement");
      model.statadd("Will Defense", 4, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Amulet of Inner Voice +5"] = new RulesElement({
    name: "Amulet of Inner Voice +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3536",
    source: "Adventurer's Vault",
    categories: ["Amulet of Inner Voice +5", "ID_FMP_MAGIC_ITEM_3536"],
    rules: function(model) {
      model.statadd("Saving Throws", function() { /* against effects with the charm or fear keyword */ return 2; }, "item");
      model.statadd("Fortitude Defense", 5, "Enhancement");
      model.statadd("Reflex Defense", 5, "Enhancement");
      model.statadd("Will Defense", 5, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Amulet of Inner Voice +6"] = new RulesElement({
    name: "Amulet of Inner Voice +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3537",
    source: "Adventurer's Vault",
    categories: ["Amulet of Inner Voice +6", "ID_FMP_MAGIC_ITEM_3537"],
    rules: function(model) {
      model.statadd("Saving Throws", function() { /* against effects with the charm or fear keyword */ return 2; }, "item");
      model.statadd("Fortitude Defense", 6, "Enhancement");
      model.statadd("Reflex Defense", 6, "Enhancement");
      model.statadd("Will Defense", 6, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Amulet of Material Darkness +4"] = new RulesElement({
    name: "Amulet of Material Darkness +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3538",
    source: "Adventurer's Vault",
    categories: ["Amulet of Material Darkness +4", "ID_FMP_MAGIC_ITEM_3538"],
    rules: function(model) {
      model.statadd("Fortitude Defense", 4, "Enhancement");
      model.statadd("Reflex Defense", 4, "Enhancement");
      model.statadd("Will Defense", 4, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Amulet of Material Darkness +5"] = new RulesElement({
    name: "Amulet of Material Darkness +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3539",
    source: "Adventurer's Vault",
    categories: ["Amulet of Material Darkness +5", "ID_FMP_MAGIC_ITEM_3539"],
    rules: function(model) {
      model.statadd("Fortitude Defense", 5, "Enhancement");
      model.statadd("Reflex Defense", 5, "Enhancement");
      model.statadd("Will Defense", 5, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Amulet of Material Darkness +6"] = new RulesElement({
    name: "Amulet of Material Darkness +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3540",
    source: "Adventurer's Vault",
    categories: ["Amulet of Material Darkness +6", "ID_FMP_MAGIC_ITEM_3540"],
    rules: function(model) {
      model.statadd("Fortitude Defense", 6, "Enhancement");
      model.statadd("Reflex Defense", 6, "Enhancement");
      model.statadd("Will Defense", 6, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Amulet of Mental Resolve +1"] = new RulesElement({
    name: "Amulet of Mental Resolve +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3541",
    source: "Adventurer's Vault",
    categories: ["Amulet of Mental Resolve +1", "ID_FMP_MAGIC_ITEM_3541"],
    rules: function(model) {
      model.statadd("Saving Throws", function() { /* against effects with the charm, illusion, or sleep keyword */ return 2; }, "item");
      model.statadd("Fortitude Defense", 1, "Enhancement");
      model.statadd("Reflex Defense", 1, "Enhancement");
      model.statadd("Will Defense", 1, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Amulet of Mental Resolve +2"] = new RulesElement({
    name: "Amulet of Mental Resolve +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3542",
    source: "Adventurer's Vault",
    categories: ["Amulet of Mental Resolve +2", "ID_FMP_MAGIC_ITEM_3542"],
    rules: function(model) {
      model.statadd("Saving Throws", function() { /* against effects with the charm, illusion, or sleep keyword */ return 2; }, "item");
      model.statadd("Fortitude Defense", 2, "Enhancement");
      model.statadd("Reflex Defense", 2, "Enhancement");
      model.statadd("Will Defense", 2, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Amulet of Mental Resolve +3"] = new RulesElement({
    name: "Amulet of Mental Resolve +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3543",
    source: "Adventurer's Vault",
    categories: ["Amulet of Mental Resolve +3", "ID_FMP_MAGIC_ITEM_3543"],
    rules: function(model) {
      model.statadd("Saving Throws", function() { /* against effects with the charm, illusion, or sleep keyword */ return 2; }, "item");
      model.statadd("Fortitude Defense", 3, "Enhancement");
      model.statadd("Reflex Defense", 3, "Enhancement");
      model.statadd("Will Defense", 3, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Amulet of Mental Resolve +4"] = new RulesElement({
    name: "Amulet of Mental Resolve +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3544",
    source: "Adventurer's Vault",
    categories: ["Amulet of Mental Resolve +4", "ID_FMP_MAGIC_ITEM_3544"],
    rules: function(model) {
      model.statadd("Saving Throws", function() { /* against effects with the charm, illusion, or sleep keyword */ return 2; }, "item");
      model.statadd("Fortitude Defense", 4, "Enhancement");
      model.statadd("Reflex Defense", 4, "Enhancement");
      model.statadd("Will Defense", 4, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Amulet of Mental Resolve +5"] = new RulesElement({
    name: "Amulet of Mental Resolve +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3545",
    source: "Adventurer's Vault",
    categories: ["Amulet of Mental Resolve +5", "ID_FMP_MAGIC_ITEM_3545"],
    rules: function(model) {
      model.statadd("Saving Throws", function() { /* against effects with the charm, illusion, or sleep keyword */ return 2; }, "item");
      model.statadd("Fortitude Defense", 5, "Enhancement");
      model.statadd("Reflex Defense", 5, "Enhancement");
      model.statadd("Will Defense", 5, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Amulet of Mental Resolve +6"] = new RulesElement({
    name: "Amulet of Mental Resolve +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3546",
    source: "Adventurer's Vault",
    categories: ["Amulet of Mental Resolve +6", "ID_FMP_MAGIC_ITEM_3546"],
    rules: function(model) {
      model.statadd("Saving Throws", function() { /* against effects with the charm, illusion, or sleep keyword */ return 2; }, "item");
      model.statadd("Fortitude Defense", 6, "Enhancement");
      model.statadd("Reflex Defense", 6, "Enhancement");
      model.statadd("Will Defense", 6, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Amulet of Physical Resolve +1"] = new RulesElement({
    name: "Amulet of Physical Resolve +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3547",
    source: "Adventurer's Vault",
    categories: ["Amulet of Physical Resolve +1", "ID_FMP_MAGIC_ITEM_3547"],
    rules: function(model) {
      model.statadd("Saving Throws", function() { /* against effects with the poison keyword and effects that render you weakened, slowed, or immobilized */ return 2; }, "item");
      model.statadd("Fortitude Defense", 1, "Enhancement");
      model.statadd("Reflex Defense", 1, "Enhancement");
      model.statadd("Will Defense", 1, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Amulet of Physical Resolve +2"] = new RulesElement({
    name: "Amulet of Physical Resolve +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3548",
    source: "Adventurer's Vault",
    categories: ["Amulet of Physical Resolve +2", "ID_FMP_MAGIC_ITEM_3548"],
    rules: function(model) {
      model.statadd("Saving Throws", function() { /* against effects with the poison keyword and effects that render you weakened, slowed, or immobilized */ return 2; }, "item");
      model.statadd("Fortitude Defense", 2, "Enhancement");
      model.statadd("Reflex Defense", 2, "Enhancement");
      model.statadd("Will Defense", 2, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Amulet of Physical Resolve +3"] = new RulesElement({
    name: "Amulet of Physical Resolve +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3549",
    source: "Adventurer's Vault",
    categories: ["Amulet of Physical Resolve +3", "ID_FMP_MAGIC_ITEM_3549"],
    rules: function(model) {
      model.statadd("Saving Throws", function() { /* against effects with the poison keyword and effects that render you weakened, slowed, or immobilized */ return 2; }, "item");
      model.statadd("Fortitude Defense", 3, "Enhancement");
      model.statadd("Reflex Defense", 3, "Enhancement");
      model.statadd("Will Defense", 3, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Amulet of Physical Resolve +4"] = new RulesElement({
    name: "Amulet of Physical Resolve +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3550",
    source: "Adventurer's Vault",
    categories: ["Amulet of Physical Resolve +4", "ID_FMP_MAGIC_ITEM_3550"],
    rules: function(model) {
      model.statadd("Saving Throws", function() { /* against effects with the poison keyword and effects that render you weakened, slowed, or immobilized */ return 2; }, "item");
      model.statadd("Fortitude Defense", 4, "Enhancement");
      model.statadd("Reflex Defense", 4, "Enhancement");
      model.statadd("Will Defense", 4, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Amulet of Physical Resolve +5"] = new RulesElement({
    name: "Amulet of Physical Resolve +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3551",
    source: "Adventurer's Vault",
    categories: ["Amulet of Physical Resolve +5", "ID_FMP_MAGIC_ITEM_3551"],
    rules: function(model) {
      model.statadd("Saving Throws", function() { /* against effects with the poison keyword and effects that render you weakened, slowed, or immobilized */ return 2; }, "item");
      model.statadd("Fortitude Defense", 5, "Enhancement");
      model.statadd("Reflex Defense", 5, "Enhancement");
      model.statadd("Will Defense", 5, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Amulet of Physical Resolve +6"] = new RulesElement({
    name: "Amulet of Physical Resolve +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3552",
    source: "Adventurer's Vault",
    categories: ["Amulet of Physical Resolve +6", "ID_FMP_MAGIC_ITEM_3552"],
    rules: function(model) {
      model.statadd("Saving Throws", function() { /* against effects with the poison keyword and effects that render you weakened, slowed, or immobilized */ return 2; }, "item");
      model.statadd("Fortitude Defense", 6, "Enhancement");
      model.statadd("Reflex Defense", 6, "Enhancement");
      model.statadd("Will Defense", 6, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Amulet of Resolution +1"] = new RulesElement({
    name: "Amulet of Resolution +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3553",
    source: "Adventurer's Vault",
    categories: ["Amulet of Resolution +1", "ID_FMP_MAGIC_ITEM_3553"],
    rules: function(model) {
      model.statadd("Fortitude Defense", 1, "Enhancement");
      model.statadd("Reflex Defense", 1, "Enhancement");
      model.statadd("Will Defense", 1, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Amulet of Resolution +2"] = new RulesElement({
    name: "Amulet of Resolution +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3554",
    source: "Adventurer's Vault",
    categories: ["Amulet of Resolution +2", "ID_FMP_MAGIC_ITEM_3554"],
    rules: function(model) {
      model.statadd("Fortitude Defense", 2, "Enhancement");
      model.statadd("Reflex Defense", 2, "Enhancement");
      model.statadd("Will Defense", 2, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Amulet of Resolution +3"] = new RulesElement({
    name: "Amulet of Resolution +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3555",
    source: "Adventurer's Vault",
    categories: ["Amulet of Resolution +3", "ID_FMP_MAGIC_ITEM_3555"],
    rules: function(model) {
      model.statadd("Fortitude Defense", 3, "Enhancement");
      model.statadd("Reflex Defense", 3, "Enhancement");
      model.statadd("Will Defense", 3, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Amulet of Resolution +4"] = new RulesElement({
    name: "Amulet of Resolution +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3556",
    source: "Adventurer's Vault",
    categories: ["Amulet of Resolution +4", "ID_FMP_MAGIC_ITEM_3556"],
    rules: function(model) {
      model.statadd("Fortitude Defense", 4, "Enhancement");
      model.statadd("Reflex Defense", 4, "Enhancement");
      model.statadd("Will Defense", 4, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Amulet of Resolution +5"] = new RulesElement({
    name: "Amulet of Resolution +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3557",
    source: "Adventurer's Vault",
    categories: ["Amulet of Resolution +5", "ID_FMP_MAGIC_ITEM_3557"],
    rules: function(model) {
      model.statadd("Fortitude Defense", 5, "Enhancement");
      model.statadd("Reflex Defense", 5, "Enhancement");
      model.statadd("Will Defense", 5, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Amulet of Resolution +6"] = new RulesElement({
    name: "Amulet of Resolution +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3558",
    source: "Adventurer's Vault",
    categories: ["Amulet of Resolution +6", "ID_FMP_MAGIC_ITEM_3558"],
    rules: function(model) {
      model.statadd("Fortitude Defense", 6, "Enhancement");
      model.statadd("Reflex Defense", 6, "Enhancement");
      model.statadd("Will Defense", 6, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Amulet of the Unbroken +6"] = new RulesElement({
    name: "Amulet of the Unbroken +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3559",
    source: "Adventurer's Vault",
    categories: ["Amulet of the Unbroken +6", "ID_FMP_MAGIC_ITEM_3559"],
    rules: function(model) {
      model.statadd("Fortitude Defense", 6, "Enhancement");
      model.statadd("Reflex Defense", 6, "Enhancement");
      model.statadd("Will Defense", 6, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Angelsteel Shield (epic tier)"] = new RulesElement({
    name: "Angelsteel Shield (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3154",
    source: "Adventurer's Vault",
    categories: ["Angelsteel Shield (epic tier)", "ID_FMP_MAGIC_ITEM_3154"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Angelsteel Shield (heroic tier)"] = new RulesElement({
    name: "Angelsteel Shield (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3150",
    source: "Adventurer's Vault",
    categories: ["Angelsteel Shield (heroic tier)", "ID_FMP_MAGIC_ITEM_3150"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Angelsteel Shield (paragon tier)"] = new RulesElement({
    name: "Angelsteel Shield (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3152",
    source: "Adventurer's Vault",
    categories: ["Angelsteel Shield (paragon tier)", "ID_FMP_MAGIC_ITEM_3152"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Anklets of Opportunity (paragon tier)"] = new RulesElement({
    name: "Anklets of Opportunity (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3297",
    source: "Adventurer's Vault",
    categories: ["Anklets of Opportunity (paragon tier)", "ID_FMP_MAGIC_ITEM_3297"],
    rules: function(model) {
      model.statadd("Reflex Defense", 1);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Antipathy Gloves (heroic tier)"] = new RulesElement({
    name: "Antipathy Gloves (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3359",
    source: "Adventurer's Vault",
    categories: ["Antipathy Gloves (heroic tier)", "ID_FMP_MAGIC_ITEM_3359"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Antivenom (epic tier)"] = new RulesElement({
    name: "Antivenom (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1324",
    source: "Adventurer's Vault",
    categories: ["Antivenom (epic tier)", "ID_FMP_MAGIC_ITEM_1324"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Antivenom (heroic tier)"] = new RulesElement({
    name: "Antivenom (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1320",
    source: "Adventurer's Vault",
    categories: ["Antivenom (heroic tier)", "ID_FMP_MAGIC_ITEM_1320"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Antivenom (paragon tier)"] = new RulesElement({
    name: "Antivenom (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1322",
    source: "Adventurer's Vault",
    categories: ["Antivenom (paragon tier)", "ID_FMP_MAGIC_ITEM_1322"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Aqueous Armor +3"] = new RulesElement({
    name: "Aqueous Armor +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1439",
    source: "Adventurer's Vault",
    categories: ["Aqueous Armor +3", "ID_FMP_MAGIC_ITEM_1439"],
    rules: function(model) {
      model.statadd("Armor Class", 3, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 3);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Aqueous Armor +4"] = new RulesElement({
    name: "Aqueous Armor +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1440",
    source: "Adventurer's Vault",
    categories: ["Aqueous Armor +4", "ID_FMP_MAGIC_ITEM_1440"],
    rules: function(model) {
      model.statadd("Armor Class", 4, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 4);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Aqueous Armor +5"] = new RulesElement({
    name: "Aqueous Armor +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1441",
    source: "Adventurer's Vault",
    categories: ["Aqueous Armor +5", "ID_FMP_MAGIC_ITEM_1441"],
    rules: function(model) {
      model.statadd("Armor Class", 5, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 5);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Aqueous Armor +6"] = new RulesElement({
    name: "Aqueous Armor +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1442",
    source: "Adventurer's Vault",
    categories: ["Aqueous Armor +6", "ID_FMP_MAGIC_ITEM_1442"],
    rules: function(model) {
      model.statadd("Armor Class", 6, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 6);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Arcanist's Glasses (heroic tier)"] = new RulesElement({
    name: "Arcanist's Glasses (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3420",
    source: "Adventurer's Vault",
    categories: ["Arcanist's Glasses (heroic tier)", "ID_FMP_MAGIC_ITEM_3420"],
    rules: function(model) {
      model.statadd("Arcana Misc", function() { /* Detect Magic */ return 3; }, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Architect's Staff +1"] = new RulesElement({
    name: "Architect's Staff +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2906",
    source: "Adventurer's Vault",
    categories: ["Architect's Staff +1", "ID_FMP_MAGIC_ITEM_2906"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Architect's Staff +2"] = new RulesElement({
    name: "Architect's Staff +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2907",
    source: "Adventurer's Vault",
    categories: ["Architect's Staff +2", "ID_FMP_MAGIC_ITEM_2907"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Architect's Staff +3"] = new RulesElement({
    name: "Architect's Staff +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2908",
    source: "Adventurer's Vault",
    categories: ["Architect's Staff +3", "ID_FMP_MAGIC_ITEM_2908"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Architect's Staff +4"] = new RulesElement({
    name: "Architect's Staff +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2909",
    source: "Adventurer's Vault",
    categories: ["Architect's Staff +4", "ID_FMP_MAGIC_ITEM_2909"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Architect's Staff +5"] = new RulesElement({
    name: "Architect's Staff +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2910",
    source: "Adventurer's Vault",
    categories: ["Architect's Staff +5", "ID_FMP_MAGIC_ITEM_2910"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Architect's Staff +6"] = new RulesElement({
    name: "Architect's Staff +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2911",
    source: "Adventurer's Vault",
    categories: ["Architect's Staff +6", "ID_FMP_MAGIC_ITEM_2911"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Armor of Attraction +3"] = new RulesElement({
    name: "Armor of Attraction +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1443",
    source: "Adventurer's Vault",
    categories: ["Armor of Attraction +3", "ID_FMP_MAGIC_ITEM_1443"],
    rules: function(model) {
      model.statadd("Armor Class", 3, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 3);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Armor of Attraction +4"] = new RulesElement({
    name: "Armor of Attraction +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1444",
    source: "Adventurer's Vault",
    categories: ["Armor of Attraction +4", "ID_FMP_MAGIC_ITEM_1444"],
    rules: function(model) {
      model.statadd("Armor Class", 4, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 4);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Armor of Attraction +5"] = new RulesElement({
    name: "Armor of Attraction +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1445",
    source: "Adventurer's Vault",
    categories: ["Armor of Attraction +5", "ID_FMP_MAGIC_ITEM_1445"],
    rules: function(model) {
      model.statadd("Armor Class", 5, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 5);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Armor of Attraction +6"] = new RulesElement({
    name: "Armor of Attraction +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1446",
    source: "Adventurer's Vault",
    categories: ["Armor of Attraction +6", "ID_FMP_MAGIC_ITEM_1446"],
    rules: function(model) {
      model.statadd("Armor Class", 6, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 6);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Armor of Cleansing +1"] = new RulesElement({
    name: "Armor of Cleansing +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1447",
    source: "Adventurer's Vault",
    categories: ["Armor of Cleansing +1", "ID_FMP_MAGIC_ITEM_1447"],
    rules: function(model) {
      model.statadd("Saving Throws", function() { /* against ongoing damage */ return 2; }, "item");
      model.statadd("Armor Class", 1, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 1);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Armor of Cleansing +2"] = new RulesElement({
    name: "Armor of Cleansing +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1448",
    source: "Adventurer's Vault",
    categories: ["Armor of Cleansing +2", "ID_FMP_MAGIC_ITEM_1448"],
    rules: function(model) {
      model.statadd("Saving Throws", function() { /* against ongoing damage */ return 2; }, "item");
      model.statadd("Armor Class", 2, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 2);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Armor of Cleansing +3"] = new RulesElement({
    name: "Armor of Cleansing +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1449",
    source: "Adventurer's Vault",
    categories: ["Armor of Cleansing +3", "ID_FMP_MAGIC_ITEM_1449"],
    rules: function(model) {
      model.statadd("Saving Throws", function() { /* against ongoing damage */ return 2; }, "item");
      model.statadd("Armor Class", 3, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 3);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Armor of Cleansing +4"] = new RulesElement({
    name: "Armor of Cleansing +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1450",
    source: "Adventurer's Vault",
    categories: ["Armor of Cleansing +4", "ID_FMP_MAGIC_ITEM_1450"],
    rules: function(model) {
      model.statadd("Saving Throws", function() { /* against ongoing damage */ return 2; }, "item");
      model.statadd("Armor Class", 4, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 4);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Armor of Cleansing +5"] = new RulesElement({
    name: "Armor of Cleansing +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1451",
    source: "Adventurer's Vault",
    categories: ["Armor of Cleansing +5", "ID_FMP_MAGIC_ITEM_1451"],
    rules: function(model) {
      model.statadd("Saving Throws", function() { /* against ongoing damage */ return 2; }, "item");
      model.statadd("Armor Class", 5, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 5);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Armor of Cleansing +6"] = new RulesElement({
    name: "Armor of Cleansing +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1452",
    source: "Adventurer's Vault",
    categories: ["Armor of Cleansing +6", "ID_FMP_MAGIC_ITEM_1452"],
    rules: function(model) {
      model.statadd("Saving Throws", function() { /* against ongoing damage */ return 2; }, "item");
      model.statadd("Armor Class", 6, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 6);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Armor of Durability +1"] = new RulesElement({
    name: "Armor of Durability +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1453",
    source: "Adventurer's Vault",
    categories: ["Armor of Durability +1", "ID_FMP_MAGIC_ITEM_1453"],
    rules: function(model) {
      model.statadd("Armor Class", 1, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 1);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Armor of Durability +2"] = new RulesElement({
    name: "Armor of Durability +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1454",
    source: "Adventurer's Vault",
    categories: ["Armor of Durability +2", "ID_FMP_MAGIC_ITEM_1454"],
    rules: function(model) {
      model.statadd("Armor Class", 2, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 2);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Armor of Durability +3"] = new RulesElement({
    name: "Armor of Durability +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1455",
    source: "Adventurer's Vault",
    categories: ["Armor of Durability +3", "ID_FMP_MAGIC_ITEM_1455"],
    rules: function(model) {
      model.statadd("Armor Class", 3, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 3);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Armor of Durability +4"] = new RulesElement({
    name: "Armor of Durability +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1456",
    source: "Adventurer's Vault",
    categories: ["Armor of Durability +4", "ID_FMP_MAGIC_ITEM_1456"],
    rules: function(model) {
      model.statadd("Armor Class", 4, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 4);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Armor of Durability +5"] = new RulesElement({
    name: "Armor of Durability +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1457",
    source: "Adventurer's Vault",
    categories: ["Armor of Durability +5", "ID_FMP_MAGIC_ITEM_1457"],
    rules: function(model) {
      model.statadd("Armor Class", 5, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 5);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Armor of Durability +6"] = new RulesElement({
    name: "Armor of Durability +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1458",
    source: "Adventurer's Vault",
    categories: ["Armor of Durability +6", "ID_FMP_MAGIC_ITEM_1458"],
    rules: function(model) {
      model.statadd("Armor Class", 6, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 6);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Armor of Exploits +1"] = new RulesElement({
    name: "Armor of Exploits +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1459",
    source: "Adventurer's Vault",
    categories: ["Armor of Exploits +1", "ID_FMP_MAGIC_ITEM_1459"],
    rules: function(model) {
      model.statadd("Armor Class", 1, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 1);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Armor of Exploits +2"] = new RulesElement({
    name: "Armor of Exploits +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1460",
    source: "Adventurer's Vault",
    categories: ["Armor of Exploits +2", "ID_FMP_MAGIC_ITEM_1460"],
    rules: function(model) {
      model.statadd("Armor Class", 2, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 2);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Armor of Exploits +3"] = new RulesElement({
    name: "Armor of Exploits +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1461",
    source: "Adventurer's Vault",
    categories: ["Armor of Exploits +3", "ID_FMP_MAGIC_ITEM_1461"],
    rules: function(model) {
      model.statadd("Armor Class", 3, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 3);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Armor of Exploits +4"] = new RulesElement({
    name: "Armor of Exploits +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1462",
    source: "Adventurer's Vault",
    categories: ["Armor of Exploits +4", "ID_FMP_MAGIC_ITEM_1462"],
    rules: function(model) {
      model.statadd("Armor Class", 4, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 4);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Armor of Exploits +5"] = new RulesElement({
    name: "Armor of Exploits +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1463",
    source: "Adventurer's Vault",
    categories: ["Armor of Exploits +5", "ID_FMP_MAGIC_ITEM_1463"],
    rules: function(model) {
      model.statadd("Armor Class", 5, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 5);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Armor of Exploits +6"] = new RulesElement({
    name: "Armor of Exploits +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1464",
    source: "Adventurer's Vault",
    categories: ["Armor of Exploits +6", "ID_FMP_MAGIC_ITEM_1464"],
    rules: function(model) {
      model.statadd("Armor Class", 6, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 6);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Armor of Negation +3"] = new RulesElement({
    name: "Armor of Negation +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1465",
    source: "Adventurer's Vault",
    categories: ["Armor of Negation +3", "ID_FMP_MAGIC_ITEM_1465"],
    rules: function(model) {
      model.statadd("Armor Class", 3, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 3);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Armor of Negation +4"] = new RulesElement({
    name: "Armor of Negation +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1466",
    source: "Adventurer's Vault",
    categories: ["Armor of Negation +4", "ID_FMP_MAGIC_ITEM_1466"],
    rules: function(model) {
      model.statadd("Armor Class", 4, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 4);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Armor of Negation +5"] = new RulesElement({
    name: "Armor of Negation +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1467",
    source: "Adventurer's Vault",
    categories: ["Armor of Negation +5", "ID_FMP_MAGIC_ITEM_1467"],
    rules: function(model) {
      model.statadd("Armor Class", 5, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 5);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Armor of Negation +6"] = new RulesElement({
    name: "Armor of Negation +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1468",
    source: "Adventurer's Vault",
    categories: ["Armor of Negation +6", "ID_FMP_MAGIC_ITEM_1468"],
    rules: function(model) {
      model.statadd("Armor Class", 6, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 6);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Armor of Night +3"] = new RulesElement({
    name: "Armor of Night +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1469",
    source: "Adventurer's Vault",
    categories: ["Armor of Night +3", "ID_FMP_MAGIC_ITEM_1469"],
    rules: function(model) {
      model.statadd("resist:radiant", 10, "resist");
      model.statadd("Armor Class", 3, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 3);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Armor of Night +4"] = new RulesElement({
    name: "Armor of Night +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1470",
    source: "Adventurer's Vault",
    categories: ["Armor of Night +4", "ID_FMP_MAGIC_ITEM_1470"],
    rules: function(model) {
      model.statadd("resist:radiant", 10, "resist");
      model.statadd("Armor Class", 4, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 4);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Armor of Night +5"] = new RulesElement({
    name: "Armor of Night +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1471",
    source: "Adventurer's Vault",
    categories: ["Armor of Night +5", "ID_FMP_MAGIC_ITEM_1471"],
    rules: function(model) {
      model.statadd("resist:radiant", 15, "resist");
      model.statadd("Armor Class", 5, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 5);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Armor of Night +6"] = new RulesElement({
    name: "Armor of Night +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1472",
    source: "Adventurer's Vault",
    categories: ["Armor of Night +6", "ID_FMP_MAGIC_ITEM_1472"],
    rules: function(model) {
      model.statadd("resist:radiant", 15, "resist");
      model.statadd("Armor Class", 6, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 6);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Armor of Resistance +1"] = new RulesElement({
    name: "Armor of Resistance +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1473",
    source: "Adventurer's Vault",
    categories: ["Armor of Resistance +1", "ID_FMP_MAGIC_ITEM_1473"],
    rules: function(model) {
      model.statadd("Armor Class", 1, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 1);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Armor of Resistance +2"] = new RulesElement({
    name: "Armor of Resistance +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1474",
    source: "Adventurer's Vault",
    categories: ["Armor of Resistance +2", "ID_FMP_MAGIC_ITEM_1474"],
    rules: function(model) {
      model.statadd("Armor Class", 2, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 2);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Armor of Resistance +3"] = new RulesElement({
    name: "Armor of Resistance +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1475",
    source: "Adventurer's Vault",
    categories: ["Armor of Resistance +3", "ID_FMP_MAGIC_ITEM_1475"],
    rules: function(model) {
      model.statadd("Resist:to a damage type chosen from the following list at the time the armor is created: acid, cold, fire, force, lightning, necrotic, poison, psychic, thunder", 10, "resist");
      model.statadd("Armor Class", 3, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 3);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Armor of Resistance +4"] = new RulesElement({
    name: "Armor of Resistance +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1476",
    source: "Adventurer's Vault",
    categories: ["Armor of Resistance +4", "ID_FMP_MAGIC_ITEM_1476"],
    rules: function(model) {
      model.statadd("Resist:to a damage type chosen from the following list at the time the armor is created: acid, cold, fire, force, lightning, necrotic, poison, psychic, thunder", 10, "resist");
      model.statadd("Armor Class", 4, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 4);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Armor of Resistance +5"] = new RulesElement({
    name: "Armor of Resistance +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1477",
    source: "Adventurer's Vault",
    categories: ["Armor of Resistance +5", "ID_FMP_MAGIC_ITEM_1477"],
    rules: function(model) {
      model.statadd("Resist:to a damage type chosen from the following list at the time the armor is created: acid, cold, fire, force, lightning, necrotic, poison, psychic, thunder", 15, "resist");
      model.statadd("Armor Class", 5, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 5);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Armor of Resistance +6"] = new RulesElement({
    name: "Armor of Resistance +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1478",
    source: "Adventurer's Vault",
    categories: ["Armor of Resistance +6", "ID_FMP_MAGIC_ITEM_1478"],
    rules: function(model) {
      model.statadd("Resist:to a damage type chosen from the following list at the time the armor is created: acid, cold, fire, force, lightning, necrotic, poison, psychic, thunder", 15, "resist");
      model.statadd("Armor Class", 6, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 6);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Armor of Sacrifice +1"] = new RulesElement({
    name: "Armor of Sacrifice +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1479",
    source: "Adventurer's Vault",
    categories: ["Armor of Sacrifice +1", "ID_FMP_MAGIC_ITEM_1479"],
    rules: function(model) {
      model.statadd("Armor Class", 1, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 1);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Armor of Sacrifice +2"] = new RulesElement({
    name: "Armor of Sacrifice +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1480",
    source: "Adventurer's Vault",
    categories: ["Armor of Sacrifice +2", "ID_FMP_MAGIC_ITEM_1480"],
    rules: function(model) {
      model.statadd("Armor Class", 2, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 2);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Armor of Sacrifice +3"] = new RulesElement({
    name: "Armor of Sacrifice +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1481",
    source: "Adventurer's Vault",
    categories: ["Armor of Sacrifice +3", "ID_FMP_MAGIC_ITEM_1481"],
    rules: function(model) {
      model.statadd("Armor Class", 3, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 3);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Armor of Sacrifice +4"] = new RulesElement({
    name: "Armor of Sacrifice +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1482",
    source: "Adventurer's Vault",
    categories: ["Armor of Sacrifice +4", "ID_FMP_MAGIC_ITEM_1482"],
    rules: function(model) {
      model.statadd("Armor Class", 4, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 4);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Armor of Sacrifice +5"] = new RulesElement({
    name: "Armor of Sacrifice +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1483",
    source: "Adventurer's Vault",
    categories: ["Armor of Sacrifice +5", "ID_FMP_MAGIC_ITEM_1483"],
    rules: function(model) {
      model.statadd("Armor Class", 5, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 5);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Armor of Sacrifice +6"] = new RulesElement({
    name: "Armor of Sacrifice +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1484",
    source: "Adventurer's Vault",
    categories: ["Armor of Sacrifice +6", "ID_FMP_MAGIC_ITEM_1484"],
    rules: function(model) {
      model.statadd("Armor Class", 6, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 6);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Armor of Starlight +3"] = new RulesElement({
    name: "Armor of Starlight +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1485",
    source: "Adventurer's Vault",
    categories: ["Armor of Starlight +3", "ID_FMP_MAGIC_ITEM_1485"],
    rules: function(model) {
      model.statadd("resist:radiant", 10, "resist");
      model.statadd("Armor Class", 3, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 3);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Armor of Starlight +4"] = new RulesElement({
    name: "Armor of Starlight +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1486",
    source: "Adventurer's Vault",
    categories: ["Armor of Starlight +4", "ID_FMP_MAGIC_ITEM_1486"],
    rules: function(model) {
      model.statadd("resist:radiant", 10, "resist");
      model.statadd("Armor Class", 4, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 4);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Armor of Starlight +5"] = new RulesElement({
    name: "Armor of Starlight +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1487",
    source: "Adventurer's Vault",
    categories: ["Armor of Starlight +5", "ID_FMP_MAGIC_ITEM_1487"],
    rules: function(model) {
      model.statadd("resist:radiant", 15, "resist");
      model.statadd("Armor Class", 5, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 5);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Armor of Starlight +6"] = new RulesElement({
    name: "Armor of Starlight +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1488",
    source: "Adventurer's Vault",
    categories: ["Armor of Starlight +6", "ID_FMP_MAGIC_ITEM_1488"],
    rules: function(model) {
      model.statadd("resist:radiant", 15, "resist");
      model.statadd("Armor Class", 6, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 6);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Assassinbane Armor +3"] = new RulesElement({
    name: "Assassinbane Armor +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1489",
    source: "Adventurer's Vault",
    categories: ["Assassinbane Armor +3", "ID_FMP_MAGIC_ITEM_1489"],
    rules: function(model) {
      model.statadd("Armor Class", 3, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 3);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Assassinbane Armor +4"] = new RulesElement({
    name: "Assassinbane Armor +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1698",
    source: "Adventurer's Vault",
    categories: ["Assassinbane Armor +4", "ID_FMP_MAGIC_ITEM_1698"],
    rules: function(model) {
      model.statadd("Armor Class", 4, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 4);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Assassinbane Armor +5"] = new RulesElement({
    name: "Assassinbane Armor +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1699",
    source: "Adventurer's Vault",
    categories: ["Assassinbane Armor +5", "ID_FMP_MAGIC_ITEM_1699"],
    rules: function(model) {
      model.statadd("Armor Class", 5, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 5);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Assassinbane Armor +6"] = new RulesElement({
    name: "Assassinbane Armor +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1700",
    source: "Adventurer's Vault",
    categories: ["Assassinbane Armor +6", "ID_FMP_MAGIC_ITEM_1700"],
    rules: function(model) {
      model.statadd("Armor Class", 6, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 6);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Assassin's Slippers (paragon tier)"] = new RulesElement({
    name: "Assassin's Slippers (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3298",
    source: "Adventurer's Vault",
    categories: ["Assassin's Slippers (paragon tier)", "ID_FMP_MAGIC_ITEM_3298"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Assassin's Weapon +2"] = new RulesElement({
    name: "Assassin's Weapon +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1922",
    source: "Adventurer's Vault",
    categories: ["Assassin's Weapon +2", "ID_FMP_MAGIC_ITEM_1922"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Assassin's Weapon +3"] = new RulesElement({
    name: "Assassin's Weapon +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1923",
    source: "Adventurer's Vault",
    categories: ["Assassin's Weapon +3", "ID_FMP_MAGIC_ITEM_1923"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Assassin's Weapon +4"] = new RulesElement({
    name: "Assassin's Weapon +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1924",
    source: "Adventurer's Vault",
    categories: ["Assassin's Weapon +4", "ID_FMP_MAGIC_ITEM_1924"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Assassin's Weapon +5"] = new RulesElement({
    name: "Assassin's Weapon +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1925",
    source: "Adventurer's Vault",
    categories: ["Assassin's Weapon +5", "ID_FMP_MAGIC_ITEM_1925"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Assassin's Weapon +6"] = new RulesElement({
    name: "Assassin's Weapon +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1926",
    source: "Adventurer's Vault",
    categories: ["Assassin's Weapon +6", "ID_FMP_MAGIC_ITEM_1926"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Assault Boots (paragon tier)"] = new RulesElement({
    name: "Assault Boots (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3299",
    source: "Adventurer's Vault",
    categories: ["Assault Boots (paragon tier)", "ID_FMP_MAGIC_ITEM_3299"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Assured Wand of Frostburn +3"] = new RulesElement({
    name: "Assured Wand of Frostburn +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3031",
    source: "Adventurer's Vault",
    categories: ["Assured Wand of Frostburn +3", "ID_FMP_MAGIC_ITEM_3031"],
    rules: function(model) {
      model.grant(elements.id["ID_FMP_POWER_150"]);
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Assured Wand of Frostburn +4"] = new RulesElement({
    name: "Assured Wand of Frostburn +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3032",
    source: "Adventurer's Vault",
    categories: ["Assured Wand of Frostburn +4", "ID_FMP_MAGIC_ITEM_3032"],
    rules: function(model) {
      model.grant(elements.id["ID_FMP_POWER_150"]);
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Assured Wand of Frostburn +5"] = new RulesElement({
    name: "Assured Wand of Frostburn +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3033",
    source: "Adventurer's Vault",
    categories: ["Assured Wand of Frostburn +5", "ID_FMP_MAGIC_ITEM_3033"],
    rules: function(model) {
      model.grant(elements.id["ID_FMP_POWER_150"]);
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Assured Wand of Frostburn +6"] = new RulesElement({
    name: "Assured Wand of Frostburn +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3034",
    source: "Adventurer's Vault",
    categories: ["Assured Wand of Frostburn +6", "ID_FMP_MAGIC_ITEM_3034"],
    rules: function(model) {
      model.grant(elements.id["ID_FMP_POWER_150"]);
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Assured Wand of Howl of Doom +3"] = new RulesElement({
    name: "Assured Wand of Howl of Doom +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3035",
    source: "Adventurer's Vault",
    categories: ["Assured Wand of Howl of Doom +3", "ID_FMP_MAGIC_ITEM_3035"],
    rules: function(model) {
      model.grant(elements.id["ID_FMP_POWER_501"]);
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Assured Wand of Howl of Doom +4"] = new RulesElement({
    name: "Assured Wand of Howl of Doom +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3036",
    source: "Adventurer's Vault",
    categories: ["Assured Wand of Howl of Doom +4", "ID_FMP_MAGIC_ITEM_3036"],
    rules: function(model) {
      model.grant(elements.id["ID_FMP_POWER_501"]);
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Assured Wand of Howl of Doom +5"] = new RulesElement({
    name: "Assured Wand of Howl of Doom +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3037",
    source: "Adventurer's Vault",
    categories: ["Assured Wand of Howl of Doom +5", "ID_FMP_MAGIC_ITEM_3037"],
    rules: function(model) {
      model.grant(elements.id["ID_FMP_POWER_501"]);
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Assured Wand of Howl of Doom +6"] = new RulesElement({
    name: "Assured Wand of Howl of Doom +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3038",
    source: "Adventurer's Vault",
    categories: ["Assured Wand of Howl of Doom +6", "ID_FMP_MAGIC_ITEM_3038"],
    rules: function(model) {
      model.grant(elements.id["ID_FMP_POWER_501"]);
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Astral Mead (epic tier)"] = new RulesElement({
    name: "Astral Mead (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_4035",
    source: "Adventurer's Vault",
    categories: ["Astral Mead (epic tier)", "ID_FMP_MAGIC_ITEM_4035"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Augmenting Whetstone (level 11)"] = new RulesElement({
    name: "Augmenting Whetstone (level 11)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_4016",
    source: "Adventurer's Vault",
    categories: ["Augmenting Whetstone (level 11)", "ID_FMP_MAGIC_ITEM_4016"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Augmenting Whetstone (level 16)"] = new RulesElement({
    name: "Augmenting Whetstone (level 16)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_4017",
    source: "Adventurer's Vault",
    categories: ["Augmenting Whetstone (level 16)", "ID_FMP_MAGIC_ITEM_4017"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Augmenting Whetstone (level 21)"] = new RulesElement({
    name: "Augmenting Whetstone (level 21)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_4018",
    source: "Adventurer's Vault",
    categories: ["Augmenting Whetstone (level 21)", "ID_FMP_MAGIC_ITEM_4018"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Augmenting Whetstone (level 26)"] = new RulesElement({
    name: "Augmenting Whetstone (level 26)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_4019",
    source: "Adventurer's Vault",
    categories: ["Augmenting Whetstone (level 26)", "ID_FMP_MAGIC_ITEM_4019"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Augmenting Whetstone (level 6)"] = new RulesElement({
    name: "Augmenting Whetstone (level 6)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_4015",
    source: "Adventurer's Vault",
    categories: ["Augmenting Whetstone (level 6)", "ID_FMP_MAGIC_ITEM_4015"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Avandra's Whisper +4"] = new RulesElement({
    name: "Avandra's Whisper +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1927",
    source: "Adventurer's Vault",
    categories: ["Avandra's Whisper +4", "ID_FMP_MAGIC_ITEM_1927"],
    rules: function(model) {
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Avandra's Whisper +5"] = new RulesElement({
    name: "Avandra's Whisper +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1928",
    source: "Adventurer's Vault",
    categories: ["Avandra's Whisper +5", "ID_FMP_MAGIC_ITEM_1928"],
    rules: function(model) {
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Avandra's Whisper +6"] = new RulesElement({
    name: "Avandra's Whisper +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1929",
    source: "Adventurer's Vault",
    categories: ["Avandra's Whisper +6", "ID_FMP_MAGIC_ITEM_1929"],
    rules: function(model) {
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Backbone Belt (paragon tier)"] = new RulesElement({
    name: "Backbone Belt (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3767",
    source: "Adventurer's Vault",
    categories: ["Backbone Belt (paragon tier)", "ID_FMP_MAGIC_ITEM_3767"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Backtrack Bindings (epic tier)"] = new RulesElement({
    name: "Backtrack Bindings (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3300",
    source: "Adventurer's Vault",
    categories: ["Backtrack Bindings (epic tier)", "ID_FMP_MAGIC_ITEM_3300"],
    rules: function(model) {
      model.statadd("Reflex Defense", 2);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Bag of Tricks, Gray (heroic tier)"] = new RulesElement({
    name: "Bag of Tricks, Gray (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3917",
    source: "Adventurer's Vault",
    categories: ["Bag of Tricks, Gray (heroic tier)", "ID_FMP_MAGIC_ITEM_3917"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Bag of Tricks, Rust (paragon tier)"] = new RulesElement({
    name: "Bag of Tricks, Rust (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3918",
    source: "Adventurer's Vault",
    categories: ["Bag of Tricks, Rust (paragon tier)", "ID_FMP_MAGIC_ITEM_3918"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Bag of Tricks, Vermilion (epic tier)"] = new RulesElement({
    name: "Bag of Tricks, Vermilion (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3919",
    source: "Adventurer's Vault",
    categories: ["Bag of Tricks, Vermilion (epic tier)", "ID_FMP_MAGIC_ITEM_3919"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Baldric of Tactical Positioning (heroic tier)"] = new RulesElement({
    name: "Baldric of Tactical Positioning (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3768",
    source: "Adventurer's Vault",
    categories: ["Baldric of Tactical Positioning (heroic tier)", "ID_FMP_MAGIC_ITEM_3768"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Baldric of Tactical Positioning (paragon tier)"] = new RulesElement({
    name: "Baldric of Tactical Positioning (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3769",
    source: "Adventurer's Vault",
    categories: ["Baldric of Tactical Positioning (paragon tier)", "ID_FMP_MAGIC_ITEM_3769"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Baldric of Valor (epic tier)"] = new RulesElement({
    name: "Baldric of Valor (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3770",
    source: "Adventurer's Vault",
    categories: ["Baldric of Valor (epic tier)", "ID_FMP_MAGIC_ITEM_3770"],
    rules: function(model) {
      model.statadd("Action Point", "Baldric of Valor (epic tier):When you spend an action point, gain a +3 item bonus to saving throws, a +1 item bonus to attack rolls, and a +1 item bonus to all defenses. This benefit lasts until the end of your next turn.");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Banquet Ring (paragon tier)"] = new RulesElement({
    name: "Banquet Ring (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3723",
    source: "Adventurer's Vault",
    categories: ["Banquet Ring (paragon tier)", "ID_FMP_MAGIC_ITEM_3723"],
    rules: function(model) {
      model.statadd("Fortitude Defense", function() { /* against attacks with the poison keyword */ return 5; }, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Barbed Baldric (epic tier)"] = new RulesElement({
    name: "Barbed Baldric (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3773",
    source: "Adventurer's Vault",
    categories: ["Barbed Baldric (epic tier)", "ID_FMP_MAGIC_ITEM_3773"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Barbed Baldric (heroic tier)"] = new RulesElement({
    name: "Barbed Baldric (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3771",
    source: "Adventurer's Vault",
    categories: ["Barbed Baldric (heroic tier)", "ID_FMP_MAGIC_ITEM_3771"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Barbed Baldric (paragon tier)"] = new RulesElement({
    name: "Barbed Baldric (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3772",
    source: "Adventurer's Vault",
    categories: ["Barbed Baldric (paragon tier)", "ID_FMP_MAGIC_ITEM_3772"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Battering Weapon +3"] = new RulesElement({
    name: "Battering Weapon +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1930",
    source: "Adventurer's Vault",
    categories: ["Battering Weapon +3", "ID_FMP_MAGIC_ITEM_1930"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Battering Weapon +4"] = new RulesElement({
    name: "Battering Weapon +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1931",
    source: "Adventurer's Vault",
    categories: ["Battering Weapon +4", "ID_FMP_MAGIC_ITEM_1931"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Battering Weapon +5"] = new RulesElement({
    name: "Battering Weapon +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1932",
    source: "Adventurer's Vault",
    categories: ["Battering Weapon +5", "ID_FMP_MAGIC_ITEM_1932"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Battering Weapon +6"] = new RulesElement({
    name: "Battering Weapon +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1933",
    source: "Adventurer's Vault",
    categories: ["Battering Weapon +6", "ID_FMP_MAGIC_ITEM_1933"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Battle Standard of Healing (heroic tier)"] = new RulesElement({
    name: "Battle Standard of Healing (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3905",
    source: "Adventurer's Vault",
    categories: ["Battle Standard of Healing (heroic tier)", "ID_FMP_MAGIC_ITEM_3905"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Battle Standard of Honor (heroic tier)"] = new RulesElement({
    name: "Battle Standard of Honor (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3900",
    source: "Adventurer's Vault",
    categories: ["Battle Standard of Honor (heroic tier)", "ID_FMP_MAGIC_ITEM_3900"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Battle Standard of Might (heroic tier)"] = new RulesElement({
    name: "Battle Standard of Might (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3901",
    source: "Adventurer's Vault",
    categories: ["Battle Standard of Might (heroic tier)", "ID_FMP_MAGIC_ITEM_3901"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Battle Standard of Shadow (paragon tier)"] = new RulesElement({
    name: "Battle Standard of Shadow (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3902",
    source: "Adventurer's Vault",
    categories: ["Battle Standard of Shadow (paragon tier)", "ID_FMP_MAGIC_ITEM_3902"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Battle Standard of Tactics (paragon tier)"] = new RulesElement({
    name: "Battle Standard of Tactics (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3903",
    source: "Adventurer's Vault",
    categories: ["Battle Standard of Tactics (paragon tier)", "ID_FMP_MAGIC_ITEM_3903"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Battle Standard of the Fiery Legion (paragon tier)"] = new RulesElement({
    name: "Battle Standard of the Fiery Legion (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3904",
    source: "Adventurer's Vault",
    categories: ["Battle Standard of the Fiery Legion (paragon tier)", "ID_FMP_MAGIC_ITEM_3904"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Battle Standard of the Stalwart (paragon tier)"] = new RulesElement({
    name: "Battle Standard of the Stalwart (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3906",
    source: "Adventurer's Vault",
    categories: ["Battle Standard of the Stalwart (paragon tier)", "ID_FMP_MAGIC_ITEM_3906"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Battle Standard of the Vanguard (paragon tier)"] = new RulesElement({
    name: "Battle Standard of the Vanguard (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3907",
    source: "Adventurer's Vault",
    categories: ["Battle Standard of the Vanguard (paragon tier)", "ID_FMP_MAGIC_ITEM_3907"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Battlecrazed Weapon +1"] = new RulesElement({
    name: "Battlecrazed Weapon +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1934",
    source: "Adventurer's Vault",
    categories: ["Battlecrazed Weapon +1", "ID_FMP_MAGIC_ITEM_1934"],
    rules: function(model) {
      model.statadd("Damage", "+1d6");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Battlecrazed Weapon +2"] = new RulesElement({
    name: "Battlecrazed Weapon +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1935",
    source: "Adventurer's Vault",
    categories: ["Battlecrazed Weapon +2", "ID_FMP_MAGIC_ITEM_1935"],
    rules: function(model) {
      model.statadd("Damage", "+1d6");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Battlecrazed Weapon +3"] = new RulesElement({
    name: "Battlecrazed Weapon +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1936",
    source: "Adventurer's Vault",
    categories: ["Battlecrazed Weapon +3", "ID_FMP_MAGIC_ITEM_1936"],
    rules: function(model) {
      model.statadd("Damage", "+2d6");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Battlecrazed Weapon +4"] = new RulesElement({
    name: "Battlecrazed Weapon +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1937",
    source: "Adventurer's Vault",
    categories: ["Battlecrazed Weapon +4", "ID_FMP_MAGIC_ITEM_1937"],
    rules: function(model) {
      model.statadd("Damage", "+2d6");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Battlecrazed Weapon +5"] = new RulesElement({
    name: "Battlecrazed Weapon +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1938",
    source: "Adventurer's Vault",
    categories: ["Battlecrazed Weapon +5", "ID_FMP_MAGIC_ITEM_1938"],
    rules: function(model) {
      model.statadd("Damage", "+3d6");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Battlecrazed Weapon +6"] = new RulesElement({
    name: "Battlecrazed Weapon +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1939",
    source: "Adventurer's Vault",
    categories: ["Battlecrazed Weapon +6", "ID_FMP_MAGIC_ITEM_1939"],
    rules: function(model) {
      model.statadd("Damage", "+3d6");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Battleforged Shield (epic tier)"] = new RulesElement({
    name: "Battleforged Shield (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3159",
    source: "Adventurer's Vault",
    categories: ["Battleforged Shield (epic tier)", "ID_FMP_MAGIC_ITEM_3159"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Battleforged Shield (heroic tier)"] = new RulesElement({
    name: "Battleforged Shield (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3155",
    source: "Adventurer's Vault",
    categories: ["Battleforged Shield (heroic tier)", "ID_FMP_MAGIC_ITEM_3155"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Battleforged Shield (paragon tier)"] = new RulesElement({
    name: "Battleforged Shield (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3157",
    source: "Adventurer's Vault",
    categories: ["Battleforged Shield (paragon tier)", "ID_FMP_MAGIC_ITEM_3157"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Battlemaster's Weapon +3"] = new RulesElement({
    name: "Battlemaster's Weapon +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1940",
    source: "Adventurer's Vault",
    categories: ["Battlemaster's Weapon +3", "ID_FMP_MAGIC_ITEM_1940"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Battlemaster's Weapon +4"] = new RulesElement({
    name: "Battlemaster's Weapon +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1941",
    source: "Adventurer's Vault",
    categories: ["Battlemaster's Weapon +4", "ID_FMP_MAGIC_ITEM_1941"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Battlemaster's Weapon +5"] = new RulesElement({
    name: "Battlemaster's Weapon +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1942",
    source: "Adventurer's Vault",
    categories: ["Battlemaster's Weapon +5", "ID_FMP_MAGIC_ITEM_1942"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Battlemaster's Weapon +6"] = new RulesElement({
    name: "Battlemaster's Weapon +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1943",
    source: "Adventurer's Vault",
    categories: ["Battlemaster's Weapon +6", "ID_FMP_MAGIC_ITEM_1943"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Beastbane (level 14)"] = new RulesElement({
    name: "Beastbane (level 14)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1328",
    source: "Adventurer's Vault",
    categories: ["Beastbane (level 14)", "ID_FMP_MAGIC_ITEM_1328"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Beastbane (level 19)"] = new RulesElement({
    name: "Beastbane (level 19)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1329",
    source: "Adventurer's Vault",
    categories: ["Beastbane (level 19)", "ID_FMP_MAGIC_ITEM_1329"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Beastbane (level 24)"] = new RulesElement({
    name: "Beastbane (level 24)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1330",
    source: "Adventurer's Vault",
    categories: ["Beastbane (level 24)", "ID_FMP_MAGIC_ITEM_1330"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Beastbane (level 29)"] = new RulesElement({
    name: "Beastbane (level 29)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1331",
    source: "Adventurer's Vault",
    categories: ["Beastbane (level 29)", "ID_FMP_MAGIC_ITEM_1331"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Beastbane (level 4)"] = new RulesElement({
    name: "Beastbane (level 4)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1326",
    source: "Adventurer's Vault",
    categories: ["Beastbane (level 4)", "ID_FMP_MAGIC_ITEM_1326"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Beastbane (level 9)"] = new RulesElement({
    name: "Beastbane (level 9)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1327",
    source: "Adventurer's Vault",
    categories: ["Beastbane (level 9)", "ID_FMP_MAGIC_ITEM_1327"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Beastlord Armor +2"] = new RulesElement({
    name: "Beastlord Armor +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1493",
    source: "Adventurer's Vault",
    categories: ["Beastlord Armor +2", "ID_FMP_MAGIC_ITEM_1493"],
    rules: function(model) {
      model.statadd("Armor Class", 2, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 2);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Beastlord Armor +3"] = new RulesElement({
    name: "Beastlord Armor +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1494",
    source: "Adventurer's Vault",
    categories: ["Beastlord Armor +3", "ID_FMP_MAGIC_ITEM_1494"],
    rules: function(model) {
      model.statadd("Armor Class", 3, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 3);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Beastlord Armor +4"] = new RulesElement({
    name: "Beastlord Armor +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1495",
    source: "Adventurer's Vault",
    categories: ["Beastlord Armor +4", "ID_FMP_MAGIC_ITEM_1495"],
    rules: function(model) {
      model.statadd("Armor Class", 4, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 4);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Beastlord Armor +5"] = new RulesElement({
    name: "Beastlord Armor +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1496",
    source: "Adventurer's Vault",
    categories: ["Beastlord Armor +5", "ID_FMP_MAGIC_ITEM_1496"],
    rules: function(model) {
      model.statadd("Armor Class", 5, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 5);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Beastlord Armor +6"] = new RulesElement({
    name: "Beastlord Armor +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1497",
    source: "Adventurer's Vault",
    categories: ["Beastlord Armor +6", "ID_FMP_MAGIC_ITEM_1497"],
    rules: function(model) {
      model.statadd("Armor Class", 6, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 6);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Belt of Blood (heroic tier)"] = new RulesElement({
    name: "Belt of Blood (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3774",
    source: "Adventurer's Vault",
    categories: ["Belt of Blood (heroic tier)", "ID_FMP_MAGIC_ITEM_3774"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Belt of Endurance (epic tier)"] = new RulesElement({
    name: "Belt of Endurance (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3777",
    source: "Adventurer's Vault",
    categories: ["Belt of Endurance (epic tier)", "ID_FMP_MAGIC_ITEM_3777"],
    rules: function(model) {
      model.statadd("Endurance Misc", 6, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Belt of Endurance (heroic tier)"] = new RulesElement({
    name: "Belt of Endurance (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3775",
    source: "Adventurer's Vault",
    categories: ["Belt of Endurance (heroic tier)", "ID_FMP_MAGIC_ITEM_3775"],
    rules: function(model) {
      model.statadd("Endurance Misc", 2, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Belt of Endurance (paragon tier)"] = new RulesElement({
    name: "Belt of Endurance (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3776",
    source: "Adventurer's Vault",
    categories: ["Belt of Endurance (paragon tier)", "ID_FMP_MAGIC_ITEM_3776"],
    rules: function(model) {
      model.statadd("Endurance Misc", 4, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Belt of Fitness (heroic tier)"] = new RulesElement({
    name: "Belt of Fitness (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3778",
    source: "Adventurer's Vault",
    categories: ["Belt of Fitness (heroic tier)", "ID_FMP_MAGIC_ITEM_3778"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Belt of Recovery (heroic tier)"] = new RulesElement({
    name: "Belt of Recovery (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3779",
    source: "Adventurer's Vault",
    categories: ["Belt of Recovery (heroic tier)", "ID_FMP_MAGIC_ITEM_3779"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Belt of Resilience (epic tier)"] = new RulesElement({
    name: "Belt of Resilience (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3784",
    source: "Adventurer's Vault",
    categories: ["Belt of Resilience (epic tier)", "ID_FMP_MAGIC_ITEM_3784"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Belt of Resilience (heroic tier)"] = new RulesElement({
    name: "Belt of Resilience (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3780",
    source: "Adventurer's Vault",
    categories: ["Belt of Resilience (heroic tier)", "ID_FMP_MAGIC_ITEM_3780"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Belt of Resilience (paragon tier)"] = new RulesElement({
    name: "Belt of Resilience (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3782",
    source: "Adventurer's Vault",
    categories: ["Belt of Resilience (paragon tier)", "ID_FMP_MAGIC_ITEM_3782"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Belt of the Brawler (heroic tier)"] = new RulesElement({
    name: "Belt of the Brawler (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3786",
    source: "Adventurer's Vault",
    categories: ["Belt of the Brawler (heroic tier)", "ID_FMP_MAGIC_ITEM_3786"],
    rules: function(model) {
      model.statadd("Unarmed Weapon", "Club");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Belt of Vim (epic tier)"] = new RulesElement({
    name: "Belt of Vim (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3789",
    source: "Adventurer's Vault",
    categories: ["Belt of Vim (epic tier)", "ID_FMP_MAGIC_ITEM_3789"],
    rules: function(model) {
      model.statadd("Fortitude Defense", 3);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Belt of Vim (heroic tier)"] = new RulesElement({
    name: "Belt of Vim (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3787",
    source: "Adventurer's Vault",
    categories: ["Belt of Vim (heroic tier)", "ID_FMP_MAGIC_ITEM_3787"],
    rules: function(model) {
      model.statadd("Fortitude Defense", 1);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Belt of Vim (paragon tier)"] = new RulesElement({
    name: "Belt of Vim (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3788",
    source: "Adventurer's Vault",
    categories: ["Belt of Vim (paragon tier)", "ID_FMP_MAGIC_ITEM_3788"],
    rules: function(model) {
      model.statadd("Fortitude Defense", 2);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Belt of Vitality (epic tier)"] = new RulesElement({
    name: "Belt of Vitality (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3790",
    source: "Adventurer's Vault",
    categories: ["Belt of Vitality (epic tier)", "ID_FMP_MAGIC_ITEM_3790"],
    rules: function(model) {
      model.statadd("Fortitude Defense", 2);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Bestial Armor +1"] = new RulesElement({
    name: "Bestial Armor +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1498",
    source: "Adventurer's Vault",
    categories: ["Bestial Armor +1", "ID_FMP_MAGIC_ITEM_1498"],
    rules: function(model) {
      model.statadd("Armor Class", 1, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 1);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Bestial Armor +2"] = new RulesElement({
    name: "Bestial Armor +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1499",
    source: "Adventurer's Vault",
    categories: ["Bestial Armor +2", "ID_FMP_MAGIC_ITEM_1499"],
    rules: function(model) {
      model.statadd("Armor Class", 2, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 2);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Bestial Armor +3"] = new RulesElement({
    name: "Bestial Armor +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1500",
    source: "Adventurer's Vault",
    categories: ["Bestial Armor +3", "ID_FMP_MAGIC_ITEM_1500"],
    rules: function(model) {
      model.statadd("Armor Class", 3, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 3);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Bestial Armor +4"] = new RulesElement({
    name: "Bestial Armor +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1501",
    source: "Adventurer's Vault",
    categories: ["Bestial Armor +4", "ID_FMP_MAGIC_ITEM_1501"],
    rules: function(model) {
      model.statadd("Armor Class", 4, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 4);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Bestial Armor +5"] = new RulesElement({
    name: "Bestial Armor +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1502",
    source: "Adventurer's Vault",
    categories: ["Bestial Armor +5", "ID_FMP_MAGIC_ITEM_1502"],
    rules: function(model) {
      model.statadd("Armor Class", 5, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 5);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Bestial Armor +6"] = new RulesElement({
    name: "Bestial Armor +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1503",
    source: "Adventurer's Vault",
    categories: ["Bestial Armor +6", "ID_FMP_MAGIC_ITEM_1503"],
    rules: function(model) {
      model.statadd("Armor Class", 6, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 6);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Bilethorn Weapon +3"] = new RulesElement({
    name: "Bilethorn Weapon +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1944",
    source: "Adventurer's Vault",
    categories: ["Bilethorn Weapon +3", "ID_FMP_MAGIC_ITEM_1944"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Bilethorn Weapon +4"] = new RulesElement({
    name: "Bilethorn Weapon +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1945",
    source: "Adventurer's Vault",
    categories: ["Bilethorn Weapon +4", "ID_FMP_MAGIC_ITEM_1945"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Bilethorn Weapon +5"] = new RulesElement({
    name: "Bilethorn Weapon +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1946",
    source: "Adventurer's Vault",
    categories: ["Bilethorn Weapon +5", "ID_FMP_MAGIC_ITEM_1946"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Bilethorn Weapon +6"] = new RulesElement({
    name: "Bilethorn Weapon +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1947",
    source: "Adventurer's Vault",
    categories: ["Bilethorn Weapon +6", "ID_FMP_MAGIC_ITEM_1947"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Black Cave Pearl (epic tier)"] = new RulesElement({
    name: "Black Cave Pearl (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_4047",
    source: "Adventurer's Vault",
    categories: ["Black Cave Pearl (epic tier)", "ID_FMP_MAGIC_ITEM_4047"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Black Cave Pearl (paragon tier)"] = new RulesElement({
    name: "Black Cave Pearl (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_4046",
    source: "Adventurer's Vault",
    categories: ["Black Cave Pearl (paragon tier)", "ID_FMP_MAGIC_ITEM_4046"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Black Dragon Bile (epic tier)"] = new RulesElement({
    name: "Black Dragon Bile (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_4050",
    source: "Adventurer's Vault",
    categories: ["Black Dragon Bile (epic tier)", "ID_FMP_MAGIC_ITEM_4050"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Black Dragon Bile (heroic tier)"] = new RulesElement({
    name: "Black Dragon Bile (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_4048",
    source: "Adventurer's Vault",
    categories: ["Black Dragon Bile (heroic tier)", "ID_FMP_MAGIC_ITEM_4048"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Black Dragon Bile (paragon tier)"] = new RulesElement({
    name: "Black Dragon Bile (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_4049",
    source: "Adventurer's Vault",
    categories: ["Black Dragon Bile (paragon tier)", "ID_FMP_MAGIC_ITEM_4049"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Black Feather of the Raven Queen +2"] = new RulesElement({
    name: "Black Feather of the Raven Queen +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2486",
    source: "Adventurer's Vault",
    categories: ["Black Feather of the Raven Queen +2", "ID_FMP_MAGIC_ITEM_2486"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Black Feather of the Raven Queen +3"] = new RulesElement({
    name: "Black Feather of the Raven Queen +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2487",
    source: "Adventurer's Vault",
    categories: ["Black Feather of the Raven Queen +3", "ID_FMP_MAGIC_ITEM_2487"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Black Feather of the Raven Queen +4"] = new RulesElement({
    name: "Black Feather of the Raven Queen +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2488",
    source: "Adventurer's Vault",
    categories: ["Black Feather of the Raven Queen +4", "ID_FMP_MAGIC_ITEM_2488"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Black Feather of the Raven Queen +5"] = new RulesElement({
    name: "Black Feather of the Raven Queen +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2489",
    source: "Adventurer's Vault",
    categories: ["Black Feather of the Raven Queen +5", "ID_FMP_MAGIC_ITEM_2489"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Black Feather of the Raven Queen +6"] = new RulesElement({
    name: "Black Feather of the Raven Queen +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2490",
    source: "Adventurer's Vault",
    categories: ["Black Feather of the Raven Queen +6", "ID_FMP_MAGIC_ITEM_2490"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Blackshroud Weapon +2"] = new RulesElement({
    name: "Blackshroud Weapon +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1948",
    source: "Adventurer's Vault",
    categories: ["Blackshroud Weapon +2", "ID_FMP_MAGIC_ITEM_1948"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Blackshroud Weapon +3"] = new RulesElement({
    name: "Blackshroud Weapon +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1949",
    source: "Adventurer's Vault",
    categories: ["Blackshroud Weapon +3", "ID_FMP_MAGIC_ITEM_1949"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Blackshroud Weapon +4"] = new RulesElement({
    name: "Blackshroud Weapon +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1950",
    source: "Adventurer's Vault",
    categories: ["Blackshroud Weapon +4", "ID_FMP_MAGIC_ITEM_1950"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Blackshroud Weapon +5"] = new RulesElement({
    name: "Blackshroud Weapon +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1951",
    source: "Adventurer's Vault",
    categories: ["Blackshroud Weapon +5", "ID_FMP_MAGIC_ITEM_1951"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Blackshroud Weapon +6"] = new RulesElement({
    name: "Blackshroud Weapon +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1952",
    source: "Adventurer's Vault",
    categories: ["Blackshroud Weapon +6", "ID_FMP_MAGIC_ITEM_1952"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Blacksmelt Weapon +3"] = new RulesElement({
    name: "Blacksmelt Weapon +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1953",
    source: "Adventurer's Vault",
    categories: ["Blacksmelt Weapon +3", "ID_FMP_MAGIC_ITEM_1953"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Blacksmelt Weapon +4"] = new RulesElement({
    name: "Blacksmelt Weapon +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1954",
    source: "Adventurer's Vault",
    categories: ["Blacksmelt Weapon +4", "ID_FMP_MAGIC_ITEM_1954"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Blacksmelt Weapon +5"] = new RulesElement({
    name: "Blacksmelt Weapon +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1955",
    source: "Adventurer's Vault",
    categories: ["Blacksmelt Weapon +5", "ID_FMP_MAGIC_ITEM_1955"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Blacksmelt Weapon +6"] = new RulesElement({
    name: "Blacksmelt Weapon +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1956",
    source: "Adventurer's Vault",
    categories: ["Blacksmelt Weapon +6", "ID_FMP_MAGIC_ITEM_1956"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Blade of Bahamut +4"] = new RulesElement({
    name: "Blade of Bahamut +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1957",
    source: "Adventurer's Vault",
    categories: ["Blade of Bahamut +4", "ID_FMP_MAGIC_ITEM_1957"],
    rules: function(model) {
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Blade of Bahamut +5"] = new RulesElement({
    name: "Blade of Bahamut +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1958",
    source: "Adventurer's Vault",
    categories: ["Blade of Bahamut +5", "ID_FMP_MAGIC_ITEM_1958"],
    rules: function(model) {
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Blade of Bahamut +6"] = new RulesElement({
    name: "Blade of Bahamut +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1959",
    source: "Adventurer's Vault",
    categories: ["Blade of Bahamut +6", "ID_FMP_MAGIC_ITEM_1959"],
    rules: function(model) {
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Blade of Night +3"] = new RulesElement({
    name: "Blade of Night +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1960",
    source: "Adventurer's Vault",
    categories: ["Blade of Night +3", "ID_FMP_MAGIC_ITEM_1960"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Blade of Night +4"] = new RulesElement({
    name: "Blade of Night +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1961",
    source: "Adventurer's Vault",
    categories: ["Blade of Night +4", "ID_FMP_MAGIC_ITEM_1961"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Blade of Night +5"] = new RulesElement({
    name: "Blade of Night +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1962",
    source: "Adventurer's Vault",
    categories: ["Blade of Night +5", "ID_FMP_MAGIC_ITEM_1962"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Blade of Night +6"] = new RulesElement({
    name: "Blade of Night +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1963",
    source: "Adventurer's Vault",
    categories: ["Blade of Night +6", "ID_FMP_MAGIC_ITEM_1963"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Blasting Circlet (paragon tier)"] = new RulesElement({
    name: "Blasting Circlet (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3421",
    source: "Adventurer's Vault",
    categories: ["Blasting Circlet (paragon tier)", "ID_FMP_MAGIC_ITEM_3421"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Blastpatch (level 14)"] = new RulesElement({
    name: "Blastpatch (level 14)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1334",
    source: "Adventurer's Vault",
    categories: ["Blastpatch (level 14)", "ID_FMP_MAGIC_ITEM_1334"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Blastpatch (level 19)"] = new RulesElement({
    name: "Blastpatch (level 19)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1335",
    source: "Adventurer's Vault",
    categories: ["Blastpatch (level 19)", "ID_FMP_MAGIC_ITEM_1335"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Blastpatch (level 24)"] = new RulesElement({
    name: "Blastpatch (level 24)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1336",
    source: "Adventurer's Vault",
    categories: ["Blastpatch (level 24)", "ID_FMP_MAGIC_ITEM_1336"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Blastpatch (level 29)"] = new RulesElement({
    name: "Blastpatch (level 29)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1337",
    source: "Adventurer's Vault",
    categories: ["Blastpatch (level 29)", "ID_FMP_MAGIC_ITEM_1337"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Blastpatch (level 4)"] = new RulesElement({
    name: "Blastpatch (level 4)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1332",
    source: "Adventurer's Vault",
    categories: ["Blastpatch (level 4)", "ID_FMP_MAGIC_ITEM_1332"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Blastpatch (level 9)"] = new RulesElement({
    name: "Blastpatch (level 9)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1333",
    source: "Adventurer's Vault",
    categories: ["Blastpatch (level 9)", "ID_FMP_MAGIC_ITEM_1333"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Blinding Bomb (level 13)"] = new RulesElement({
    name: "Blinding Bomb (level 13)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1340",
    source: "Adventurer's Vault",
    categories: ["Blinding Bomb (level 13)", "ID_FMP_MAGIC_ITEM_1340"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Blinding Bomb (level 18)"] = new RulesElement({
    name: "Blinding Bomb (level 18)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1341",
    source: "Adventurer's Vault",
    categories: ["Blinding Bomb (level 18)", "ID_FMP_MAGIC_ITEM_1341"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Blinding Bomb (level 23)"] = new RulesElement({
    name: "Blinding Bomb (level 23)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1342",
    source: "Adventurer's Vault",
    categories: ["Blinding Bomb (level 23)", "ID_FMP_MAGIC_ITEM_1342"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Blinding Bomb (level 28)"] = new RulesElement({
    name: "Blinding Bomb (level 28)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1343",
    source: "Adventurer's Vault",
    categories: ["Blinding Bomb (level 28)", "ID_FMP_MAGIC_ITEM_1343"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Blinding Bomb (level 3)"] = new RulesElement({
    name: "Blinding Bomb (level 3)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1338",
    source: "Adventurer's Vault,Dungeon Magazine 171",
    categories: ["Blinding Bomb (level 3)", "ID_FMP_MAGIC_ITEM_1338"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Blinding Bomb (level 8)"] = new RulesElement({
    name: "Blinding Bomb (level 8)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1339",
    source: "Adventurer's Vault",
    categories: ["Blinding Bomb (level 8)", "ID_FMP_MAGIC_ITEM_1339"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Blink Ring (epic tier)"] = new RulesElement({
    name: "Blink Ring (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3724",
    source: "Adventurer's Vault",
    categories: ["Blink Ring (epic tier)", "ID_FMP_MAGIC_ITEM_3724"],
    rules: function(model) {
      model.statadd("Thievery Misc", 3, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Bloodclaw Weapon +1"] = new RulesElement({
    name: "Bloodclaw Weapon +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1964",
    source: "Adventurer's Vault",
    categories: ["Bloodclaw Weapon +1", "ID_FMP_MAGIC_ITEM_1964"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Bloodclaw Weapon +2"] = new RulesElement({
    name: "Bloodclaw Weapon +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1965",
    source: "Adventurer's Vault",
    categories: ["Bloodclaw Weapon +2", "ID_FMP_MAGIC_ITEM_1965"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Bloodclaw Weapon +3"] = new RulesElement({
    name: "Bloodclaw Weapon +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1966",
    source: "Adventurer's Vault",
    categories: ["Bloodclaw Weapon +3", "ID_FMP_MAGIC_ITEM_1966"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Bloodclaw Weapon +4"] = new RulesElement({
    name: "Bloodclaw Weapon +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1967",
    source: "Adventurer's Vault",
    categories: ["Bloodclaw Weapon +4", "ID_FMP_MAGIC_ITEM_1967"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Bloodclaw Weapon +5"] = new RulesElement({
    name: "Bloodclaw Weapon +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1968",
    source: "Adventurer's Vault",
    categories: ["Bloodclaw Weapon +5", "ID_FMP_MAGIC_ITEM_1968"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Bloodclaw Weapon +6"] = new RulesElement({
    name: "Bloodclaw Weapon +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1969",
    source: "Adventurer's Vault",
    categories: ["Bloodclaw Weapon +6", "ID_FMP_MAGIC_ITEM_1969"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Bloodcurse Rod +1"] = new RulesElement({
    name: "Bloodcurse Rod +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2783",
    source: "Adventurer's Vault",
    categories: ["Bloodcurse Rod +1", "ID_FMP_MAGIC_ITEM_2783"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Bloodcurse Rod +2"] = new RulesElement({
    name: "Bloodcurse Rod +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2784",
    source: "Adventurer's Vault",
    categories: ["Bloodcurse Rod +2", "ID_FMP_MAGIC_ITEM_2784"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Bloodcurse Rod +3"] = new RulesElement({
    name: "Bloodcurse Rod +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2785",
    source: "Adventurer's Vault",
    categories: ["Bloodcurse Rod +3", "ID_FMP_MAGIC_ITEM_2785"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Bloodcurse Rod +4"] = new RulesElement({
    name: "Bloodcurse Rod +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2786",
    source: "Adventurer's Vault",
    categories: ["Bloodcurse Rod +4", "ID_FMP_MAGIC_ITEM_2786"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Bloodcurse Rod +5"] = new RulesElement({
    name: "Bloodcurse Rod +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2787",
    source: "Adventurer's Vault",
    categories: ["Bloodcurse Rod +5", "ID_FMP_MAGIC_ITEM_2787"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Bloodcurse Rod +6"] = new RulesElement({
    name: "Bloodcurse Rod +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2788",
    source: "Adventurer's Vault",
    categories: ["Bloodcurse Rod +6", "ID_FMP_MAGIC_ITEM_2788"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Bloodfire Armor +3"] = new RulesElement({
    name: "Bloodfire Armor +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1504",
    source: "Adventurer's Vault",
    categories: ["Bloodfire Armor +3", "ID_FMP_MAGIC_ITEM_1504"],
    rules: function(model) {
      model.statadd("Armor Class", 3, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 3);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Bloodfire Armor +4"] = new RulesElement({
    name: "Bloodfire Armor +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1505",
    source: "Adventurer's Vault",
    categories: ["Bloodfire Armor +4", "ID_FMP_MAGIC_ITEM_1505"],
    rules: function(model) {
      model.statadd("Armor Class", 4, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 4);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Bloodfire Armor +5"] = new RulesElement({
    name: "Bloodfire Armor +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1506",
    source: "Adventurer's Vault",
    categories: ["Bloodfire Armor +5", "ID_FMP_MAGIC_ITEM_1506"],
    rules: function(model) {
      model.statadd("Armor Class", 5, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 5);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Bloodfire Armor +6"] = new RulesElement({
    name: "Bloodfire Armor +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1507",
    source: "Adventurer's Vault",
    categories: ["Bloodfire Armor +6", "ID_FMP_MAGIC_ITEM_1507"],
    rules: function(model) {
      model.statadd("Armor Class", 6, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 6);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Bloodguard Shield (epic tier)"] = new RulesElement({
    name: "Bloodguard Shield (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3165",
    source: "Adventurer's Vault",
    categories: ["Bloodguard Shield (epic tier)", "ID_FMP_MAGIC_ITEM_3165"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Bloodguard Shield (heroic tier)"] = new RulesElement({
    name: "Bloodguard Shield (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3161",
    source: "Adventurer's Vault",
    categories: ["Bloodguard Shield (heroic tier)", "ID_FMP_MAGIC_ITEM_3161"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Bloodguard Shield (paragon tier)"] = new RulesElement({
    name: "Bloodguard Shield (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3163",
    source: "Adventurer's Vault",
    categories: ["Bloodguard Shield (paragon tier)", "ID_FMP_MAGIC_ITEM_3163"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Bloodiron Armor +2"] = new RulesElement({
    name: "Bloodiron Armor +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1508",
    source: "Adventurer's Vault",
    categories: ["Bloodiron Armor +2", "ID_FMP_MAGIC_ITEM_1508"],
    rules: function(model) {
      model.statadd("Armor Class", 2, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 2);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Bloodiron Armor +3"] = new RulesElement({
    name: "Bloodiron Armor +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1509",
    source: "Adventurer's Vault",
    categories: ["Bloodiron Armor +3", "ID_FMP_MAGIC_ITEM_1509"],
    rules: function(model) {
      model.statadd("Armor Class", 3, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 3);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Bloodiron Armor +4"] = new RulesElement({
    name: "Bloodiron Armor +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1510",
    source: "Adventurer's Vault",
    categories: ["Bloodiron Armor +4", "ID_FMP_MAGIC_ITEM_1510"],
    rules: function(model) {
      model.statadd("Armor Class", 4, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 4);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Bloodiron Armor +5"] = new RulesElement({
    name: "Bloodiron Armor +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1511",
    source: "Adventurer's Vault",
    categories: ["Bloodiron Armor +5", "ID_FMP_MAGIC_ITEM_1511"],
    rules: function(model) {
      model.statadd("Armor Class", 5, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 5);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Bloodiron Armor +6"] = new RulesElement({
    name: "Bloodiron Armor +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1512",
    source: "Adventurer's Vault",
    categories: ["Bloodiron Armor +6", "ID_FMP_MAGIC_ITEM_1512"],
    rules: function(model) {
      model.statadd("Armor Class", 6, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 6);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Bloodiron Rod +3"] = new RulesElement({
    name: "Bloodiron Rod +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2789",
    source: "Adventurer's Vault",
    categories: ["Bloodiron Rod +3", "ID_FMP_MAGIC_ITEM_2789"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Bloodiron Rod +4"] = new RulesElement({
    name: "Bloodiron Rod +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2790",
    source: "Adventurer's Vault",
    categories: ["Bloodiron Rod +4", "ID_FMP_MAGIC_ITEM_2790"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Bloodiron Rod +5"] = new RulesElement({
    name: "Bloodiron Rod +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2791",
    source: "Adventurer's Vault",
    categories: ["Bloodiron Rod +5", "ID_FMP_MAGIC_ITEM_2791"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Bloodiron Rod +6"] = new RulesElement({
    name: "Bloodiron Rod +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2792",
    source: "Adventurer's Vault",
    categories: ["Bloodiron Rod +6", "ID_FMP_MAGIC_ITEM_2792"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Bloodiron Weapon +3"] = new RulesElement({
    name: "Bloodiron Weapon +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1970",
    source: "Adventurer's Vault",
    categories: ["Bloodiron Weapon +3", "ID_FMP_MAGIC_ITEM_1970"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Bloodiron Weapon +4"] = new RulesElement({
    name: "Bloodiron Weapon +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1971",
    source: "Adventurer's Vault",
    categories: ["Bloodiron Weapon +4", "ID_FMP_MAGIC_ITEM_1971"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Bloodiron Weapon +5"] = new RulesElement({
    name: "Bloodiron Weapon +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1972",
    source: "Adventurer's Vault",
    categories: ["Bloodiron Weapon +5", "ID_FMP_MAGIC_ITEM_1972"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Bloodiron Weapon +6"] = new RulesElement({
    name: "Bloodiron Weapon +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1973",
    source: "Adventurer's Vault",
    categories: ["Bloodiron Weapon +6", "ID_FMP_MAGIC_ITEM_1973"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Bloodshored Shield (epic tier)"] = new RulesElement({
    name: "Bloodshored Shield (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3171",
    source: "Adventurer's Vault",
    categories: ["Bloodshored Shield (epic tier)", "ID_FMP_MAGIC_ITEM_3171"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Bloodshored Shield (heroic tier)"] = new RulesElement({
    name: "Bloodshored Shield (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3167",
    source: "Adventurer's Vault",
    categories: ["Bloodshored Shield (heroic tier)", "ID_FMP_MAGIC_ITEM_3167"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Bloodshored Shield (paragon tier)"] = new RulesElement({
    name: "Bloodshored Shield (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3169",
    source: "Adventurer's Vault",
    categories: ["Bloodshored Shield (paragon tier)", "ID_FMP_MAGIC_ITEM_3169"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Bloodsoaked Bracers (epic tier)"] = new RulesElement({
    name: "Bloodsoaked Bracers (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3174",
    source: "Adventurer's Vault",
    categories: ["Bloodsoaked Bracers (epic tier)", "ID_FMP_MAGIC_ITEM_3174"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Bloodsoaked Bracers (heroic tier)"] = new RulesElement({
    name: "Bloodsoaked Bracers (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3172",
    source: "Adventurer's Vault",
    categories: ["Bloodsoaked Bracers (heroic tier)", "ID_FMP_MAGIC_ITEM_3172"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Bloodsoaked Bracers (paragon tier)"] = new RulesElement({
    name: "Bloodsoaked Bracers (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3173",
    source: "Adventurer's Vault",
    categories: ["Bloodsoaked Bracers (paragon tier)", "ID_FMP_MAGIC_ITEM_3173"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Bloodsoaked Shield (epic tier)"] = new RulesElement({
    name: "Bloodsoaked Shield (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3177",
    source: "Adventurer's Vault",
    categories: ["Bloodsoaked Shield (epic tier)", "ID_FMP_MAGIC_ITEM_3177"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Bloodsoaked Shield (heroic tier)"] = new RulesElement({
    name: "Bloodsoaked Shield (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3175",
    source: "Adventurer's Vault",
    categories: ["Bloodsoaked Shield (heroic tier)", "ID_FMP_MAGIC_ITEM_3175"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Bloodsoaked Shield (paragon tier)"] = new RulesElement({
    name: "Bloodsoaked Shield (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3176",
    source: "Adventurer's Vault",
    categories: ["Bloodsoaked Shield (paragon tier)", "ID_FMP_MAGIC_ITEM_3176"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Bloodstinger Poison (level 13)"] = new RulesElement({
    name: "Bloodstinger Poison (level 13)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1346",
    source: "Adventurer's Vault",
    categories: ["Bloodstinger Poison (level 13)", "ID_FMP_MAGIC_ITEM_1346"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Bloodstinger Poison (level 18)"] = new RulesElement({
    name: "Bloodstinger Poison (level 18)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1347",
    source: "Adventurer's Vault",
    categories: ["Bloodstinger Poison (level 18)", "ID_FMP_MAGIC_ITEM_1347"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Bloodstinger Poison (level 23)"] = new RulesElement({
    name: "Bloodstinger Poison (level 23)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1348",
    source: "Adventurer's Vault",
    categories: ["Bloodstinger Poison (level 23)", "ID_FMP_MAGIC_ITEM_1348"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Bloodstinger Poison (level 28)"] = new RulesElement({
    name: "Bloodstinger Poison (level 28)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1349",
    source: "Adventurer's Vault",
    categories: ["Bloodstinger Poison (level 28)", "ID_FMP_MAGIC_ITEM_1349"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Bloodstinger Poison (level 3)"] = new RulesElement({
    name: "Bloodstinger Poison (level 3)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1344",
    source: "Adventurer's Vault",
    categories: ["Bloodstinger Poison (level 3)", "ID_FMP_MAGIC_ITEM_1344"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Bloodstinger Poison (level 8)"] = new RulesElement({
    name: "Bloodstinger Poison (level 8)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1345",
    source: "Adventurer's Vault",
    categories: ["Bloodstinger Poison (level 8)", "ID_FMP_MAGIC_ITEM_1345"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Bloodstone Spider (paragon tier)"] = new RulesElement({
    name: "Bloodstone Spider (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3908",
    source: "Adventurer's Vault",
    categories: ["Bloodstone Spider (paragon tier)", "ID_FMP_MAGIC_ITEM_3908"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Bloodtheft Armor +4"] = new RulesElement({
    name: "Bloodtheft Armor +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1513",
    source: "Adventurer's Vault",
    categories: ["Bloodtheft Armor +4", "ID_FMP_MAGIC_ITEM_1513"],
    rules: function(model) {
      model.statadd("Armor Class", 4, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 4);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Bloodtheft Armor +5"] = new RulesElement({
    name: "Bloodtheft Armor +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1514",
    source: "Adventurer's Vault",
    categories: ["Bloodtheft Armor +5", "ID_FMP_MAGIC_ITEM_1514"],
    rules: function(model) {
      model.statadd("Armor Class", 5, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 5);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Bloodtheft Armor +6"] = new RulesElement({
    name: "Bloodtheft Armor +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1515",
    source: "Adventurer's Vault",
    categories: ["Bloodtheft Armor +6", "ID_FMP_MAGIC_ITEM_1515"],
    rules: function(model) {
      model.statadd("Armor Class", 6, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 6);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Bloodthirst Bracers (epic tier)"] = new RulesElement({
    name: "Bloodthirst Bracers (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3180",
    source: "Adventurer's Vault",
    categories: ["Bloodthirst Bracers (epic tier)", "ID_FMP_MAGIC_ITEM_3180"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Bloodthirst Bracers (heroic tier)"] = new RulesElement({
    name: "Bloodthirst Bracers (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3178",
    source: "Adventurer's Vault",
    categories: ["Bloodthirst Bracers (heroic tier)", "ID_FMP_MAGIC_ITEM_3178"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Bloodthirst Bracers (paragon tier)"] = new RulesElement({
    name: "Bloodthirst Bracers (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3179",
    source: "Adventurer's Vault",
    categories: ["Bloodthirst Bracers (paragon tier)", "ID_FMP_MAGIC_ITEM_3179"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Bloodthirsty Weapon +3"] = new RulesElement({
    name: "Bloodthirsty Weapon +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1974",
    source: "Adventurer's Vault",
    categories: ["Bloodthirsty Weapon +3", "ID_FMP_MAGIC_ITEM_1974"],
    rules: function(model) {
      model.statadd("attack rolls", function() { /* against bloodied targets */ return 1; }, "item");
      model.statadd("damage rolls", function() { /* against bloodied targets */ return 3; }, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Bloodthirsty Weapon +4"] = new RulesElement({
    name: "Bloodthirsty Weapon +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1975",
    source: "Adventurer's Vault",
    categories: ["Bloodthirsty Weapon +4", "ID_FMP_MAGIC_ITEM_1975"],
    rules: function(model) {
      model.statadd("attack rolls", function() { /* against bloodied targets */ return 1; }, "item");
      model.statadd("damage rolls", function() { /* against bloodied targets */ return 4; }, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Bloodthirsty Weapon +5"] = new RulesElement({
    name: "Bloodthirsty Weapon +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1976",
    source: "Adventurer's Vault",
    categories: ["Bloodthirsty Weapon +5", "ID_FMP_MAGIC_ITEM_1976"],
    rules: function(model) {
      model.statadd("attack rolls", function() { /* against bloodied targets */ return 1; }, "item");
      model.statadd("damage rolls", function() { /* against bloodied targets */ return 5; }, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Bloodthirsty Weapon +6"] = new RulesElement({
    name: "Bloodthirsty Weapon +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1977",
    source: "Adventurer's Vault",
    categories: ["Bloodthirsty Weapon +6", "ID_FMP_MAGIC_ITEM_1977"],
    rules: function(model) {
      model.statadd("attack rolls", function() { /* against bloodied targets */ return 1; }, "item");
      model.statadd("damage rolls", function() { /* against bloodied targets */ return 6; }, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Bolstering Armor +5"] = new RulesElement({
    name: "Bolstering Armor +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1516",
    source: "Adventurer's Vault",
    categories: ["Bolstering Armor +5", "ID_FMP_MAGIC_ITEM_1516"],
    rules: function(model) {
      model.statadd("Armor Class", 5, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 5);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Bolstering Armor +6"] = new RulesElement({
    name: "Bolstering Armor +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1517",
    source: "Adventurer's Vault",
    categories: ["Bolstering Armor +6", "ID_FMP_MAGIC_ITEM_1517"],
    rules: function(model) {
      model.statadd("Armor Class", 6, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 6);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Bone Ring of Better Fortune (paragon tier)"] = new RulesElement({
    name: "Bone Ring of Better Fortune (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3725",
    source: "Adventurer's Vault",
    categories: ["Bone Ring of Better Fortune (paragon tier)", "ID_FMP_MAGIC_ITEM_3725"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Bone Ring of Preservation (paragon tier)"] = new RulesElement({
    name: "Bone Ring of Preservation (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3726",
    source: "Adventurer's Vault",
    categories: ["Bone Ring of Preservation (paragon tier)", "ID_FMP_MAGIC_ITEM_3726"],
    rules: function(model) {
      model.statadd("resist:necrotic", 15, "resist");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Bonegrim Armor +3"] = new RulesElement({
    name: "Bonegrim Armor +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1518",
    source: "Adventurer's Vault",
    categories: ["Bonegrim Armor +3", "ID_FMP_MAGIC_ITEM_1518"],
    rules: function(model) {
      model.statadd("Intimidate Misc", 2, "item");
      model.statadd("resist:necrotic", 5, "resist");
      model.statadd("resist:poison", 5, "resist");
      model.statadd("Armor Class", 3, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 3);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Bonegrim Armor +4"] = new RulesElement({
    name: "Bonegrim Armor +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1519",
    source: "Adventurer's Vault",
    categories: ["Bonegrim Armor +4", "ID_FMP_MAGIC_ITEM_1519"],
    rules: function(model) {
      model.statadd("Intimidate Misc", 2, "item");
      model.statadd("resist:necrotic", 10, "resist");
      model.statadd("resist:poison", 10, "resist");
      model.statadd("Armor Class", 4, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 4);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Bonegrim Armor +5"] = new RulesElement({
    name: "Bonegrim Armor +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1520",
    source: "Adventurer's Vault",
    categories: ["Bonegrim Armor +5", "ID_FMP_MAGIC_ITEM_1520"],
    rules: function(model) {
      model.statadd("Intimidate Misc", 2, "item");
      model.statadd("resist:necrotic", 15, "resist");
      model.statadd("resist:poison", 15, "resist");
      model.statadd("Armor Class", 5, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 5);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Bonegrim Armor +6"] = new RulesElement({
    name: "Bonegrim Armor +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1521",
    source: "Adventurer's Vault",
    categories: ["Bonegrim Armor +6", "ID_FMP_MAGIC_ITEM_1521"],
    rules: function(model) {
      model.statadd("Intimidate Misc", 2, "item");
      model.statadd("resist:necrotic", 10, "resist");
      model.statadd("resist:poison", 10, "resist");
      model.statadd("Armor Class", 6, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 6);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Boots of Adept Charging (heroic tier)"] = new RulesElement({
    name: "Boots of Adept Charging (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3301",
    source: "Adventurer's Vault",
    categories: ["Boots of Adept Charging (heroic tier)", "ID_FMP_MAGIC_ITEM_3301"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Boots of Dancing (paragon tier)"] = new RulesElement({
    name: "Boots of Dancing (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3302",
    source: "Adventurer's Vault",
    categories: ["Boots of Dancing (paragon tier)", "ID_FMP_MAGIC_ITEM_3302"],
    rules: function(model) {
      model.statadd("Reflex Defense", 1);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Boots of Eagerness (heroic tier)"] = new RulesElement({
    name: "Boots of Eagerness (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3303",
    source: "Adventurer's Vault",
    categories: ["Boots of Eagerness (heroic tier)", "ID_FMP_MAGIC_ITEM_3303"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Boots of Equilibrium (heroic tier)"] = new RulesElement({
    name: "Boots of Equilibrium (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3304",
    source: "Adventurer's Vault",
    categories: ["Boots of Equilibrium (heroic tier)", "ID_FMP_MAGIC_ITEM_3304"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Boots of Free Movement (heroic tier)"] = new RulesElement({
    name: "Boots of Free Movement (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3305",
    source: "Adventurer's Vault",
    categories: ["Boots of Free Movement (heroic tier)", "ID_FMP_MAGIC_ITEM_3305"],
    rules: function(model) {
      model.statadd("Saving Throws", function() { /* against effects that apply the slowed, immobilized, or restrained condition */ return 2; }, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Boots of Furious Speed (heroic tier)"] = new RulesElement({
    name: "Boots of Furious Speed (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3306",
    source: "Adventurer's Vault",
    categories: ["Boots of Furious Speed (heroic tier)", "ID_FMP_MAGIC_ITEM_3306"],
    rules: function(model) {
      model.statadd("Speed", function() { /* while bloodied */ return 2; }, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Boots of Many Tracks (heroic tier)"] = new RulesElement({
    name: "Boots of Many Tracks (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3307",
    source: "Adventurer's Vault",
    categories: ["Boots of Many Tracks (heroic tier)", "ID_FMP_MAGIC_ITEM_3307"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Boots of Quickness (epic tier)"] = new RulesElement({
    name: "Boots of Quickness (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3310",
    source: "Adventurer's Vault",
    categories: ["Boots of Quickness (epic tier)", "ID_FMP_MAGIC_ITEM_3310"],
    rules: function(model) {
      model.statadd("Reflex Defense", 3);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Boots of Quickness (heroic tier)"] = new RulesElement({
    name: "Boots of Quickness (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3308",
    source: "Adventurer's Vault",
    categories: ["Boots of Quickness (heroic tier)", "ID_FMP_MAGIC_ITEM_3308"],
    rules: function(model) {
      model.statadd("Reflex Defense", 1);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Boots of Quickness (paragon tier)"] = new RulesElement({
    name: "Boots of Quickness (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3309",
    source: "Adventurer's Vault",
    categories: ["Boots of Quickness (paragon tier)", "ID_FMP_MAGIC_ITEM_3309"],
    rules: function(model) {
      model.statadd("Reflex Defense", 2);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Boots of Sand and Sea (heroic tier)"] = new RulesElement({
    name: "Boots of Sand and Sea (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3311",
    source: "Adventurer's Vault",
    categories: ["Boots of Sand and Sea (heroic tier)", "ID_FMP_MAGIC_ITEM_3311"],
    rules: function(model) {
      model.statadd("Speed", function() { 
        if (!(model.wearing('Armor', ['heavy']))) {
          return 1;
        } else return 0;
       }, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Boots of Speed (epic tier)"] = new RulesElement({
    name: "Boots of Speed (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3312",
    source: "Adventurer's Vault",
    categories: ["Boots of Speed (epic tier)", "ID_FMP_MAGIC_ITEM_3312"],
    rules: function(model) {
      model.statadd("Speed", 2, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Boots of Stealth (epic tier)"] = new RulesElement({
    name: "Boots of Stealth (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3315",
    source: "Adventurer's Vault",
    categories: ["Boots of Stealth (epic tier)", "ID_FMP_MAGIC_ITEM_3315"],
    rules: function(model) {
      model.statadd("Stealth Misc", 6, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Boots of Stealth (heroic tier)"] = new RulesElement({
    name: "Boots of Stealth (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3313",
    source: "Adventurer's Vault",
    categories: ["Boots of Stealth (heroic tier)", "ID_FMP_MAGIC_ITEM_3313"],
    rules: function(model) {
      model.statadd("Stealth Misc", 2, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Boots of Stealth (paragon tier)"] = new RulesElement({
    name: "Boots of Stealth (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3314",
    source: "Adventurer's Vault",
    categories: ["Boots of Stealth (paragon tier)", "ID_FMP_MAGIC_ITEM_3314"],
    rules: function(model) {
      model.statadd("Stealth Misc", 4, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Boots of Swimming (paragon tier)"] = new RulesElement({
    name: "Boots of Swimming (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3316",
    source: "Adventurer's Vault",
    categories: ["Boots of Swimming (paragon tier)", "ID_FMP_MAGIC_ITEM_3316"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Boots of Teleportation (epic tier)"] = new RulesElement({
    name: "Boots of Teleportation (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3317",
    source: "Adventurer's Vault",
    categories: ["Boots of Teleportation (epic tier)", "ID_FMP_MAGIC_ITEM_3317"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Boots of the Fencing Master (heroic tier)"] = new RulesElement({
    name: "Boots of the Fencing Master (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3318",
    source: "Adventurer's Vault",
    categories: ["Boots of the Fencing Master (heroic tier)", "ID_FMP_MAGIC_ITEM_3318"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Boots of Withdrawal (paragon tier)"] = new RulesElement({
    name: "Boots of Withdrawal (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3319",
    source: "Adventurer's Vault",
    categories: ["Boots of Withdrawal (paragon tier)", "ID_FMP_MAGIC_ITEM_3319"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Bottled Smoke (paragon tier)"] = new RulesElement({
    name: "Bottled Smoke (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3826",
    source: "Adventurer's Vault",
    categories: ["Bottled Smoke (paragon tier)", "ID_FMP_MAGIC_ITEM_3826"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Bowl of Purity (heroic tier)"] = new RulesElement({
    name: "Bowl of Purity (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3827",
    source: "Adventurer's Vault",
    categories: ["Bowl of Purity (heroic tier)", "ID_FMP_MAGIC_ITEM_3827"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Bracers of Archery (epic tier)"] = new RulesElement({
    name: "Bracers of Archery (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3183",
    source: "Adventurer's Vault",
    categories: ["Bracers of Archery (epic tier)", "ID_FMP_MAGIC_ITEM_3183"],
    rules: function(model) {
      model.statadd("bow group:damage", 6, "item");
      model.statadd("crossbow group:damage", 6, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Bracers of Archery (heroic tier)"] = new RulesElement({
    name: "Bracers of Archery (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3181",
    source: "Adventurer's Vault",
    categories: ["Bracers of Archery (heroic tier)", "ID_FMP_MAGIC_ITEM_3181"],
    rules: function(model) {
      model.statadd("bow group:damage", 2, "item");
      model.statadd("crossbow group:damage", 2, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Bracers of Archery (paragon tier)"] = new RulesElement({
    name: "Bracers of Archery (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3182",
    source: "Adventurer's Vault",
    categories: ["Bracers of Archery (paragon tier)", "ID_FMP_MAGIC_ITEM_3182"],
    rules: function(model) {
      model.statadd("bow group:damage", 4, "item");
      model.statadd("crossbow group:damage", 4, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Bracers of Bold Maneuvering (heroic tier)"] = new RulesElement({
    name: "Bracers of Bold Maneuvering (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3184",
    source: "Adventurer's Vault",
    categories: ["Bracers of Bold Maneuvering (heroic tier)", "ID_FMP_MAGIC_ITEM_3184"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Bracers of Bold Maneuvering (paragon tier)"] = new RulesElement({
    name: "Bracers of Bold Maneuvering (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3185",
    source: "Adventurer's Vault",
    categories: ["Bracers of Bold Maneuvering (paragon tier)", "ID_FMP_MAGIC_ITEM_3185"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Bracers of Infinite Blades (level 11)"] = new RulesElement({
    name: "Bracers of Infinite Blades (level 11)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3186",
    source: "Adventurer's Vault",
    categories: ["Bracers of Infinite Blades (level 11)", "ID_FMP_MAGIC_ITEM_3186"],
    rules: function(model) {
      // unsupported rule: cbimporter.Rules.ModifyRule
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Bracers of Infinite Blades (level 16)"] = new RulesElement({
    name: "Bracers of Infinite Blades (level 16)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3187",
    source: "Adventurer's Vault",
    categories: ["Bracers of Infinite Blades (level 16)", "ID_FMP_MAGIC_ITEM_3187"],
    rules: function(model) {
      // unsupported rule: cbimporter.Rules.ModifyRule
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Bracers of Iron Arcana (paragon tier)"] = new RulesElement({
    name: "Bracers of Iron Arcana (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3188",
    source: "Adventurer's Vault",
    categories: ["Bracers of Iron Arcana (paragon tier)", "ID_FMP_MAGIC_ITEM_3188"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Bracers of Mental Might (heroic tier)"] = new RulesElement({
    name: "Bracers of Mental Might (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3189",
    source: "Adventurer's Vault",
    categories: ["Bracers of Mental Might (heroic tier)", "ID_FMP_MAGIC_ITEM_3189"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Bracers of Rejuvenation (heroic tier)"] = new RulesElement({
    name: "Bracers of Rejuvenation (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3190",
    source: "Adventurer's Vault",
    categories: ["Bracers of Rejuvenation (heroic tier)", "ID_FMP_MAGIC_ITEM_3190"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Bracers of Respite (epic tier)"] = new RulesElement({
    name: "Bracers of Respite (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3193",
    source: "Adventurer's Vault",
    categories: ["Bracers of Respite (epic tier)", "ID_FMP_MAGIC_ITEM_3193"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Bracers of Respite (heroic tier)"] = new RulesElement({
    name: "Bracers of Respite (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3191",
    source: "Adventurer's Vault",
    categories: ["Bracers of Respite (heroic tier)", "ID_FMP_MAGIC_ITEM_3191"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Bracers of Respite (paragon tier)"] = new RulesElement({
    name: "Bracers of Respite (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3192",
    source: "Adventurer's Vault",
    categories: ["Bracers of Respite (paragon tier)", "ID_FMP_MAGIC_ITEM_3192"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Bracers of Tactical Blows (epic tier)"] = new RulesElement({
    name: "Bracers of Tactical Blows (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3196",
    source: "Adventurer's Vault",
    categories: ["Bracers of Tactical Blows (epic tier)", "ID_FMP_MAGIC_ITEM_3196"],
    rules: function(model) {
      model.statadd("Damage", "+3d6");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Bracers of Tactical Blows (heroic tier)"] = new RulesElement({
    name: "Bracers of Tactical Blows (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3194",
    source: "Adventurer's Vault",
    categories: ["Bracers of Tactical Blows (heroic tier)", "ID_FMP_MAGIC_ITEM_3194"],
    rules: function(model) {
      model.statadd("Damage", "+1d6");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Bracers of Tactical Blows (paragon tier)"] = new RulesElement({
    name: "Bracers of Tactical Blows (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3195",
    source: "Adventurer's Vault",
    categories: ["Bracers of Tactical Blows (paragon tier)", "ID_FMP_MAGIC_ITEM_3195"],
    rules: function(model) {
      model.statadd("Damage", "+2d6");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Bracers of Wound Closure (paragon tier)"] = new RulesElement({
    name: "Bracers of Wound Closure (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3197",
    source: "Adventurer's Vault",
    categories: ["Bracers of Wound Closure (paragon tier)", "ID_FMP_MAGIC_ITEM_3197"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Branchrunners (heroic tier)"] = new RulesElement({
    name: "Branchrunners (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3320",
    source: "Adventurer's Vault",
    categories: ["Branchrunners (heroic tier)", "ID_FMP_MAGIC_ITEM_3320"],
    rules: function(model) {
      model.statadd("Acrobatis misc", function() { /* to balance or reduce damage from a fall */ return 4; }, "item");
      model.statadd("Athletics Misc", function() { /* to climb and jump while in trees */ return 4; }, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Breach Bracers (epic tier)"] = new RulesElement({
    name: "Breach Bracers (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3200",
    source: "Adventurer's Vault",
    categories: ["Breach Bracers (epic tier)", "ID_FMP_MAGIC_ITEM_3200"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Breach Bracers (heroic tier)"] = new RulesElement({
    name: "Breach Bracers (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3198",
    source: "Adventurer's Vault",
    categories: ["Breach Bracers (heroic tier)", "ID_FMP_MAGIC_ITEM_3198"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Breach Bracers (paragon tier)"] = new RulesElement({
    name: "Breach Bracers (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3199",
    source: "Adventurer's Vault",
    categories: ["Breach Bracers (paragon tier)", "ID_FMP_MAGIC_ITEM_3199"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Breaching Armor +1"] = new RulesElement({
    name: "Breaching Armor +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1522",
    source: "Adventurer's Vault",
    categories: ["Breaching Armor +1", "ID_FMP_MAGIC_ITEM_1522"],
    rules: function(model) {
      model.statadd("Armor Class", 1, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 1);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Breaching Armor +2"] = new RulesElement({
    name: "Breaching Armor +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1523",
    source: "Adventurer's Vault",
    categories: ["Breaching Armor +2", "ID_FMP_MAGIC_ITEM_1523"],
    rules: function(model) {
      model.statadd("Armor Class", 2, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 2);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Breaching Armor +3"] = new RulesElement({
    name: "Breaching Armor +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1524",
    source: "Adventurer's Vault",
    categories: ["Breaching Armor +3", "ID_FMP_MAGIC_ITEM_1524"],
    rules: function(model) {
      model.statadd("Armor Class", 3, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 3);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Breaching Armor +4"] = new RulesElement({
    name: "Breaching Armor +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1525",
    source: "Adventurer's Vault",
    categories: ["Breaching Armor +4", "ID_FMP_MAGIC_ITEM_1525"],
    rules: function(model) {
      model.statadd("Armor Class", 4, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 4);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Breaching Armor +5"] = new RulesElement({
    name: "Breaching Armor +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1526",
    source: "Adventurer's Vault",
    categories: ["Breaching Armor +5", "ID_FMP_MAGIC_ITEM_1526"],
    rules: function(model) {
      model.statadd("Armor Class", 5, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 5);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Breaching Armor +6"] = new RulesElement({
    name: "Breaching Armor +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1527",
    source: "Adventurer's Vault",
    categories: ["Breaching Armor +6", "ID_FMP_MAGIC_ITEM_1527"],
    rules: function(model) {
      model.statadd("Armor Class", 6, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 6);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Breaching Gauntlets (epic tier)"] = new RulesElement({
    name: "Breaching Gauntlets (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3362",
    source: "Adventurer's Vault",
    categories: ["Breaching Gauntlets (epic tier)", "ID_FMP_MAGIC_ITEM_3362"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Breaching Gauntlets (heroic tier)"] = new RulesElement({
    name: "Breaching Gauntlets (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3360",
    source: "Adventurer's Vault",
    categories: ["Breaching Gauntlets (heroic tier)", "ID_FMP_MAGIC_ITEM_3360"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Breaching Gauntlets (paragon tier)"] = new RulesElement({
    name: "Breaching Gauntlets (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3361",
    source: "Adventurer's Vault",
    categories: ["Breaching Gauntlets (paragon tier)", "ID_FMP_MAGIC_ITEM_3361"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Briartwine Armor +2"] = new RulesElement({
    name: "Briartwine Armor +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1528",
    source: "Adventurer's Vault",
    categories: ["Briartwine Armor +2", "ID_FMP_MAGIC_ITEM_1528"],
    rules: function(model) {
      model.statadd("Armor Class", 2, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 2);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Briartwine Armor +3"] = new RulesElement({
    name: "Briartwine Armor +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1529",
    source: "Adventurer's Vault",
    categories: ["Briartwine Armor +3", "ID_FMP_MAGIC_ITEM_1529"],
    rules: function(model) {
      model.statadd("Armor Class", 3, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 3);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Briartwine Armor +4"] = new RulesElement({
    name: "Briartwine Armor +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1530",
    source: "Adventurer's Vault",
    categories: ["Briartwine Armor +4", "ID_FMP_MAGIC_ITEM_1530"],
    rules: function(model) {
      model.statadd("Armor Class", 4, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 4);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Briartwine Armor +5"] = new RulesElement({
    name: "Briartwine Armor +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1531",
    source: "Adventurer's Vault",
    categories: ["Briartwine Armor +5", "ID_FMP_MAGIC_ITEM_1531"],
    rules: function(model) {
      model.statadd("Armor Class", 5, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 5);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Briartwine Armor +6"] = new RulesElement({
    name: "Briartwine Armor +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1532",
    source: "Adventurer's Vault",
    categories: ["Briartwine Armor +6", "ID_FMP_MAGIC_ITEM_1532"],
    rules: function(model) {
      model.statadd("Armor Class", 6, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 6);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Bridle of Conjuration (heroic tier)"] = new RulesElement({
    name: "Bridle of Conjuration (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3828",
    source: "Adventurer's Vault",
    categories: ["Bridle of Conjuration (heroic tier)", "ID_FMP_MAGIC_ITEM_3828"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Bridle of Rapid Action (heroic tier)"] = new RulesElement({
    name: "Bridle of Rapid Action (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3972",
    source: "Adventurer's Vault",
    categories: ["Bridle of Rapid Action (heroic tier)", "ID_FMP_MAGIC_ITEM_3972"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Brightleaf (epic tier)"] = new RulesElement({
    name: "Brightleaf (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_4053",
    source: "Adventurer's Vault",
    categories: ["Brightleaf (epic tier)", "ID_FMP_MAGIC_ITEM_4053"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Brightleaf (heroic tier)"] = new RulesElement({
    name: "Brightleaf (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_4051",
    source: "Adventurer's Vault",
    categories: ["Brightleaf (heroic tier)", "ID_FMP_MAGIC_ITEM_4051"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Brightleaf (paragon tier)"] = new RulesElement({
    name: "Brightleaf (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_4052",
    source: "Adventurer's Vault",
    categories: ["Brightleaf (paragon tier)", "ID_FMP_MAGIC_ITEM_4052"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Brilliant Energy Weapon +5"] = new RulesElement({
    name: "Brilliant Energy Weapon +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1978",
    source: "Adventurer's Vault",
    categories: ["Brilliant Energy Weapon +5", "ID_FMP_MAGIC_ITEM_1978"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Brilliant Energy Weapon +6"] = new RulesElement({
    name: "Brilliant Energy Weapon +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1979",
    source: "Adventurer's Vault",
    categories: ["Brilliant Energy Weapon +6", "ID_FMP_MAGIC_ITEM_1979"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Bronze Serpent (epic tier)"] = new RulesElement({
    name: "Bronze Serpent (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3422",
    source: "Adventurer's Vault",
    categories: ["Bronze Serpent (epic tier)", "ID_FMP_MAGIC_ITEM_3422"],
    rules: function(model) {
      model.statadd("Bronze Serpent (epic tier)", 15, "Bronze Serpent (epic tier)");
      model.statadd("Resist:poison and a +6 item bonus to Endurance and Heal checks", function() { return model.stat("Bronze Serpent (epic tier)"); }, "resist");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Bronzewood Weapon +2"] = new RulesElement({
    name: "Bronzewood Weapon +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1980",
    source: "Adventurer's Vault",
    categories: ["Bronzewood Weapon +2", "ID_FMP_MAGIC_ITEM_1980"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Bronzewood Weapon +3"] = new RulesElement({
    name: "Bronzewood Weapon +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1981",
    source: "Adventurer's Vault",
    categories: ["Bronzewood Weapon +3", "ID_FMP_MAGIC_ITEM_1981"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Bronzewood Weapon +4"] = new RulesElement({
    name: "Bronzewood Weapon +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1982",
    source: "Adventurer's Vault",
    categories: ["Bronzewood Weapon +4", "ID_FMP_MAGIC_ITEM_1982"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Bronzewood Weapon +5"] = new RulesElement({
    name: "Bronzewood Weapon +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1983",
    source: "Adventurer's Vault",
    categories: ["Bronzewood Weapon +5", "ID_FMP_MAGIC_ITEM_1983"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Bronzewood Weapon +6"] = new RulesElement({
    name: "Bronzewood Weapon +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1984",
    source: "Adventurer's Vault",
    categories: ["Bronzewood Weapon +6", "ID_FMP_MAGIC_ITEM_1984"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Brooch of No Regrets +1"] = new RulesElement({
    name: "Brooch of No Regrets +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3560",
    source: "Adventurer's Vault",
    categories: ["Brooch of No Regrets +1", "ID_FMP_MAGIC_ITEM_3560"],
    rules: function(model) {
      model.statadd("Fortitude Defense", 1, "Enhancement");
      model.statadd("Reflex Defense", 1, "Enhancement");
      model.statadd("Will Defense", 1, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Brooch of No Regrets +2"] = new RulesElement({
    name: "Brooch of No Regrets +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3561",
    source: "Adventurer's Vault",
    categories: ["Brooch of No Regrets +2", "ID_FMP_MAGIC_ITEM_3561"],
    rules: function(model) {
      model.statadd("Fortitude Defense", 2, "Enhancement");
      model.statadd("Reflex Defense", 2, "Enhancement");
      model.statadd("Will Defense", 2, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Brooch of No Regrets +3"] = new RulesElement({
    name: "Brooch of No Regrets +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3562",
    source: "Adventurer's Vault",
    categories: ["Brooch of No Regrets +3", "ID_FMP_MAGIC_ITEM_3562"],
    rules: function(model) {
      model.statadd("Fortitude Defense", 3, "Enhancement");
      model.statadd("Reflex Defense", 3, "Enhancement");
      model.statadd("Will Defense", 3, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Brooch of No Regrets +4"] = new RulesElement({
    name: "Brooch of No Regrets +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3563",
    source: "Adventurer's Vault",
    categories: ["Brooch of No Regrets +4", "ID_FMP_MAGIC_ITEM_3563"],
    rules: function(model) {
      model.statadd("Fortitude Defense", 4, "Enhancement");
      model.statadd("Reflex Defense", 4, "Enhancement");
      model.statadd("Will Defense", 4, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Brooch of No Regrets +5"] = new RulesElement({
    name: "Brooch of No Regrets +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3564",
    source: "Adventurer's Vault",
    categories: ["Brooch of No Regrets +5", "ID_FMP_MAGIC_ITEM_3564"],
    rules: function(model) {
      model.statadd("Fortitude Defense", 5, "Enhancement");
      model.statadd("Reflex Defense", 5, "Enhancement");
      model.statadd("Will Defense", 5, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Brooch of No Regrets +6"] = new RulesElement({
    name: "Brooch of No Regrets +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3565",
    source: "Adventurer's Vault",
    categories: ["Brooch of No Regrets +6", "ID_FMP_MAGIC_ITEM_3565"],
    rules: function(model) {
      model.statadd("Fortitude Defense", 6, "Enhancement");
      model.statadd("Reflex Defense", 6, "Enhancement");
      model.statadd("Will Defense", 6, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Brooch of Shielding +1"] = new RulesElement({
    name: "Brooch of Shielding +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3566",
    source: "Adventurer's Vault",
    categories: ["Brooch of Shielding +1", "ID_FMP_MAGIC_ITEM_3566"],
    rules: function(model) {
      model.statadd("Brooch of Shielding +1", 10, "Brooch of Shielding +1");
      model.statadd("resist:force", function() { return model.stat("Brooch of Shielding +1"); }, "resist");
      model.statadd("Fortitude Defense", 1, "Enhancement");
      model.statadd("Reflex Defense", 1, "Enhancement");
      model.statadd("Will Defense", 1, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Brooch of Shielding +2"] = new RulesElement({
    name: "Brooch of Shielding +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3567",
    source: "Adventurer's Vault",
    categories: ["Brooch of Shielding +2", "ID_FMP_MAGIC_ITEM_3567"],
    rules: function(model) {
      model.statadd("Brooch of Shielding +2", 10, "Brooch of Shielding +2");
      model.statadd("resist:force", function() { return model.stat("Brooch of Shielding +2"); }, "resist");
      model.statadd("Fortitude Defense", 2, "Enhancement");
      model.statadd("Reflex Defense", 2, "Enhancement");
      model.statadd("Will Defense", 2, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Brooch of Shielding +3"] = new RulesElement({
    name: "Brooch of Shielding +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3568",
    source: "Adventurer's Vault",
    categories: ["Brooch of Shielding +3", "ID_FMP_MAGIC_ITEM_3568"],
    rules: function(model) {
      model.statadd("Brooch of Shielding +3", 15, "Brooch of Shielding +3");
      model.statadd("resist:force", function() { return model.stat("Brooch of Shielding +3"); }, "resist");
      model.statadd("Fortitude Defense", 3, "Enhancement");
      model.statadd("Reflex Defense", 3, "Enhancement");
      model.statadd("Will Defense", 3, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Brooch of Shielding +4"] = new RulesElement({
    name: "Brooch of Shielding +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3569",
    source: "Adventurer's Vault",
    categories: ["Brooch of Shielding +4", "ID_FMP_MAGIC_ITEM_3569"],
    rules: function(model) {
      model.statadd("Brooch of Shielding +4", 15, "Brooch of Shielding +4");
      model.statadd("resist:force", function() { return model.stat("Brooch of Shielding +4"); }, "resist");
      model.statadd("Fortitude Defense", 4, "Enhancement");
      model.statadd("Reflex Defense", 4, "Enhancement");
      model.statadd("Will Defense", 4, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Brooch of Shielding +5"] = new RulesElement({
    name: "Brooch of Shielding +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3570",
    source: "Adventurer's Vault",
    categories: ["Brooch of Shielding +5", "ID_FMP_MAGIC_ITEM_3570"],
    rules: function(model) {
      model.statadd("Brooch of Shielding +5", 20, "Brooch of Shielding +5");
      model.statadd("resist:force", function() { return model.stat("Brooch of Shielding +5"); }, "resist");
      model.statadd("Fortitude Defense", 5, "Enhancement");
      model.statadd("Reflex Defense", 5, "Enhancement");
      model.statadd("Will Defense", 5, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Brooch of Shielding +6"] = new RulesElement({
    name: "Brooch of Shielding +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3571",
    source: "Adventurer's Vault",
    categories: ["Brooch of Shielding +6", "ID_FMP_MAGIC_ITEM_3571"],
    rules: function(model) {
      model.statadd("Brooch of Shielding +6", 20, "Brooch of Shielding +6");
      model.statadd("resist:force", function() { return model.stat("Brooch of Shielding +6"); }, "resist");
      model.statadd("Fortitude Defense", 6, "Enhancement");
      model.statadd("Reflex Defense", 6, "Enhancement");
      model.statadd("Will Defense", 6, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Brooch of Vitality +3"] = new RulesElement({
    name: "Brooch of Vitality +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3572",
    source: "Adventurer's Vault",
    categories: ["Brooch of Vitality +3", "ID_FMP_MAGIC_ITEM_3572"],
    rules: function(model) {
      model.statadd("Hit Points", 5);
      model.statadd("Fortitude Defense", 3, "Enhancement");
      model.statadd("Reflex Defense", 3, "Enhancement");
      model.statadd("Will Defense", 3, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Brooch of Vitality +4"] = new RulesElement({
    name: "Brooch of Vitality +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3573",
    source: "Adventurer's Vault",
    categories: ["Brooch of Vitality +4", "ID_FMP_MAGIC_ITEM_3573"],
    rules: function(model) {
      model.statadd("Hit Points", 10);
      model.statadd("Fortitude Defense", 4, "Enhancement");
      model.statadd("Reflex Defense", 4, "Enhancement");
      model.statadd("Will Defense", 4, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Brooch of Vitality +5"] = new RulesElement({
    name: "Brooch of Vitality +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3574",
    source: "Adventurer's Vault",
    categories: ["Brooch of Vitality +5", "ID_FMP_MAGIC_ITEM_3574"],
    rules: function(model) {
      model.statadd("Hit Points", 15);
      model.statadd("Fortitude Defense", 5, "Enhancement");
      model.statadd("Reflex Defense", 5, "Enhancement");
      model.statadd("Will Defense", 5, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Brooch of Vitality +6"] = new RulesElement({
    name: "Brooch of Vitality +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3575",
    source: "Adventurer's Vault",
    categories: ["Brooch of Vitality +6", "ID_FMP_MAGIC_ITEM_3575"],
    rules: function(model) {
      model.statadd("Hit Points", 20);
      model.statadd("Fortitude Defense", 6, "Enhancement");
      model.statadd("Reflex Defense", 6, "Enhancement");
      model.statadd("Will Defense", 6, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Burning Gauntlets (epic tier)"] = new RulesElement({
    name: "Burning Gauntlets (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3365",
    source: "Adventurer's Vault",
    categories: ["Burning Gauntlets (epic tier)", "ID_FMP_MAGIC_ITEM_3365"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Burning Gauntlets (heroic tier)"] = new RulesElement({
    name: "Burning Gauntlets (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3363",
    source: "Adventurer's Vault",
    categories: ["Burning Gauntlets (heroic tier)", "ID_FMP_MAGIC_ITEM_3363"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Burning Gauntlets (paragon tier)"] = new RulesElement({
    name: "Burning Gauntlets (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3364",
    source: "Adventurer's Vault",
    categories: ["Burning Gauntlets (paragon tier)", "ID_FMP_MAGIC_ITEM_3364"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Butterfly Sandals (paragon tier)"] = new RulesElement({
    name: "Butterfly Sandals (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3321",
    source: "Adventurer's Vault",
    categories: ["Butterfly Sandals (paragon tier)", "ID_FMP_MAGIC_ITEM_3321"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Cap of Water Breathing (heroic tier)"] = new RulesElement({
    name: "Cap of Water Breathing (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3423",
    source: "Adventurer's Vault",
    categories: ["Cap of Water Breathing (heroic tier)", "ID_FMP_MAGIC_ITEM_3423"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Cape of the Mountebank +1"] = new RulesElement({
    name: "Cape of the Mountebank +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3576",
    source: "Adventurer's Vault",
    categories: ["Cape of the Mountebank +1", "ID_FMP_MAGIC_ITEM_3576"],
    rules: function(model) {
      model.statadd("Fortitude Defense", 1, "Enhancement");
      model.statadd("Reflex Defense", 1, "Enhancement");
      model.statadd("Will Defense", 1, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Cape of the Mountebank +2"] = new RulesElement({
    name: "Cape of the Mountebank +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3577",
    source: "Adventurer's Vault",
    categories: ["Cape of the Mountebank +2", "ID_FMP_MAGIC_ITEM_3577"],
    rules: function(model) {
      model.statadd("Fortitude Defense", 2, "Enhancement");
      model.statadd("Reflex Defense", 2, "Enhancement");
      model.statadd("Will Defense", 2, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Cape of the Mountebank +3"] = new RulesElement({
    name: "Cape of the Mountebank +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3578",
    source: "Adventurer's Vault",
    categories: ["Cape of the Mountebank +3", "ID_FMP_MAGIC_ITEM_3578"],
    rules: function(model) {
      model.statadd("Fortitude Defense", 3, "Enhancement");
      model.statadd("Reflex Defense", 3, "Enhancement");
      model.statadd("Will Defense", 3, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Cape of the Mountebank +4"] = new RulesElement({
    name: "Cape of the Mountebank +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3579",
    source: "Adventurer's Vault",
    categories: ["Cape of the Mountebank +4", "ID_FMP_MAGIC_ITEM_3579"],
    rules: function(model) {
      model.statadd("Fortitude Defense", 4, "Enhancement");
      model.statadd("Reflex Defense", 4, "Enhancement");
      model.statadd("Will Defense", 4, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Cape of the Mountebank +5"] = new RulesElement({
    name: "Cape of the Mountebank +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3580",
    source: "Adventurer's Vault",
    categories: ["Cape of the Mountebank +5", "ID_FMP_MAGIC_ITEM_3580"],
    rules: function(model) {
      model.statadd("Fortitude Defense", 5, "Enhancement");
      model.statadd("Reflex Defense", 5, "Enhancement");
      model.statadd("Will Defense", 5, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Cape of the Mountebank +6"] = new RulesElement({
    name: "Cape of the Mountebank +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3581",
    source: "Adventurer's Vault",
    categories: ["Cape of the Mountebank +6", "ID_FMP_MAGIC_ITEM_3581"],
    rules: function(model) {
      model.statadd("Fortitude Defense", 6, "Enhancement");
      model.statadd("Reflex Defense", 6, "Enhancement");
      model.statadd("Will Defense", 6, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Carcanet of Psychic Schism (paragon tier)"] = new RulesElement({
    name: "Carcanet of Psychic Schism (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3424",
    source: "Adventurer's Vault",
    categories: ["Carcanet of Psychic Schism (paragon tier)", "ID_FMP_MAGIC_ITEM_3424"],
    rules: function(model) {
      model.statadd("Will Defense", 1);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Casque of Tactics (epic tier)"] = new RulesElement({
    name: "Casque of Tactics (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3427",
    source: "Adventurer's Vault",
    categories: ["Casque of Tactics (epic tier)", "ID_FMP_MAGIC_ITEM_3427"],
    rules: function(model) {
      model.statadd("Initiative Misc", 3, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Casque of Tactics (heroic tier)"] = new RulesElement({
    name: "Casque of Tactics (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3425",
    source: "Adventurer's Vault",
    categories: ["Casque of Tactics (heroic tier)", "ID_FMP_MAGIC_ITEM_3425"],
    rules: function(model) {
      model.statadd("Initiative Misc", 1, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Casque of Tactics (paragon tier)"] = new RulesElement({
    name: "Casque of Tactics (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3426",
    source: "Adventurer's Vault",
    categories: ["Casque of Tactics (paragon tier)", "ID_FMP_MAGIC_ITEM_3426"],
    rules: function(model) {
      model.statadd("Initiative Misc", 2, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Cat Paws (epic tier)"] = new RulesElement({
    name: "Cat Paws (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3368",
    source: "Adventurer's Vault",
    categories: ["Cat Paws (epic tier)", "ID_FMP_MAGIC_ITEM_3368"],
    rules: function(model) {
      model.statadd("Athletics Misc", function() { /* to climb */ return 6; }, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Cat Paws (heroic tier)"] = new RulesElement({
    name: "Cat Paws (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3366",
    source: "Adventurer's Vault",
    categories: ["Cat Paws (heroic tier)", "ID_FMP_MAGIC_ITEM_3366"],
    rules: function(model) {
      model.statadd("Athletics Misc", function() { /* to climb */ return 2; }, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Cat Paws (paragon tier)"] = new RulesElement({
    name: "Cat Paws (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3367",
    source: "Adventurer's Vault",
    categories: ["Cat Paws (paragon tier)", "ID_FMP_MAGIC_ITEM_3367"],
    rules: function(model) {
      model.statadd("Athletics Misc", function() { /* to climb */ return 4; }, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Cat Tabi (epic tier)"] = new RulesElement({
    name: "Cat Tabi (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3324",
    source: "Adventurer's Vault",
    categories: ["Cat Tabi (epic tier)", "ID_FMP_MAGIC_ITEM_3324"],
    rules: function(model) {
      model.statadd("Athletics Misc", function() { /* to jump */ return 7; }, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Cat Tabi (heroic tier)"] = new RulesElement({
    name: "Cat Tabi (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3322",
    source: "Adventurer's Vault",
    categories: ["Cat Tabi (heroic tier)", "ID_FMP_MAGIC_ITEM_3322"],
    rules: function(model) {
      model.statadd("Athletics Misc", function() { /* to jump */ return 3; }, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Cat Tabi (paragon tier)"] = new RulesElement({
    name: "Cat Tabi (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3323",
    source: "Adventurer's Vault",
    categories: ["Cat Tabi (paragon tier)", "ID_FMP_MAGIC_ITEM_3323"],
    rules: function(model) {
      model.statadd("Athletics Misc", function() { /* to jump */ return 5; }, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Caustic Gauntlets (epic tier)"] = new RulesElement({
    name: "Caustic Gauntlets (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3371",
    source: "Adventurer's Vault",
    categories: ["Caustic Gauntlets (epic tier)", "ID_FMP_MAGIC_ITEM_3371"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Caustic Gauntlets (heroic tier)"] = new RulesElement({
    name: "Caustic Gauntlets (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3369",
    source: "Adventurer's Vault",
    categories: ["Caustic Gauntlets (heroic tier)", "ID_FMP_MAGIC_ITEM_3369"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Caustic Gauntlets (paragon tier)"] = new RulesElement({
    name: "Caustic Gauntlets (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3370",
    source: "Adventurer's Vault",
    categories: ["Caustic Gauntlets (paragon tier)", "ID_FMP_MAGIC_ITEM_3370"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Caustic Whetstone (epic tier)"] = new RulesElement({
    name: "Caustic Whetstone (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_4022",
    source: "Adventurer's Vault",
    categories: ["Caustic Whetstone (epic tier)", "ID_FMP_MAGIC_ITEM_4022"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Caustic Whetstone (heroic tier)"] = new RulesElement({
    name: "Caustic Whetstone (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_4020",
    source: "Adventurer's Vault",
    categories: ["Caustic Whetstone (heroic tier)", "ID_FMP_MAGIC_ITEM_4020"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Caustic Whetstone (paragon tier)"] = new RulesElement({
    name: "Caustic Whetstone (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_4021",
    source: "Adventurer's Vault",
    categories: ["Caustic Whetstone (paragon tier)", "ID_FMP_MAGIC_ITEM_4021"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Centering Cincture (heroic tier)"] = new RulesElement({
    name: "Centering Cincture (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3791",
    source: "Adventurer's Vault",
    categories: ["Centering Cincture (heroic tier)", "ID_FMP_MAGIC_ITEM_3791"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Chamber Cloak +4"] = new RulesElement({
    name: "Chamber Cloak +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3582",
    source: "Adventurer's Vault",
    categories: ["Chamber Cloak +4", "ID_FMP_MAGIC_ITEM_3582"],
    rules: function(model) {
      model.statadd("Fortitude Defense", 4, "Enhancement");
      model.statadd("Reflex Defense", 4, "Enhancement");
      model.statadd("Will Defense", 4, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Chamber Cloak +5"] = new RulesElement({
    name: "Chamber Cloak +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3583",
    source: "Adventurer's Vault",
    categories: ["Chamber Cloak +5", "ID_FMP_MAGIC_ITEM_3583"],
    rules: function(model) {
      model.statadd("Fortitude Defense", 5, "Enhancement");
      model.statadd("Reflex Defense", 5, "Enhancement");
      model.statadd("Will Defense", 5, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Chamber Cloak +6"] = new RulesElement({
    name: "Chamber Cloak +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3584",
    source: "Adventurer's Vault",
    categories: ["Chamber Cloak +6", "ID_FMP_MAGIC_ITEM_3584"],
    rules: function(model) {
      model.statadd("Fortitude Defense", 6, "Enhancement");
      model.statadd("Reflex Defense", 6, "Enhancement");
      model.statadd("Will Defense", 6, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Chameleon Ring (paragon tier)"] = new RulesElement({
    name: "Chameleon Ring (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3727",
    source: "Adventurer's Vault",
    categories: ["Chameleon Ring (paragon tier)", "ID_FMP_MAGIC_ITEM_3727"],
    rules: function(model) {
      model.statadd("Stealth Misc", 2, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Champion's Armor +2"] = new RulesElement({
    name: "Champion's Armor +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1533",
    source: "Adventurer's Vault",
    categories: ["Champion's Armor +2", "ID_FMP_MAGIC_ITEM_1533"],
    rules: function(model) {
      model.statadd("Armor Class", 2, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 2);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Champion's Armor +3"] = new RulesElement({
    name: "Champion's Armor +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1534",
    source: "Adventurer's Vault",
    categories: ["Champion's Armor +3", "ID_FMP_MAGIC_ITEM_1534"],
    rules: function(model) {
      model.statadd("Armor Class", 3, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 3);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Champion's Armor +4"] = new RulesElement({
    name: "Champion's Armor +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1535",
    source: "Adventurer's Vault",
    categories: ["Champion's Armor +4", "ID_FMP_MAGIC_ITEM_1535"],
    rules: function(model) {
      model.statadd("Armor Class", 4, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 4);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Champion's Armor +5"] = new RulesElement({
    name: "Champion's Armor +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1536",
    source: "Adventurer's Vault",
    categories: ["Champion's Armor +5", "ID_FMP_MAGIC_ITEM_1536"],
    rules: function(model) {
      model.statadd("Armor Class", 5, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 5);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Champion's Armor +6"] = new RulesElement({
    name: "Champion's Armor +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1537",
    source: "Adventurer's Vault",
    categories: ["Champion's Armor +6", "ID_FMP_MAGIC_ITEM_1537"],
    rules: function(model) {
      model.statadd("Armor Class", 6, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 6);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Chaos Weave Armor +3"] = new RulesElement({
    name: "Chaos Weave Armor +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1538",
    source: "Adventurer's Vault",
    categories: ["Chaos Weave Armor +3", "ID_FMP_MAGIC_ITEM_1538"],
    rules: function(model) {
      model.statadd("Armor Class", 3, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 3);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Chaos Weave Armor +4"] = new RulesElement({
    name: "Chaos Weave Armor +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1539",
    source: "Adventurer's Vault",
    categories: ["Chaos Weave Armor +4", "ID_FMP_MAGIC_ITEM_1539"],
    rules: function(model) {
      model.statadd("Armor Class", 4, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 4);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Chaos Weave Armor +5"] = new RulesElement({
    name: "Chaos Weave Armor +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1540",
    source: "Adventurer's Vault",
    categories: ["Chaos Weave Armor +5", "ID_FMP_MAGIC_ITEM_1540"],
    rules: function(model) {
      model.statadd("Armor Class", 5, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 5);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Chaos Weave Armor +6"] = new RulesElement({
    name: "Chaos Weave Armor +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1541",
    source: "Adventurer's Vault",
    categories: ["Chaos Weave Armor +6", "ID_FMP_MAGIC_ITEM_1541"],
    rules: function(model) {
      model.statadd("Armor Class", 6, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 6);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Chaos Weave Weapon +3"] = new RulesElement({
    name: "Chaos Weave Weapon +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1985",
    source: "Adventurer's Vault",
    categories: ["Chaos Weave Weapon +3", "ID_FMP_MAGIC_ITEM_1985"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Chaos Weave Weapon +4"] = new RulesElement({
    name: "Chaos Weave Weapon +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1986",
    source: "Adventurer's Vault",
    categories: ["Chaos Weave Weapon +4", "ID_FMP_MAGIC_ITEM_1986"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Chaos Weave Weapon +5"] = new RulesElement({
    name: "Chaos Weave Weapon +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1987",
    source: "Adventurer's Vault",
    categories: ["Chaos Weave Weapon +5", "ID_FMP_MAGIC_ITEM_1987"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Chaos Weave Weapon +6"] = new RulesElement({
    name: "Chaos Weave Weapon +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1988",
    source: "Adventurer's Vault",
    categories: ["Chaos Weave Weapon +6", "ID_FMP_MAGIC_ITEM_1988"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Charm of Abundant Action (epic tier)"] = new RulesElement({
    name: "Charm of Abundant Action (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3829",
    source: "Adventurer's Vault",
    categories: ["Charm of Abundant Action (epic tier)", "ID_FMP_MAGIC_ITEM_3829"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Cherished Ring (paragon tier)"] = new RulesElement({
    name: "Cherished Ring (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3728",
    source: "Adventurer's Vault",
    categories: ["Cherished Ring (paragon tier)", "ID_FMP_MAGIC_ITEM_3728"],
    rules: function(model) {
      model.statadd("Diplomacy Misc", 2, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Chime of Awakening (heroic tier)"] = new RulesElement({
    name: "Chime of Awakening (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3830",
    source: "Adventurer's Vault",
    categories: ["Chime of Awakening (heroic tier)", "ID_FMP_MAGIC_ITEM_3830"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Chime of Opening (epic tier)"] = new RulesElement({
    name: "Chime of Opening (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3831",
    source: "Adventurer's Vault",
    categories: ["Chime of Opening (epic tier)", "ID_FMP_MAGIC_ITEM_3831"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Chime of Warding (heroic tier)"] = new RulesElement({
    name: "Chime of Warding (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3832",
    source: "Adventurer's Vault",
    categories: ["Chime of Warding (heroic tier)", "ID_FMP_MAGIC_ITEM_3832"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Choker of Eloquence +2"] = new RulesElement({
    name: "Choker of Eloquence +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3585",
    source: "Adventurer's Vault",
    categories: ["Choker of Eloquence +2", "ID_FMP_MAGIC_ITEM_3585"],
    rules: function(model) {
      model.statadd("Bluff Misc", 2, "item");
      model.statadd("Diplomacy Misc", 2, "item");
      model.statadd("Fortitude Defense", 2, "Enhancement");
      model.statadd("Reflex Defense", 2, "Enhancement");
      model.statadd("Will Defense", 2, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Choker of Eloquence +3"] = new RulesElement({
    name: "Choker of Eloquence +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3586",
    source: "Adventurer's Vault",
    categories: ["Choker of Eloquence +3", "ID_FMP_MAGIC_ITEM_3586"],
    rules: function(model) {
      model.statadd("Bluff Misc", 3, "item");
      model.statadd("Diplomacy Misc", 3, "item");
      model.statadd("Fortitude Defense", 3, "Enhancement");
      model.statadd("Reflex Defense", 3, "Enhancement");
      model.statadd("Will Defense", 3, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Choker of Eloquence +4"] = new RulesElement({
    name: "Choker of Eloquence +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3587",
    source: "Adventurer's Vault",
    categories: ["Choker of Eloquence +4", "ID_FMP_MAGIC_ITEM_3587"],
    rules: function(model) {
      model.statadd("Bluff Misc", 4, "item");
      model.statadd("Diplomacy Misc", 4, "item");
      model.statadd("Fortitude Defense", 4, "Enhancement");
      model.statadd("Reflex Defense", 4, "Enhancement");
      model.statadd("Will Defense", 4, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Choker of Eloquence +5"] = new RulesElement({
    name: "Choker of Eloquence +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3588",
    source: "Adventurer's Vault",
    categories: ["Choker of Eloquence +5", "ID_FMP_MAGIC_ITEM_3588"],
    rules: function(model) {
      model.statadd("Bluff Misc", 5, "item");
      model.statadd("Diplomacy Misc", 5, "item");
      model.statadd("Fortitude Defense", 5, "Enhancement");
      model.statadd("Reflex Defense", 5, "Enhancement");
      model.statadd("Will Defense", 5, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Choker of Eloquence +6"] = new RulesElement({
    name: "Choker of Eloquence +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3589",
    source: "Adventurer's Vault",
    categories: ["Choker of Eloquence +6", "ID_FMP_MAGIC_ITEM_3589"],
    rules: function(model) {
      model.statadd("Bluff Misc", 6, "item");
      model.statadd("Diplomacy Misc", 6, "item");
      model.statadd("Fortitude Defense", 6, "Enhancement");
      model.statadd("Reflex Defense", 6, "Enhancement");
      model.statadd("Will Defense", 6, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Cincture of the Dragon Spirit (heroic tier)"] = new RulesElement({
    name: "Cincture of the Dragon Spirit (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3792",
    source: "Adventurer's Vault",
    categories: ["Cincture of the Dragon Spirit (heroic tier)", "ID_FMP_MAGIC_ITEM_3792"],
    rules: function(model) {
      model.statadd("Intimidate", function() { return abilitymod(model.stat("Strength")); }, "Ability");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Cincture of Vivacity (paragon tier)"] = new RulesElement({
    name: "Cincture of Vivacity (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3793",
    source: "Adventurer's Vault",
    categories: ["Cincture of Vivacity (paragon tier)", "ID_FMP_MAGIC_ITEM_3793"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Cingulum of Combat Rushing (paragon tier)"] = new RulesElement({
    name: "Cingulum of Combat Rushing (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3794",
    source: "Adventurer's Vault",
    categories: ["Cingulum of Combat Rushing (paragon tier)", "ID_FMP_MAGIC_ITEM_3794"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Circlet of Indomitability (epic tier)"] = new RulesElement({
    name: "Circlet of Indomitability (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3430",
    source: "Adventurer's Vault",
    categories: ["Circlet of Indomitability (epic tier)", "ID_FMP_MAGIC_ITEM_3430"],
    rules: function(model) {
      model.statadd("Will Defense", 3);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Circlet of Indomitability (heroic tier)"] = new RulesElement({
    name: "Circlet of Indomitability (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3428",
    source: "Adventurer's Vault",
    categories: ["Circlet of Indomitability (heroic tier)", "ID_FMP_MAGIC_ITEM_3428"],
    rules: function(model) {
      model.statadd("Will Defense", 1);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Circlet of Indomitability (paragon tier)"] = new RulesElement({
    name: "Circlet of Indomitability (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3429",
    source: "Adventurer's Vault",
    categories: ["Circlet of Indomitability (paragon tier)", "ID_FMP_MAGIC_ITEM_3429"],
    rules: function(model) {
      model.statadd("Will Defense", 2);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Circlet of Mental Onslaught (paragon tier)"] = new RulesElement({
    name: "Circlet of Mental Onslaught (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3431",
    source: "Adventurer's Vault",
    categories: ["Circlet of Mental Onslaught (paragon tier)", "ID_FMP_MAGIC_ITEM_3431"],
    rules: function(model) {
      model.statadd("Will Defense", 1);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Circlet of Rapid Casting (paragon tier)"] = new RulesElement({
    name: "Circlet of Rapid Casting (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3432",
    source: "Adventurer's Vault",
    categories: ["Circlet of Rapid Casting (paragon tier)", "ID_FMP_MAGIC_ITEM_3432"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Circlet of Second Chances (heroic tier)"] = new RulesElement({
    name: "Circlet of Second Chances (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3433",
    source: "Adventurer's Vault",
    categories: ["Circlet of Second Chances (heroic tier)", "ID_FMP_MAGIC_ITEM_3433"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Clasp of Noble Sacrifice +3"] = new RulesElement({
    name: "Clasp of Noble Sacrifice +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3590",
    source: "Adventurer's Vault",
    categories: ["Clasp of Noble Sacrifice +3", "ID_FMP_MAGIC_ITEM_3590"],
    rules: function(model) {
      model.statadd("Fortitude Defense", 3, "Enhancement");
      model.statadd("Reflex Defense", 3, "Enhancement");
      model.statadd("Will Defense", 3, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Clasp of Noble Sacrifice +4"] = new RulesElement({
    name: "Clasp of Noble Sacrifice +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3591",
    source: "Adventurer's Vault",
    categories: ["Clasp of Noble Sacrifice +4", "ID_FMP_MAGIC_ITEM_3591"],
    rules: function(model) {
      model.statadd("Fortitude Defense", 4, "Enhancement");
      model.statadd("Reflex Defense", 4, "Enhancement");
      model.statadd("Will Defense", 4, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Clasp of Noble Sacrifice +5"] = new RulesElement({
    name: "Clasp of Noble Sacrifice +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3592",
    source: "Adventurer's Vault",
    categories: ["Clasp of Noble Sacrifice +5", "ID_FMP_MAGIC_ITEM_3592"],
    rules: function(model) {
      model.statadd("Fortitude Defense", 5, "Enhancement");
      model.statadd("Reflex Defense", 5, "Enhancement");
      model.statadd("Will Defense", 5, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Clasp of Noble Sacrifice +6"] = new RulesElement({
    name: "Clasp of Noble Sacrifice +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3593",
    source: "Adventurer's Vault",
    categories: ["Clasp of Noble Sacrifice +6", "ID_FMP_MAGIC_ITEM_3593"],
    rules: function(model) {
      model.statadd("Fortitude Defense", 6, "Enhancement");
      model.statadd("Reflex Defense", 6, "Enhancement");
      model.statadd("Will Defense", 6, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Clearsense Powder (level 1)"] = new RulesElement({
    name: "Clearsense Powder (level 1)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1350",
    source: "Adventurer's Vault",
    categories: ["Clearsense Powder (level 1)", "ID_FMP_MAGIC_ITEM_1350"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Clearsense Powder (level 11)"] = new RulesElement({
    name: "Clearsense Powder (level 11)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1352",
    source: "Adventurer's Vault",
    categories: ["Clearsense Powder (level 11)", "ID_FMP_MAGIC_ITEM_1352"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Clearsense Powder (level 16)"] = new RulesElement({
    name: "Clearsense Powder (level 16)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1353",
    source: "Adventurer's Vault",
    categories: ["Clearsense Powder (level 16)", "ID_FMP_MAGIC_ITEM_1353"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Clearsense Powder (level 21)"] = new RulesElement({
    name: "Clearsense Powder (level 21)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1354",
    source: "Adventurer's Vault",
    categories: ["Clearsense Powder (level 21)", "ID_FMP_MAGIC_ITEM_1354"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Clearsense Powder (level 26)"] = new RulesElement({
    name: "Clearsense Powder (level 26)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1355",
    source: "Adventurer's Vault",
    categories: ["Clearsense Powder (level 26)", "ID_FMP_MAGIC_ITEM_1355"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Clearsense Powder (level 6)"] = new RulesElement({
    name: "Clearsense Powder (level 6)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1351",
    source: "Adventurer's Vault",
    categories: ["Clearsense Powder (level 6)", "ID_FMP_MAGIC_ITEM_1351"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Clearwater Solution (heroic tier)"] = new RulesElement({
    name: "Clearwater Solution (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1356",
    source: "Adventurer's Vault",
    categories: ["Clearwater Solution (heroic tier)", "ID_FMP_MAGIC_ITEM_1356"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Climbing Claws (heroic tier)"] = new RulesElement({
    name: "Climbing Claws (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3372",
    source: "Adventurer's Vault",
    categories: ["Climbing Claws (heroic tier)", "ID_FMP_MAGIC_ITEM_3372"],
    rules: function(model) {
      model.statadd("Athletics Misc", function() { /* to climb */ return 1; }, "item");
      // unsupported rule: cbimporter.Rules.ModifyRule
      model.grant(elements.id["ID_INTERNAL_PROFICIENCY_WEAPON_PROFICIENCY_(CLIMBING_CLAW)"]);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Cloak of Arachnida +3"] = new RulesElement({
    name: "Cloak of Arachnida +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3594",
    source: "Adventurer's Vault",
    categories: ["Cloak of Arachnida +3", "ID_FMP_MAGIC_ITEM_3594"],
    rules: function(model) {
      model.statadd("Saving Throws", function() { /* against effects that immobilize or restrain you */ return 2; }, "item");
      model.statadd("Fortitude Defense", 3, "Enhancement");
      model.statadd("Reflex Defense", 3, "Enhancement");
      model.statadd("Will Defense", 3, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Cloak of Arachnida +4"] = new RulesElement({
    name: "Cloak of Arachnida +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3595",
    source: "Adventurer's Vault",
    categories: ["Cloak of Arachnida +4", "ID_FMP_MAGIC_ITEM_3595"],
    rules: function(model) {
      model.statadd("Saving Throws", function() { /* against effects that immobilize or restrain you */ return 2; }, "item");
      model.statadd("Fortitude Defense", 4, "Enhancement");
      model.statadd("Reflex Defense", 4, "Enhancement");
      model.statadd("Will Defense", 4, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Cloak of Arachnida +5"] = new RulesElement({
    name: "Cloak of Arachnida +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3596",
    source: "Adventurer's Vault",
    categories: ["Cloak of Arachnida +5", "ID_FMP_MAGIC_ITEM_3596"],
    rules: function(model) {
      model.statadd("Saving Throws", function() { /* against effects that immobilize or restrain you */ return 2; }, "item");
      model.statadd("Cloak of Arachnida +5", 15, "Cloak of Arachnida +5");
      model.statadd("resist:poison", function() { return model.stat("Cloak of Arachnida +5"); }, "resist");
      model.statadd("Fortitude Defense", 5, "Enhancement");
      model.statadd("Reflex Defense", 5, "Enhancement");
      model.statadd("Will Defense", 5, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Cloak of Arachnida +6"] = new RulesElement({
    name: "Cloak of Arachnida +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3597",
    source: "Adventurer's Vault",
    categories: ["Cloak of Arachnida +6", "ID_FMP_MAGIC_ITEM_3597"],
    rules: function(model) {
      model.statadd("Saving Throws", function() { /* against effects that immobilize or restrain you */ return 2; }, "item");
      model.statadd("Cloak of Arachnida +6", 15, "Cloak of Arachnida +6");
      model.statadd("resist:poison", function() { return model.stat("Cloak of Arachnida +6"); }, "resist");
      model.statadd("Fortitude Defense", 6, "Enhancement");
      model.statadd("Reflex Defense", 6, "Enhancement");
      model.statadd("Will Defense", 6, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Cloak of Autumn's Child +4"] = new RulesElement({
    name: "Cloak of Autumn's Child +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3598",
    source: "Adventurer's Vault",
    categories: ["Cloak of Autumn's Child +4", "ID_FMP_MAGIC_ITEM_3598"],
    rules: function(model) {
      model.statadd("Fortitude Defense", 4, "Enhancement");
      model.statadd("Reflex Defense", 4, "Enhancement");
      model.statadd("Will Defense", 4, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Cloak of Autumn's Child +5"] = new RulesElement({
    name: "Cloak of Autumn's Child +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3599",
    source: "Adventurer's Vault",
    categories: ["Cloak of Autumn's Child +5", "ID_FMP_MAGIC_ITEM_3599"],
    rules: function(model) {
      model.statadd("Fortitude Defense", 5, "Enhancement");
      model.statadd("Reflex Defense", 5, "Enhancement");
      model.statadd("Will Defense", 5, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Cloak of Autumn's Child +6"] = new RulesElement({
    name: "Cloak of Autumn's Child +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3600",
    source: "Adventurer's Vault",
    categories: ["Cloak of Autumn's Child +6", "ID_FMP_MAGIC_ITEM_3600"],
    rules: function(model) {
      model.statadd("Fortitude Defense", 6, "Enhancement");
      model.statadd("Reflex Defense", 6, "Enhancement");
      model.statadd("Will Defense", 6, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Cloak of Displacement +3"] = new RulesElement({
    name: "Cloak of Displacement +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3601",
    source: "Adventurer's Vault",
    categories: ["Cloak of Displacement +3", "ID_FMP_MAGIC_ITEM_3601"],
    rules: function(model) {
      model.statadd("Fortitude Defense", 3, "Enhancement");
      model.statadd("Reflex Defense", 3, "Enhancement");
      model.statadd("Will Defense", 3, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Cloak of Displacement +4"] = new RulesElement({
    name: "Cloak of Displacement +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3602",
    source: "Adventurer's Vault",
    categories: ["Cloak of Displacement +4", "ID_FMP_MAGIC_ITEM_3602"],
    rules: function(model) {
      model.statadd("Fortitude Defense", 4, "Enhancement");
      model.statadd("Reflex Defense", 4, "Enhancement");
      model.statadd("Will Defense", 4, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Cloak of Displacement +5"] = new RulesElement({
    name: "Cloak of Displacement +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3603",
    source: "Adventurer's Vault",
    categories: ["Cloak of Displacement +5", "ID_FMP_MAGIC_ITEM_3603"],
    rules: function(model) {
      model.statadd("Fortitude Defense", 5, "Enhancement");
      model.statadd("Reflex Defense", 5, "Enhancement");
      model.statadd("Will Defense", 5, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Cloak of Displacement +6"] = new RulesElement({
    name: "Cloak of Displacement +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3604",
    source: "Adventurer's Vault",
    categories: ["Cloak of Displacement +6", "ID_FMP_MAGIC_ITEM_3604"],
    rules: function(model) {
      model.statadd("Fortitude Defense", 6, "Enhancement");
      model.statadd("Reflex Defense", 6, "Enhancement");
      model.statadd("Will Defense", 6, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Cloak of Distortion +1"] = new RulesElement({
    name: "Cloak of Distortion +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3605",
    source: "Adventurer's Vault",
    categories: ["Cloak of Distortion +1", "ID_FMP_MAGIC_ITEM_3605"],
    rules: function(model) {
      model.statadd("AC", function() { /* against ranged attacks from more than 5 squares away */ return 1; }, "item");
      model.statadd("Fortitude Defense", function() { /* against ranged attacks from more than 5 squares away */ return 1; }, "item");
      model.statadd("Reflex Defense", function() { /* against ranged attacks from more than 5 squares away */ return 1; }, "item");
      model.statadd("Will Defense", function() { /* against ranged attacks from more than 5 squares away */ return 1; }, "item");
      model.statadd("Fortitude Defense", 1, "Enhancement");
      model.statadd("Reflex Defense", 1, "Enhancement");
      model.statadd("Will Defense", 1, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Cloak of Distortion +2"] = new RulesElement({
    name: "Cloak of Distortion +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3606",
    source: "Adventurer's Vault",
    categories: ["Cloak of Distortion +2", "ID_FMP_MAGIC_ITEM_3606"],
    rules: function(model) {
      model.statadd("AC", function() { /* against ranged attacks from more than 5 squares away */ return 2; }, "item");
      model.statadd("Fortitude Defense", function() { /* against ranged attacks from more than 5 squares away */ return 2; }, "item");
      model.statadd("Reflex Defense", function() { /* against ranged attacks from more than 5 squares away */ return 2; }, "item");
      model.statadd("Will Defense", function() { /* against ranged attacks from more than 5 squares away */ return 2; }, "item");
      model.statadd("Fortitude Defense", 2, "Enhancement");
      model.statadd("Reflex Defense", 2, "Enhancement");
      model.statadd("Will Defense", 2, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Cloak of Distortion +3"] = new RulesElement({
    name: "Cloak of Distortion +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3607",
    source: "Adventurer's Vault",
    categories: ["Cloak of Distortion +3", "ID_FMP_MAGIC_ITEM_3607"],
    rules: function(model) {
      model.statadd("AC", function() { /* against ranged attacks from more than 5 squares away */ return 3; }, "item");
      model.statadd("Fortitude Defense", function() { /* against ranged attacks from more than 5 squares away */ return 3; }, "item");
      model.statadd("Reflex Defense", function() { /* against ranged attacks from more than 5 squares away */ return 3; }, "item");
      model.statadd("Will Defense", function() { /* against ranged attacks from more than 5 squares away */ return 3; }, "item");
      model.statadd("Fortitude Defense", 3, "Enhancement");
      model.statadd("Reflex Defense", 3, "Enhancement");
      model.statadd("Will Defense", 3, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Cloak of Distortion +4"] = new RulesElement({
    name: "Cloak of Distortion +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3608",
    source: "Adventurer's Vault",
    categories: ["Cloak of Distortion +4", "ID_FMP_MAGIC_ITEM_3608"],
    rules: function(model) {
      model.statadd("AC", function() { /* against ranged attacks from more than 5 squares away */ return 4; }, "item");
      model.statadd("Fortitude Defense", function() { /* against ranged attacks from more than 5 squares away */ return 4; }, "item");
      model.statadd("Reflex Defense", function() { /* against ranged attacks from more than 5 squares away */ return 4; }, "item");
      model.statadd("Will Defense", function() { /* against ranged attacks from more than 5 squares away */ return 4; }, "item");
      model.statadd("Fortitude Defense", 4, "Enhancement");
      model.statadd("Reflex Defense", 4, "Enhancement");
      model.statadd("Will Defense", 4, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Cloak of Distortion +5"] = new RulesElement({
    name: "Cloak of Distortion +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3609",
    source: "Adventurer's Vault",
    categories: ["Cloak of Distortion +5", "ID_FMP_MAGIC_ITEM_3609"],
    rules: function(model) {
      model.statadd("AC", function() { /* against ranged attacks from more than 5 squares away */ return 5; }, "item");
      model.statadd("Fortitude Defense", function() { /* against ranged attacks from more than 5 squares away */ return 5; }, "item");
      model.statadd("Reflex Defense", function() { /* against ranged attacks from more than 5 squares away */ return 5; }, "item");
      model.statadd("Will Defense", function() { /* against ranged attacks from more than 5 squares away */ return 5; }, "item");
      model.statadd("Fortitude Defense", 5, "Enhancement");
      model.statadd("Reflex Defense", 5, "Enhancement");
      model.statadd("Will Defense", 5, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Cloak of Distortion +6"] = new RulesElement({
    name: "Cloak of Distortion +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3610",
    source: "Adventurer's Vault",
    categories: ["Cloak of Distortion +6", "ID_FMP_MAGIC_ITEM_3610"],
    rules: function(model) {
      model.statadd("AC", function() { /* against ranged attacks from more than 5 squares away */ return 6; }, "item");
      model.statadd("Fortitude Defense", function() { /* against ranged attacks from more than 5 squares away */ return 6; }, "item");
      model.statadd("Reflex Defense", function() { /* against ranged attacks from more than 5 squares away */ return 6; }, "item");
      model.statadd("Will Defense", function() { /* against ranged attacks from more than 5 squares away */ return 6; }, "item");
      model.statadd("Fortitude Defense", 6, "Enhancement");
      model.statadd("Reflex Defense", 6, "Enhancement");
      model.statadd("Will Defense", 6, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Cloak of Elemental Evolution +5"] = new RulesElement({
    name: "Cloak of Elemental Evolution +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3611",
    source: "Adventurer's Vault",
    categories: ["Cloak of Elemental Evolution +5", "ID_FMP_MAGIC_ITEM_3611"],
    rules: function(model) {
      model.statadd("Fortitude Defense", 5, "Enhancement");
      model.statadd("Reflex Defense", 5, "Enhancement");
      model.statadd("Will Defense", 5, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Cloak of Elemental Evolution +6"] = new RulesElement({
    name: "Cloak of Elemental Evolution +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3612",
    source: "Adventurer's Vault",
    categories: ["Cloak of Elemental Evolution +6", "ID_FMP_MAGIC_ITEM_3612"],
    rules: function(model) {
      model.statadd("Fortitude Defense", 6, "Enhancement");
      model.statadd("Reflex Defense", 6, "Enhancement");
      model.statadd("Will Defense", 6, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Cloak of the Cautious +2"] = new RulesElement({
    name: "Cloak of the Cautious +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3613",
    source: "Adventurer's Vault",
    categories: ["Cloak of the Cautious +2", "ID_FMP_MAGIC_ITEM_3613"],
    rules: function(model) {
      model.statadd("Fortitude Defense", 2, "Enhancement");
      model.statadd("Reflex Defense", 2, "Enhancement");
      model.statadd("Will Defense", 2, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Cloak of the Cautious +3"] = new RulesElement({
    name: "Cloak of the Cautious +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3614",
    source: "Adventurer's Vault",
    categories: ["Cloak of the Cautious +3", "ID_FMP_MAGIC_ITEM_3614"],
    rules: function(model) {
      model.statadd("Fortitude Defense", 3, "Enhancement");
      model.statadd("Reflex Defense", 3, "Enhancement");
      model.statadd("Will Defense", 3, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Cloak of the Cautious +4"] = new RulesElement({
    name: "Cloak of the Cautious +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3615",
    source: "Adventurer's Vault",
    categories: ["Cloak of the Cautious +4", "ID_FMP_MAGIC_ITEM_3615"],
    rules: function(model) {
      model.statadd("Fortitude Defense", 4, "Enhancement");
      model.statadd("Reflex Defense", 4, "Enhancement");
      model.statadd("Will Defense", 4, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Cloak of the Cautious +5"] = new RulesElement({
    name: "Cloak of the Cautious +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3616",
    source: "Adventurer's Vault",
    categories: ["Cloak of the Cautious +5", "ID_FMP_MAGIC_ITEM_3616"],
    rules: function(model) {
      model.statadd("Fortitude Defense", 5, "Enhancement");
      model.statadd("Reflex Defense", 5, "Enhancement");
      model.statadd("Will Defense", 5, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Cloak of the Cautious +6"] = new RulesElement({
    name: "Cloak of the Cautious +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3617",
    source: "Adventurer's Vault",
    categories: ["Cloak of the Cautious +6", "ID_FMP_MAGIC_ITEM_3617"],
    rules: function(model) {
      model.statadd("Fortitude Defense", 6, "Enhancement");
      model.statadd("Reflex Defense", 6, "Enhancement");
      model.statadd("Will Defense", 6, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Cloak of the Chirurgeon +1"] = new RulesElement({
    name: "Cloak of the Chirurgeon +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3618",
    source: "Adventurer's Vault",
    categories: ["Cloak of the Chirurgeon +1", "ID_FMP_MAGIC_ITEM_3618"],
    rules: function(model) {
      model.statadd("Heal Misc", 1, "item");
      model.statadd("Fortitude Defense", 1, "Enhancement");
      model.statadd("Reflex Defense", 1, "Enhancement");
      model.statadd("Will Defense", 1, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Cloak of the Chirurgeon +2"] = new RulesElement({
    name: "Cloak of the Chirurgeon +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3619",
    source: "Adventurer's Vault",
    categories: ["Cloak of the Chirurgeon +2", "ID_FMP_MAGIC_ITEM_3619"],
    rules: function(model) {
      model.statadd("Heal Misc", 2, "item");
      model.statadd("Fortitude Defense", 2, "Enhancement");
      model.statadd("Reflex Defense", 2, "Enhancement");
      model.statadd("Will Defense", 2, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Cloak of the Chirurgeon +3"] = new RulesElement({
    name: "Cloak of the Chirurgeon +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3620",
    source: "Adventurer's Vault",
    categories: ["Cloak of the Chirurgeon +3", "ID_FMP_MAGIC_ITEM_3620"],
    rules: function(model) {
      model.statadd("Heal Misc", 3, "item");
      model.statadd("Fortitude Defense", 3, "Enhancement");
      model.statadd("Reflex Defense", 3, "Enhancement");
      model.statadd("Will Defense", 3, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Cloak of the Chirurgeon +4"] = new RulesElement({
    name: "Cloak of the Chirurgeon +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3621",
    source: "Adventurer's Vault",
    categories: ["Cloak of the Chirurgeon +4", "ID_FMP_MAGIC_ITEM_3621"],
    rules: function(model) {
      model.statadd("Heal Misc", 4, "item");
      model.statadd("Fortitude Defense", 4, "Enhancement");
      model.statadd("Reflex Defense", 4, "Enhancement");
      model.statadd("Will Defense", 4, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Cloak of the Chirurgeon +5"] = new RulesElement({
    name: "Cloak of the Chirurgeon +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3622",
    source: "Adventurer's Vault",
    categories: ["Cloak of the Chirurgeon +5", "ID_FMP_MAGIC_ITEM_3622"],
    rules: function(model) {
      model.statadd("Heal Misc", 5, "item");
      model.statadd("Fortitude Defense", 5, "Enhancement");
      model.statadd("Reflex Defense", 5, "Enhancement");
      model.statadd("Will Defense", 5, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Cloak of the Chirurgeon +6"] = new RulesElement({
    name: "Cloak of the Chirurgeon +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3623",
    source: "Adventurer's Vault",
    categories: ["Cloak of the Chirurgeon +6", "ID_FMP_MAGIC_ITEM_3623"],
    rules: function(model) {
      model.statadd("Heal Misc", 6, "item");
      model.statadd("Fortitude Defense", 6, "Enhancement");
      model.statadd("Reflex Defense", 6, "Enhancement");
      model.statadd("Will Defense", 6, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Cloak of the Phoenix +6"] = new RulesElement({
    name: "Cloak of the Phoenix +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3624",
    source: "Adventurer's Vault",
    categories: ["Cloak of the Phoenix +6", "ID_FMP_MAGIC_ITEM_3624"],
    rules: function(model) {
      model.statadd("Fortitude Defense", 6, "Enhancement");
      model.statadd("Reflex Defense", 6, "Enhancement");
      model.statadd("Will Defense", 6, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Cloak of the Walking Wounded +1"] = new RulesElement({
    name: "Cloak of the Walking Wounded +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3625",
    source: "Adventurer's Vault",
    categories: ["Cloak of the Walking Wounded +1", "ID_FMP_MAGIC_ITEM_3625"],
    rules: function(model) {
      model.statadd("Fortitude Defense", 1, "Enhancement");
      model.statadd("Reflex Defense", 1, "Enhancement");
      model.statadd("Will Defense", 1, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Cloak of the Walking Wounded +2"] = new RulesElement({
    name: "Cloak of the Walking Wounded +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3626",
    source: "Adventurer's Vault",
    categories: ["Cloak of the Walking Wounded +2", "ID_FMP_MAGIC_ITEM_3626"],
    rules: function(model) {
      model.statadd("Fortitude Defense", 2, "Enhancement");
      model.statadd("Reflex Defense", 2, "Enhancement");
      model.statadd("Will Defense", 2, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Cloak of the Walking Wounded +3"] = new RulesElement({
    name: "Cloak of the Walking Wounded +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3627",
    source: "Adventurer's Vault",
    categories: ["Cloak of the Walking Wounded +3", "ID_FMP_MAGIC_ITEM_3627"],
    rules: function(model) {
      model.statadd("Fortitude Defense", 3, "Enhancement");
      model.statadd("Reflex Defense", 3, "Enhancement");
      model.statadd("Will Defense", 3, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Cloak of the Walking Wounded +4"] = new RulesElement({
    name: "Cloak of the Walking Wounded +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3628",
    source: "Adventurer's Vault",
    categories: ["Cloak of the Walking Wounded +4", "ID_FMP_MAGIC_ITEM_3628"],
    rules: function(model) {
      model.statadd("Fortitude Defense", 4, "Enhancement");
      model.statadd("Reflex Defense", 4, "Enhancement");
      model.statadd("Will Defense", 4, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Cloak of the Walking Wounded +5"] = new RulesElement({
    name: "Cloak of the Walking Wounded +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3629",
    source: "Adventurer's Vault",
    categories: ["Cloak of the Walking Wounded +5", "ID_FMP_MAGIC_ITEM_3629"],
    rules: function(model) {
      model.statadd("Fortitude Defense", 5, "Enhancement");
      model.statadd("Reflex Defense", 5, "Enhancement");
      model.statadd("Will Defense", 5, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Cloak of the Walking Wounded +6"] = new RulesElement({
    name: "Cloak of the Walking Wounded +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3630",
    source: "Adventurer's Vault",
    categories: ["Cloak of the Walking Wounded +6", "ID_FMP_MAGIC_ITEM_3630"],
    rules: function(model) {
      model.statadd("Fortitude Defense", 6, "Enhancement");
      model.statadd("Reflex Defense", 6, "Enhancement");
      model.statadd("Will Defense", 6, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Cloaked Weapon +2"] = new RulesElement({
    name: "Cloaked Weapon +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1989",
    source: "Adventurer's Vault",
    categories: ["Cloaked Weapon +2", "ID_FMP_MAGIC_ITEM_1989"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Cloaked Weapon +3"] = new RulesElement({
    name: "Cloaked Weapon +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1990",
    source: "Adventurer's Vault",
    categories: ["Cloaked Weapon +3", "ID_FMP_MAGIC_ITEM_1990"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Cloaked Weapon +4"] = new RulesElement({
    name: "Cloaked Weapon +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1991",
    source: "Adventurer's Vault",
    categories: ["Cloaked Weapon +4", "ID_FMP_MAGIC_ITEM_1991"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Cloaked Weapon +5"] = new RulesElement({
    name: "Cloaked Weapon +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1992",
    source: "Adventurer's Vault",
    categories: ["Cloaked Weapon +5", "ID_FMP_MAGIC_ITEM_1992"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Cloaked Weapon +6"] = new RulesElement({
    name: "Cloaked Weapon +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1993",
    source: "Adventurer's Vault",
    categories: ["Cloaked Weapon +6", "ID_FMP_MAGIC_ITEM_1993"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Clockwork Cowl (epic tier)"] = new RulesElement({
    name: "Clockwork Cowl (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3434",
    source: "Adventurer's Vault",
    categories: ["Clockwork Cowl (epic tier)", "ID_FMP_MAGIC_ITEM_3434"],
    rules: function(model) {
      model.statadd("Initiative Misc", 4, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Cog of Erathis +2"] = new RulesElement({
    name: "Cog of Erathis +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2491",
    source: "Adventurer's Vault",
    categories: ["Cog of Erathis +2", "ID_FMP_MAGIC_ITEM_2491"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Cog of Erathis +3"] = new RulesElement({
    name: "Cog of Erathis +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2492",
    source: "Adventurer's Vault",
    categories: ["Cog of Erathis +3", "ID_FMP_MAGIC_ITEM_2492"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Cog of Erathis +4"] = new RulesElement({
    name: "Cog of Erathis +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2493",
    source: "Adventurer's Vault",
    categories: ["Cog of Erathis +4", "ID_FMP_MAGIC_ITEM_2493"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Cog of Erathis +5"] = new RulesElement({
    name: "Cog of Erathis +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2494",
    source: "Adventurer's Vault",
    categories: ["Cog of Erathis +5", "ID_FMP_MAGIC_ITEM_2494"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Cog of Erathis +6"] = new RulesElement({
    name: "Cog of Erathis +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2495",
    source: "Adventurer's Vault",
    categories: ["Cog of Erathis +6", "ID_FMP_MAGIC_ITEM_2495"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Cognizance Ring (paragon tier)"] = new RulesElement({
    name: "Cognizance Ring (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3729",
    source: "Adventurer's Vault",
    categories: ["Cognizance Ring (paragon tier)", "ID_FMP_MAGIC_ITEM_3729"],
    rules: function(model) {
      model.statadd("Saving Throws", function() { /* against conditions with the charm, fear, illusion, or psychic keyword */ return 1; }, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Coif of Focus (epic tier)"] = new RulesElement({
    name: "Coif of Focus (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3435",
    source: "Adventurer's Vault",
    categories: ["Coif of Focus (epic tier)", "ID_FMP_MAGIC_ITEM_3435"],
    rules: function(model) {
      model.statadd("Saving Throws", function() { /* against effects that make you dazed and/or stunned */ return 5; }, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Coif of Mindiron (epic tier)"] = new RulesElement({
    name: "Coif of Mindiron (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3438",
    source: "Adventurer's Vault",
    categories: ["Coif of Mindiron (epic tier)", "ID_FMP_MAGIC_ITEM_3438"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Coif of Mindiron (heroic tier)"] = new RulesElement({
    name: "Coif of Mindiron (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3436",
    source: "Adventurer's Vault",
    categories: ["Coif of Mindiron (heroic tier)", "ID_FMP_MAGIC_ITEM_3436"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Coif of Mindiron (paragon tier)"] = new RulesElement({
    name: "Coif of Mindiron (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3437",
    source: "Adventurer's Vault",
    categories: ["Coif of Mindiron (paragon tier)", "ID_FMP_MAGIC_ITEM_3437"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Cold Iron Bracers (epic tier)"] = new RulesElement({
    name: "Cold Iron Bracers (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3203",
    source: "Adventurer's Vault",
    categories: ["Cold Iron Bracers (epic tier)", "ID_FMP_MAGIC_ITEM_3203"],
    rules: function(model) {
      model.statadd("AC", function() { /* against fey creatures' attacks */ return 3; }, "item");
      model.statadd("Reflex Defense", function() { /* against fey creatures' attacks */ return 3; }, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Cold Iron Bracers (heroic tier)"] = new RulesElement({
    name: "Cold Iron Bracers (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3201",
    source: "Adventurer's Vault",
    categories: ["Cold Iron Bracers (heroic tier)", "ID_FMP_MAGIC_ITEM_3201"],
    rules: function(model) {
      model.statadd("AC", function() { /* against fey creatures' attacks */ return 1; }, "item");
      model.statadd("Reflex Defense", function() { /* against fey creatures' attacks */ return 1; }, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Cold Iron Bracers (paragon tier)"] = new RulesElement({
    name: "Cold Iron Bracers (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3202",
    source: "Adventurer's Vault",
    categories: ["Cold Iron Bracers (paragon tier)", "ID_FMP_MAGIC_ITEM_3202"],
    rules: function(model) {
      model.statadd("AC", function() { /* against fey creatures' attacks */ return 2; }, "item");
      model.statadd("Reflex Defense", function() { /* against fey creatures' attacks */ return 2; }, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Cold Iron Shield (epic tier)"] = new RulesElement({
    name: "Cold Iron Shield (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3206",
    source: "Adventurer's Vault",
    categories: ["Cold Iron Shield (epic tier)", "ID_FMP_MAGIC_ITEM_3206"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Cold Iron Shield (heroic tier)"] = new RulesElement({
    name: "Cold Iron Shield (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3204",
    source: "Adventurer's Vault",
    categories: ["Cold Iron Shield (heroic tier)", "ID_FMP_MAGIC_ITEM_3204"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Cold Iron Shield (paragon tier)"] = new RulesElement({
    name: "Cold Iron Shield (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3205",
    source: "Adventurer's Vault",
    categories: ["Cold Iron Shield (paragon tier)", "ID_FMP_MAGIC_ITEM_3205"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Cold Iron Weapon +2"] = new RulesElement({
    name: "Cold Iron Weapon +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1994",
    source: "Adventurer's Vault",
    categories: ["Cold Iron Weapon +2", "ID_FMP_MAGIC_ITEM_1994"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Cold Iron Weapon +3"] = new RulesElement({
    name: "Cold Iron Weapon +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1995",
    source: "Adventurer's Vault",
    categories: ["Cold Iron Weapon +3", "ID_FMP_MAGIC_ITEM_1995"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Cold Iron Weapon +4"] = new RulesElement({
    name: "Cold Iron Weapon +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1996",
    source: "Adventurer's Vault",
    categories: ["Cold Iron Weapon +4", "ID_FMP_MAGIC_ITEM_1996"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Cold Iron Weapon +5"] = new RulesElement({
    name: "Cold Iron Weapon +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1997",
    source: "Adventurer's Vault",
    categories: ["Cold Iron Weapon +5", "ID_FMP_MAGIC_ITEM_1997"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Cold Iron Weapon +6"] = new RulesElement({
    name: "Cold Iron Weapon +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1998",
    source: "Adventurer's Vault",
    categories: ["Cold Iron Weapon +6", "ID_FMP_MAGIC_ITEM_1998"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Collar of Recovery +1"] = new RulesElement({
    name: "Collar of Recovery +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3631",
    source: "Adventurer's Vault",
    categories: ["Collar of Recovery +1", "ID_FMP_MAGIC_ITEM_3631"],
    rules: function(model) {
      model.statadd("Fortitude Defense", 1, "Enhancement");
      model.statadd("Reflex Defense", 1, "Enhancement");
      model.statadd("Will Defense", 1, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Collar of Recovery +2"] = new RulesElement({
    name: "Collar of Recovery +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3632",
    source: "Adventurer's Vault",
    categories: ["Collar of Recovery +2", "ID_FMP_MAGIC_ITEM_3632"],
    rules: function(model) {
      model.statadd("Fortitude Defense", 2, "Enhancement");
      model.statadd("Reflex Defense", 2, "Enhancement");
      model.statadd("Will Defense", 2, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Collar of Recovery +3"] = new RulesElement({
    name: "Collar of Recovery +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3633",
    source: "Adventurer's Vault",
    categories: ["Collar of Recovery +3", "ID_FMP_MAGIC_ITEM_3633"],
    rules: function(model) {
      model.statadd("Fortitude Defense", 3, "Enhancement");
      model.statadd("Reflex Defense", 3, "Enhancement");
      model.statadd("Will Defense", 3, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Collar of Recovery +4"] = new RulesElement({
    name: "Collar of Recovery +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3634",
    source: "Adventurer's Vault",
    categories: ["Collar of Recovery +4", "ID_FMP_MAGIC_ITEM_3634"],
    rules: function(model) {
      model.statadd("Fortitude Defense", 4, "Enhancement");
      model.statadd("Reflex Defense", 4, "Enhancement");
      model.statadd("Will Defense", 4, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Collar of Recovery +5"] = new RulesElement({
    name: "Collar of Recovery +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3635",
    source: "Adventurer's Vault",
    categories: ["Collar of Recovery +5", "ID_FMP_MAGIC_ITEM_3635"],
    rules: function(model) {
      model.statadd("Fortitude Defense", 5, "Enhancement");
      model.statadd("Reflex Defense", 5, "Enhancement");
      model.statadd("Will Defense", 5, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Collar of Recovery +6"] = new RulesElement({
    name: "Collar of Recovery +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3636",
    source: "Adventurer's Vault",
    categories: ["Collar of Recovery +6", "ID_FMP_MAGIC_ITEM_3636"],
    rules: function(model) {
      model.statadd("Fortitude Defense", 6, "Enhancement");
      model.statadd("Reflex Defense", 6, "Enhancement");
      model.statadd("Will Defense", 6, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Communal Weapon +1"] = new RulesElement({
    name: "Communal Weapon +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1999",
    source: "Adventurer's Vault",
    categories: ["Communal Weapon +1", "ID_FMP_MAGIC_ITEM_1999"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Communal Weapon +2"] = new RulesElement({
    name: "Communal Weapon +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2000",
    source: "Adventurer's Vault",
    categories: ["Communal Weapon +2", "ID_FMP_MAGIC_ITEM_2000"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Communal Weapon +3"] = new RulesElement({
    name: "Communal Weapon +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2001",
    source: "Adventurer's Vault",
    categories: ["Communal Weapon +3", "ID_FMP_MAGIC_ITEM_2001"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Communal Weapon +4"] = new RulesElement({
    name: "Communal Weapon +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2002",
    source: "Adventurer's Vault",
    categories: ["Communal Weapon +4", "ID_FMP_MAGIC_ITEM_2002"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Communal Weapon +5"] = new RulesElement({
    name: "Communal Weapon +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2003",
    source: "Adventurer's Vault",
    categories: ["Communal Weapon +5", "ID_FMP_MAGIC_ITEM_2003"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Communal Weapon +6"] = new RulesElement({
    name: "Communal Weapon +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2004",
    source: "Adventurer's Vault",
    categories: ["Communal Weapon +6", "ID_FMP_MAGIC_ITEM_2004"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Companion's Defender (epic tier)"] = new RulesElement({
    name: "Companion's Defender (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3958",
    source: "Adventurer's Vault",
    categories: ["Companion's Defender (epic tier)", "ID_FMP_MAGIC_ITEM_3958"],
    rules: function(model) {
      model.statadd("BEAST.AC", function() { /* while adjacent to you */ return 3; }, "item");
      model.statadd("BEAST.Fortitude Defense", function() { /* while adjacent to you */ return 3; }, "item");
      model.statadd("BEAST.Will Defense", function() { /* while adjacent to you */ return 3; }, "item");
      model.statadd("BEAST.Reflex Defense", function() { /* while adjacent to you */ return 3; }, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Companion's Defender (heroic tier)"] = new RulesElement({
    name: "Companion's Defender (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3956",
    source: "Adventurer's Vault",
    categories: ["Companion's Defender (heroic tier)", "ID_FMP_MAGIC_ITEM_3956"],
    rules: function(model) {
      model.statadd("BEAST.AC", function() { /* while adjacent to you */ return 1; }, "item");
      model.statadd("BEAST.Fortitude Defense", function() { /* while adjacent to you */ return 1; }, "item");
      model.statadd("BEAST.Will Defense", function() { /* while adjacent to you */ return 1; }, "item");
      model.statadd("BEAST.Reflex Defense", function() { /* while adjacent to you */ return 1; }, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Companion's Defender (paragon tier)"] = new RulesElement({
    name: "Companion's Defender (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3957",
    source: "Adventurer's Vault",
    categories: ["Companion's Defender (paragon tier)", "ID_FMP_MAGIC_ITEM_3957"],
    rules: function(model) {
      model.statadd("BEAST.AC", function() { /* while adjacent to you */ return 2; }, "item");
      model.statadd("BEAST.Fortitude Defense", function() { /* while adjacent to you */ return 2; }, "item");
      model.statadd("BEAST.Will Defense", function() { /* while adjacent to you */ return 2; }, "item");
      model.statadd("BEAST.Reflex Defense", function() { /* while adjacent to you */ return 2; }, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Contortionist's Cord (heroic tier)"] = new RulesElement({
    name: "Contortionist's Cord (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3795",
    source: "Adventurer's Vault",
    categories: ["Contortionist's Cord (heroic tier)", "ID_FMP_MAGIC_ITEM_3795"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Controlling Weapon +2"] = new RulesElement({
    name: "Controlling Weapon +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2005",
    source: "Adventurer's Vault",
    categories: ["Controlling Weapon +2", "ID_FMP_MAGIC_ITEM_2005"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Controlling Weapon +3"] = new RulesElement({
    name: "Controlling Weapon +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2006",
    source: "Adventurer's Vault",
    categories: ["Controlling Weapon +3", "ID_FMP_MAGIC_ITEM_2006"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Controlling Weapon +4"] = new RulesElement({
    name: "Controlling Weapon +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2007",
    source: "Adventurer's Vault",
    categories: ["Controlling Weapon +4", "ID_FMP_MAGIC_ITEM_2007"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Controlling Weapon +5"] = new RulesElement({
    name: "Controlling Weapon +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2008",
    source: "Adventurer's Vault",
    categories: ["Controlling Weapon +5", "ID_FMP_MAGIC_ITEM_2008"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Controlling Weapon +6"] = new RulesElement({
    name: "Controlling Weapon +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2009",
    source: "Adventurer's Vault",
    categories: ["Controlling Weapon +6", "ID_FMP_MAGIC_ITEM_2009"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Coral Armor +3"] = new RulesElement({
    name: "Coral Armor +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1542",
    source: "Adventurer's Vault",
    categories: ["Coral Armor +3", "ID_FMP_MAGIC_ITEM_1542"],
    rules: function(model) {
      model.statadd("Armor Class", 3, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 3);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Coral Armor +4"] = new RulesElement({
    name: "Coral Armor +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1543",
    source: "Adventurer's Vault",
    categories: ["Coral Armor +4", "ID_FMP_MAGIC_ITEM_1543"],
    rules: function(model) {
      model.statadd("Armor Class", 4, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 4);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Coral Armor +5"] = new RulesElement({
    name: "Coral Armor +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1544",
    source: "Adventurer's Vault",
    categories: ["Coral Armor +5", "ID_FMP_MAGIC_ITEM_1544"],
    rules: function(model) {
      model.statadd("Armor Class", 5, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 5);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Coral Armor +6"] = new RulesElement({
    name: "Coral Armor +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1545",
    source: "Adventurer's Vault",
    categories: ["Coral Armor +6", "ID_FMP_MAGIC_ITEM_1545"],
    rules: function(model) {
      model.statadd("Armor Class", 6, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 6);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Cord of Divine Favor (paragon tier)"] = new RulesElement({
    name: "Cord of Divine Favor (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3796",
    source: "Adventurer's Vault",
    categories: ["Cord of Divine Favor (paragon tier)", "ID_FMP_MAGIC_ITEM_3796"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Cord of Foresight (paragon tier)"] = new RulesElement({
    name: "Cord of Foresight (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3797",
    source: "Adventurer's Vault",
    categories: ["Cord of Foresight (paragon tier)", "ID_FMP_MAGIC_ITEM_3797"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Counterstrike Guards (heroic tier)"] = new RulesElement({
    name: "Counterstrike Guards (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3207",
    source: "Adventurer's Vault",
    categories: ["Counterstrike Guards (heroic tier)", "ID_FMP_MAGIC_ITEM_3207"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Counterstrike Guards (paragon tier)"] = new RulesElement({
    name: "Counterstrike Guards (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3208",
    source: "Adventurer's Vault",
    categories: ["Counterstrike Guards (paragon tier)", "ID_FMP_MAGIC_ITEM_3208"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Couters of Second Chances (epic tier)"] = new RulesElement({
    name: "Couters of Second Chances (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3211",
    source: "Adventurer's Vault",
    categories: ["Couters of Second Chances (epic tier)", "ID_FMP_MAGIC_ITEM_3211"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Couters of Second Chances (heroic tier)"] = new RulesElement({
    name: "Couters of Second Chances (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3209",
    source: "Adventurer's Vault",
    categories: ["Couters of Second Chances (heroic tier)", "ID_FMP_MAGIC_ITEM_3209"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Couters of Second Chances (paragon tier)"] = new RulesElement({
    name: "Couters of Second Chances (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3210",
    source: "Adventurer's Vault",
    categories: ["Couters of Second Chances (paragon tier)", "ID_FMP_MAGIC_ITEM_3210"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Creeping Gatevine (epic tier)"] = new RulesElement({
    name: "Creeping Gatevine (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_4056",
    source: "Adventurer's Vault",
    categories: ["Creeping Gatevine (epic tier)", "ID_FMP_MAGIC_ITEM_4056"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Creeping Gatevine (heroic tier)"] = new RulesElement({
    name: "Creeping Gatevine (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_4054",
    source: "Adventurer's Vault",
    categories: ["Creeping Gatevine (heroic tier)", "ID_FMP_MAGIC_ITEM_4054"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Creeping Gatevine (paragon tier)"] = new RulesElement({
    name: "Creeping Gatevine (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_4055",
    source: "Adventurer's Vault",
    categories: ["Creeping Gatevine (paragon tier)", "ID_FMP_MAGIC_ITEM_4055"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Crown of Doors (epic tier)"] = new RulesElement({
    name: "Crown of Doors (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3441",
    source: "Adventurer's Vault",
    categories: ["Crown of Doors (epic tier)", "ID_FMP_MAGIC_ITEM_3441"],
    rules: function(model) {
      model.statadd("Perception Misc", 6, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Crown of Doors (heroic tier)"] = new RulesElement({
    name: "Crown of Doors (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3439",
    source: "Adventurer's Vault",
    categories: ["Crown of Doors (heroic tier)", "ID_FMP_MAGIC_ITEM_3439"],
    rules: function(model) {
      model.statadd("Perception Misc", 2, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Crown of Doors (paragon tier)"] = new RulesElement({
    name: "Crown of Doors (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3440",
    source: "Adventurer's Vault",
    categories: ["Crown of Doors (paragon tier)", "ID_FMP_MAGIC_ITEM_3440"],
    rules: function(model) {
      model.statadd("Perception Misc", 4, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Crown of Eyes (paragon tier)"] = new RulesElement({
    name: "Crown of Eyes (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3442",
    source: "Adventurer's Vault",
    categories: ["Crown of Eyes (paragon tier)", "ID_FMP_MAGIC_ITEM_3442"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Crown of Infernal Legacy (heroic tier)"] = new RulesElement({
    name: "Crown of Infernal Legacy (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3443",
    source: "Adventurer's Vault",
    categories: ["Crown of Infernal Legacy (heroic tier)", "ID_FMP_MAGIC_ITEM_3443"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Crown of Infernal Legacy (paragon tier)"] = new RulesElement({
    name: "Crown of Infernal Legacy (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3444",
    source: "Adventurer's Vault",
    categories: ["Crown of Infernal Legacy (paragon tier)", "ID_FMP_MAGIC_ITEM_3444"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Crown of Leaves (heroic tier)"] = new RulesElement({
    name: "Crown of Leaves (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3445",
    source: "Adventurer's Vault",
    categories: ["Crown of Leaves (heroic tier)", "ID_FMP_MAGIC_ITEM_3445"],
    rules: function(model) {
      model.statadd("Nature Misc", 2, "item");
      model.statadd("Insight Misc", 2, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Crown of Nature's Rebellion (level 15)"] = new RulesElement({
    name: "Crown of Nature's Rebellion (level 15)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3446",
    source: "Adventurer's Vault",
    categories: ["Crown of Nature's Rebellion (level 15)", "ID_FMP_MAGIC_ITEM_3446"],
    rules: function(model) {
      model.statadd("Crown of Nature's Rebellion (level 15)", 10, "Crown of Nature's Rebellion (level 15)");
      model.statadd("resist:necrotic", function() { return model.stat("Crown of Nature's Rebellion (level 15)"); }, "resist");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Crown of Nature's Rebellion (level 20)"] = new RulesElement({
    name: "Crown of Nature's Rebellion (level 20)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3447",
    source: "Adventurer's Vault",
    categories: ["Crown of Nature's Rebellion (level 20)", "ID_FMP_MAGIC_ITEM_3447"],
    rules: function(model) {
      model.statadd("Crown of Nature's Rebellion (level 20)", 15, "Crown of Nature's Rebellion (level 20)");
      model.statadd("resist:necrotic", function() { return model.stat("Crown of Nature's Rebellion (level 20)"); }, "resist");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Crown of Nature's Rebellion (level 25)"] = new RulesElement({
    name: "Crown of Nature's Rebellion (level 25)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3448",
    source: "Adventurer's Vault",
    categories: ["Crown of Nature's Rebellion (level 25)", "ID_FMP_MAGIC_ITEM_3448"],
    rules: function(model) {
      model.statadd("Crown of Nature's Rebellion (level 25)", 20, "Crown of Nature's Rebellion (level 25)");
      model.statadd("resist:necrotic", function() { return model.stat("Crown of Nature's Rebellion (level 25)"); }, "resist");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Crown of the World Tree (paragon tier)"] = new RulesElement({
    name: "Crown of the World Tree (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3449",
    source: "Adventurer's Vault",
    categories: ["Crown of the World Tree (paragon tier)", "ID_FMP_MAGIC_ITEM_3449"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Crusader's Weapon +2"] = new RulesElement({
    name: "Crusader's Weapon +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2010",
    source: "Adventurer's Vault",
    categories: ["Crusader's Weapon +2", "ID_FMP_MAGIC_ITEM_2010"],
    rules: function(model) {
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Crusader's Weapon +3"] = new RulesElement({
    name: "Crusader's Weapon +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2011",
    source: "Adventurer's Vault",
    categories: ["Crusader's Weapon +3", "ID_FMP_MAGIC_ITEM_2011"],
    rules: function(model) {
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Crusader's Weapon +4"] = new RulesElement({
    name: "Crusader's Weapon +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2012",
    source: "Adventurer's Vault",
    categories: ["Crusader's Weapon +4", "ID_FMP_MAGIC_ITEM_2012"],
    rules: function(model) {
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Crusader's Weapon +5"] = new RulesElement({
    name: "Crusader's Weapon +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2013",
    source: "Adventurer's Vault",
    categories: ["Crusader's Weapon +5", "ID_FMP_MAGIC_ITEM_2013"],
    rules: function(model) {
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Crusader's Weapon +6"] = new RulesElement({
    name: "Crusader's Weapon +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2014",
    source: "Adventurer's Vault",
    categories: ["Crusader's Weapon +6", "ID_FMP_MAGIC_ITEM_2014"],
    rules: function(model) {
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Cryptspawn Potion (paragon tier)"] = new RulesElement({
    name: "Cryptspawn Potion (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3920",
    source: "Adventurer's Vault",
    categories: ["Cryptspawn Potion (paragon tier)", "ID_FMP_MAGIC_ITEM_3920"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Crystal Armor +1"] = new RulesElement({
    name: "Crystal Armor +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1546",
    source: "Adventurer's Vault",
    categories: ["Crystal Armor +1", "ID_FMP_MAGIC_ITEM_1546"],
    rules: function(model) {
      model.statadd("Will Defense", function() { /* when bloodied */ return 2; }, "item");
      model.statadd("Armor Class", 1, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 1);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Crystal Armor +2"] = new RulesElement({
    name: "Crystal Armor +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1547",
    source: "Adventurer's Vault",
    categories: ["Crystal Armor +2", "ID_FMP_MAGIC_ITEM_1547"],
    rules: function(model) {
      model.statadd("Will Defense", function() { /* when bloodied */ return 2; }, "item");
      model.statadd("Armor Class", 2, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 2);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Crystal Armor +3"] = new RulesElement({
    name: "Crystal Armor +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1548",
    source: "Adventurer's Vault",
    categories: ["Crystal Armor +3", "ID_FMP_MAGIC_ITEM_1548"],
    rules: function(model) {
      model.statadd("Will Defense", function() { /* when bloodied */ return 2; }, "item");
      model.statadd("Armor Class", 3, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 3);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Crystal Armor +4"] = new RulesElement({
    name: "Crystal Armor +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1549",
    source: "Adventurer's Vault",
    categories: ["Crystal Armor +4", "ID_FMP_MAGIC_ITEM_1549"],
    rules: function(model) {
      model.statadd("Will Defense", function() { /* when bloodied */ return 2; }, "item");
      model.statadd("Armor Class", 4, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 4);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Crystal Armor +5"] = new RulesElement({
    name: "Crystal Armor +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1550",
    source: "Adventurer's Vault",
    categories: ["Crystal Armor +5", "ID_FMP_MAGIC_ITEM_1550"],
    rules: function(model) {
      model.statadd("Will Defense", function() { /* when bloodied */ return 2; }, "item");
      model.statadd("Armor Class", 5, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 5);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Crystal Armor +6"] = new RulesElement({
    name: "Crystal Armor +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1551",
    source: "Adventurer's Vault",
    categories: ["Crystal Armor +6", "ID_FMP_MAGIC_ITEM_1551"],
    rules: function(model) {
      model.statadd("Will Defense", function() { /* when bloodied */ return 2; }, "item");
      model.statadd("Armor Class", 6, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 6);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Crystal Ball of Spying (heroic tier)"] = new RulesElement({
    name: "Crystal Ball of Spying (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3833",
    source: "Adventurer's Vault",
    categories: ["Crystal Ball of Spying (heroic tier)", "ID_FMP_MAGIC_ITEM_3833"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Crystal Ball of Spying (paragon tier)"] = new RulesElement({
    name: "Crystal Ball of Spying (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3834",
    source: "Adventurer's Vault",
    categories: ["Crystal Ball of Spying (paragon tier)", "ID_FMP_MAGIC_ITEM_3834"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Cunning Weapon +2"] = new RulesElement({
    name: "Cunning Weapon +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2015",
    source: "Adventurer's Vault",
    categories: ["Cunning Weapon +2", "ID_FMP_MAGIC_ITEM_2015"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Cunning Weapon +3"] = new RulesElement({
    name: "Cunning Weapon +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2016",
    source: "Adventurer's Vault",
    categories: ["Cunning Weapon +3", "ID_FMP_MAGIC_ITEM_2016"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Cunning Weapon +4"] = new RulesElement({
    name: "Cunning Weapon +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2017",
    source: "Adventurer's Vault",
    categories: ["Cunning Weapon +4", "ID_FMP_MAGIC_ITEM_2017"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Cunning Weapon +5"] = new RulesElement({
    name: "Cunning Weapon +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2018",
    source: "Adventurer's Vault",
    categories: ["Cunning Weapon +5", "ID_FMP_MAGIC_ITEM_2018"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Cunning Weapon +6"] = new RulesElement({
    name: "Cunning Weapon +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2019",
    source: "Adventurer's Vault",
    categories: ["Cunning Weapon +6", "ID_FMP_MAGIC_ITEM_2019"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Cynic's Goggles (heroic tier)"] = new RulesElement({
    name: "Cynic's Goggles (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3450",
    source: "Adventurer's Vault",
    categories: ["Cynic's Goggles (heroic tier)", "ID_FMP_MAGIC_ITEM_3450"],
    rules: function(model) {
      model.statadd("Will Defense", function() { /* against illusion attacks */ return 2; }, "item");
      model.statadd("Insight Misc", function() { /* to detect illusions */ return 2; }, "item");
      model.statadd("Perception Misc", function() { /* to detect illusions */ return 2; }, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Dark Clover (epic tier)"] = new RulesElement({
    name: "Dark Clover (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_4059",
    source: "Adventurer's Vault",
    categories: ["Dark Clover (epic tier)", "ID_FMP_MAGIC_ITEM_4059"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Dark Clover (heroic tier)"] = new RulesElement({
    name: "Dark Clover (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_4057",
    source: "Adventurer's Vault",
    categories: ["Dark Clover (heroic tier)", "ID_FMP_MAGIC_ITEM_4057"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Dark Clover (paragon tier)"] = new RulesElement({
    name: "Dark Clover (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_4058",
    source: "Adventurer's Vault",
    categories: ["Dark Clover (paragon tier)", "ID_FMP_MAGIC_ITEM_4058"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Darkforged Armor +3"] = new RulesElement({
    name: "Darkforged Armor +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1552",
    source: "Adventurer's Vault",
    categories: ["Darkforged Armor +3", "ID_FMP_MAGIC_ITEM_1552"],
    rules: function(model) {
      model.statadd("Armor Class", 3, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 3);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Darkforged Armor +4"] = new RulesElement({
    name: "Darkforged Armor +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1553",
    source: "Adventurer's Vault",
    categories: ["Darkforged Armor +4", "ID_FMP_MAGIC_ITEM_1553"],
    rules: function(model) {
      model.statadd("Armor Class", 4, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 4);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Darkforged Armor +5"] = new RulesElement({
    name: "Darkforged Armor +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1554",
    source: "Adventurer's Vault",
    categories: ["Darkforged Armor +5", "ID_FMP_MAGIC_ITEM_1554"],
    rules: function(model) {
      model.statadd("Armor Class", 5, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 5);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Darkforged Armor +6"] = new RulesElement({
    name: "Darkforged Armor +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1555",
    source: "Adventurer's Vault",
    categories: ["Darkforged Armor +6", "ID_FMP_MAGIC_ITEM_1555"],
    rules: function(model) {
      model.statadd("Armor Class", 6, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 6);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Darkleaf Shield (epic tier)"] = new RulesElement({
    name: "Darkleaf Shield (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3214",
    source: "Adventurer's Vault",
    categories: ["Darkleaf Shield (epic tier)", "ID_FMP_MAGIC_ITEM_3214"],
    rules: function(model) {
      model.statadd("AC", function() { /* during the surprise round and the first nonsurprise round of each encounter */ return 3; }, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Darkleaf Shield (heroic tier)"] = new RulesElement({
    name: "Darkleaf Shield (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3212",
    source: "Adventurer's Vault",
    categories: ["Darkleaf Shield (heroic tier)", "ID_FMP_MAGIC_ITEM_3212"],
    rules: function(model) {
      model.statadd("AC", function() { /* during the surprise round and the first nonsurprise round of each encounter */ return 1; }, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Darkleaf Shield (paragon tier)"] = new RulesElement({
    name: "Darkleaf Shield (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3213",
    source: "Adventurer's Vault",
    categories: ["Darkleaf Shield (paragon tier)", "ID_FMP_MAGIC_ITEM_3213"],
    rules: function(model) {
      model.statadd("AC", function() { /* during the surprise round and the first nonsurprise round of each encounter */ return 2; }, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Darkskull (heroic tier)"] = new RulesElement({
    name: "Darkskull (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3835",
    source: "Adventurer's Vault",
    categories: ["Darkskull (heroic tier)", "ID_FMP_MAGIC_ITEM_3835"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Deadblast Bone (paragon tier)"] = new RulesElement({
    name: "Deadblast Bone (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3836",
    source: "Adventurer's Vault",
    categories: ["Deadblast Bone (paragon tier)", "ID_FMP_MAGIC_ITEM_3836"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Death Rattle (heroic tier)"] = new RulesElement({
    name: "Death Rattle (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3837",
    source: "Adventurer's Vault",
    categories: ["Death Rattle (heroic tier)", "ID_FMP_MAGIC_ITEM_3837"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Death-Defying Cloak +5"] = new RulesElement({
    name: "Death-Defying Cloak +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3637",
    source: "Adventurer's Vault",
    categories: ["Death-Defying Cloak +5", "ID_FMP_MAGIC_ITEM_3637"],
    rules: function(model) {
      model.statadd("Fortitude Defense", 5, "Enhancement");
      model.statadd("Reflex Defense", 5, "Enhancement");
      model.statadd("Will Defense", 5, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Death-Defying Cloak +6"] = new RulesElement({
    name: "Death-Defying Cloak +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3638",
    source: "Adventurer's Vault",
    categories: ["Death-Defying Cloak +6", "ID_FMP_MAGIC_ITEM_3638"],
    rules: function(model) {
      model.statadd("Fortitude Defense", 6, "Enhancement");
      model.statadd("Reflex Defense", 6, "Enhancement");
      model.statadd("Will Defense", 6, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Deathspawn Potion (epic tier)"] = new RulesElement({
    name: "Deathspawn Potion (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3921",
    source: "Adventurer's Vault",
    categories: ["Deathspawn Potion (epic tier)", "ID_FMP_MAGIC_ITEM_3921"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Deathstalker Weapon +1"] = new RulesElement({
    name: "Deathstalker Weapon +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2020",
    source: "Adventurer's Vault",
    categories: ["Deathstalker Weapon +1", "ID_FMP_MAGIC_ITEM_2020"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Deathstalker Weapon +2"] = new RulesElement({
    name: "Deathstalker Weapon +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2021",
    source: "Adventurer's Vault",
    categories: ["Deathstalker Weapon +2", "ID_FMP_MAGIC_ITEM_2021"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Deathstalker Weapon +3"] = new RulesElement({
    name: "Deathstalker Weapon +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2022",
    source: "Adventurer's Vault",
    categories: ["Deathstalker Weapon +3", "ID_FMP_MAGIC_ITEM_2022"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Deathstalker Weapon +4"] = new RulesElement({
    name: "Deathstalker Weapon +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2023",
    source: "Adventurer's Vault",
    categories: ["Deathstalker Weapon +4", "ID_FMP_MAGIC_ITEM_2023"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Deathstalker Weapon +5"] = new RulesElement({
    name: "Deathstalker Weapon +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2024",
    source: "Adventurer's Vault",
    categories: ["Deathstalker Weapon +5", "ID_FMP_MAGIC_ITEM_2024"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Deathstalker Weapon +6"] = new RulesElement({
    name: "Deathstalker Weapon +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2025",
    source: "Adventurer's Vault",
    categories: ["Deathstalker Weapon +6", "ID_FMP_MAGIC_ITEM_2025"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Decerebrate Weapon +2"] = new RulesElement({
    name: "Decerebrate Weapon +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2026",
    source: "Adventurer's Vault",
    categories: ["Decerebrate Weapon +2", "ID_FMP_MAGIC_ITEM_2026"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Decerebrate Weapon +3"] = new RulesElement({
    name: "Decerebrate Weapon +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2027",
    source: "Adventurer's Vault",
    categories: ["Decerebrate Weapon +3", "ID_FMP_MAGIC_ITEM_2027"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Decerebrate Weapon +4"] = new RulesElement({
    name: "Decerebrate Weapon +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2028",
    source: "Adventurer's Vault",
    categories: ["Decerebrate Weapon +4", "ID_FMP_MAGIC_ITEM_2028"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Decerebrate Weapon +5"] = new RulesElement({
    name: "Decerebrate Weapon +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2029",
    source: "Adventurer's Vault",
    categories: ["Decerebrate Weapon +5", "ID_FMP_MAGIC_ITEM_2029"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Decerebrate Weapon +6"] = new RulesElement({
    name: "Decerebrate Weapon +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2030",
    source: "Adventurer's Vault",
    categories: ["Decerebrate Weapon +6", "ID_FMP_MAGIC_ITEM_2030"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Defensive Staff +1"] = new RulesElement({
    name: "Defensive Staff +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2912",
    source: "Adventurer's Vault",
    categories: ["Defensive Staff +1", "ID_FMP_MAGIC_ITEM_2912"],
    rules: function(model) {
      model.statadd("Fortitude Defense", 1, "item");
      model.statadd("Reflex Defense", 1, "item");
      model.statadd("Will Defense", 1, "item");
      model.statadd("AC", 1, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Defensive Staff +2"] = new RulesElement({
    name: "Defensive Staff +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2913",
    source: "Adventurer's Vault",
    categories: ["Defensive Staff +2", "ID_FMP_MAGIC_ITEM_2913"],
    rules: function(model) {
      model.statadd("Fortitude Defense", 1, "item");
      model.statadd("Reflex Defense", 1, "item");
      model.statadd("Will Defense", 1, "item");
      model.statadd("AC", 1, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Defensive Staff +3"] = new RulesElement({
    name: "Defensive Staff +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2914",
    source: "Adventurer's Vault",
    categories: ["Defensive Staff +3", "ID_FMP_MAGIC_ITEM_2914"],
    rules: function(model) {
      model.statadd("Fortitude Defense", 1, "item");
      model.statadd("Reflex Defense", 1, "item");
      model.statadd("Will Defense", 1, "item");
      model.statadd("AC", 1, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Defensive Staff +4"] = new RulesElement({
    name: "Defensive Staff +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2915",
    source: "Adventurer's Vault",
    categories: ["Defensive Staff +4", "ID_FMP_MAGIC_ITEM_2915"],
    rules: function(model) {
      model.statadd("Fortitude Defense", 1, "item");
      model.statadd("Reflex Defense", 1, "item");
      model.statadd("Will Defense", 1, "item");
      model.statadd("AC", 1, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Defensive Staff +5"] = new RulesElement({
    name: "Defensive Staff +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2916",
    source: "Adventurer's Vault",
    categories: ["Defensive Staff +5", "ID_FMP_MAGIC_ITEM_2916"],
    rules: function(model) {
      model.statadd("Fortitude Defense", 1, "item");
      model.statadd("Reflex Defense", 1, "item");
      model.statadd("Will Defense", 1, "item");
      model.statadd("AC", 1, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Defensive Staff +6"] = new RulesElement({
    name: "Defensive Staff +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2917",
    source: "Adventurer's Vault",
    categories: ["Defensive Staff +6", "ID_FMP_MAGIC_ITEM_2917"],
    rules: function(model) {
      model.statadd("Fortitude Defense", 1, "item");
      model.statadd("Reflex Defense", 1, "item");
      model.statadd("Will Defense", 1, "item");
      model.statadd("AC", 1, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Defensive Weapon +1"] = new RulesElement({
    name: "Defensive Weapon +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2031",
    source: "Adventurer's Vault",
    categories: ["Defensive Weapon +1", "ID_FMP_MAGIC_ITEM_2031"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Defensive Weapon +2"] = new RulesElement({
    name: "Defensive Weapon +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2032",
    source: "Adventurer's Vault",
    categories: ["Defensive Weapon +2", "ID_FMP_MAGIC_ITEM_2032"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Defensive Weapon +3"] = new RulesElement({
    name: "Defensive Weapon +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2033",
    source: "Adventurer's Vault",
    categories: ["Defensive Weapon +3", "ID_FMP_MAGIC_ITEM_2033"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Defensive Weapon +4"] = new RulesElement({
    name: "Defensive Weapon +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2034",
    source: "Adventurer's Vault",
    categories: ["Defensive Weapon +4", "ID_FMP_MAGIC_ITEM_2034"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Defensive Weapon +5"] = new RulesElement({
    name: "Defensive Weapon +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2035",
    source: "Adventurer's Vault",
    categories: ["Defensive Weapon +5", "ID_FMP_MAGIC_ITEM_2035"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Defensive Weapon +6"] = new RulesElement({
    name: "Defensive Weapon +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2036",
    source: "Adventurer's Vault",
    categories: ["Defensive Weapon +6", "ID_FMP_MAGIC_ITEM_2036"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Defiant Boots (paragon tier)"] = new RulesElement({
    name: "Defiant Boots (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3325",
    source: "Adventurer's Vault",
    categories: ["Defiant Boots (paragon tier)", "ID_FMP_MAGIC_ITEM_3325"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Deflection Armor +5"] = new RulesElement({
    name: "Deflection Armor +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1556",
    source: "Adventurer's Vault",
    categories: ["Deflection Armor +5", "ID_FMP_MAGIC_ITEM_1556"],
    rules: function(model) {
      model.statadd("Armor Class", 5, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 5);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Deflection Armor +6"] = new RulesElement({
    name: "Deflection Armor +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1557",
    source: "Adventurer's Vault",
    categories: ["Deflection Armor +6", "ID_FMP_MAGIC_ITEM_1557"],
    rules: function(model) {
      model.statadd("Armor Class", 6, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 6);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Demonbane Weapon +2"] = new RulesElement({
    name: "Demonbane Weapon +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2037",
    source: "Adventurer's Vault",
    categories: ["Demonbane Weapon +2", "ID_FMP_MAGIC_ITEM_2037"],
    rules: function(model) {
      model.statadd("resist:demons", 2, "resist");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Demonbane Weapon +3"] = new RulesElement({
    name: "Demonbane Weapon +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2038",
    source: "Adventurer's Vault",
    categories: ["Demonbane Weapon +3", "ID_FMP_MAGIC_ITEM_2038"],
    rules: function(model) {
      model.statadd("resist:demons", 3, "resist");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Demonbane Weapon +4"] = new RulesElement({
    name: "Demonbane Weapon +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2039",
    source: "Adventurer's Vault",
    categories: ["Demonbane Weapon +4", "ID_FMP_MAGIC_ITEM_2039"],
    rules: function(model) {
      model.statadd("resist:demons", 4, "resist");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Demonbane Weapon +5"] = new RulesElement({
    name: "Demonbane Weapon +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2040",
    source: "Adventurer's Vault",
    categories: ["Demonbane Weapon +5", "ID_FMP_MAGIC_ITEM_2040"],
    rules: function(model) {
      model.statadd("resist:demons", 5, "resist");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Demonbane Weapon +6"] = new RulesElement({
    name: "Demonbane Weapon +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2041",
    source: "Adventurer's Vault",
    categories: ["Demonbane Weapon +6", "ID_FMP_MAGIC_ITEM_2041"],
    rules: function(model) {
      model.statadd("resist:demons", 6, "resist");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Desert Rose (epic tier)"] = new RulesElement({
    name: "Desert Rose (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_4062",
    source: "Adventurer's Vault",
    categories: ["Desert Rose (epic tier)", "ID_FMP_MAGIC_ITEM_4062"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Desert Rose (heroic tier)"] = new RulesElement({
    name: "Desert Rose (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_4060",
    source: "Adventurer's Vault",
    categories: ["Desert Rose (heroic tier)", "ID_FMP_MAGIC_ITEM_4060"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Desert Rose (paragon tier)"] = new RulesElement({
    name: "Desert Rose (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_4061",
    source: "Adventurer's Vault",
    categories: ["Desert Rose (paragon tier)", "ID_FMP_MAGIC_ITEM_4061"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Desiccating Weapon +3"] = new RulesElement({
    name: "Desiccating Weapon +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2042",
    source: "Adventurer's Vault",
    categories: ["Desiccating Weapon +3", "ID_FMP_MAGIC_ITEM_2042"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Desiccating Weapon +4"] = new RulesElement({
    name: "Desiccating Weapon +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2043",
    source: "Adventurer's Vault",
    categories: ["Desiccating Weapon +4", "ID_FMP_MAGIC_ITEM_2043"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Desiccating Weapon +5"] = new RulesElement({
    name: "Desiccating Weapon +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2044",
    source: "Adventurer's Vault",
    categories: ["Desiccating Weapon +5", "ID_FMP_MAGIC_ITEM_2044"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Desiccating Weapon +6"] = new RulesElement({
    name: "Desiccating Weapon +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2045",
    source: "Adventurer's Vault",
    categories: ["Desiccating Weapon +6", "ID_FMP_MAGIC_ITEM_2045"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Destiny Staff +5"] = new RulesElement({
    name: "Destiny Staff +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2918",
    source: "Adventurer's Vault",
    categories: ["Destiny Staff +5", "ID_FMP_MAGIC_ITEM_2918"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Destiny Staff +6"] = new RulesElement({
    name: "Destiny Staff +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2919",
    source: "Adventurer's Vault",
    categories: ["Destiny Staff +6", "ID_FMP_MAGIC_ITEM_2919"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Determined Weapon +2"] = new RulesElement({
    name: "Determined Weapon +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2046",
    source: "Adventurer's Vault",
    categories: ["Determined Weapon +2", "ID_FMP_MAGIC_ITEM_2046"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Determined Weapon +3"] = new RulesElement({
    name: "Determined Weapon +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2047",
    source: "Adventurer's Vault",
    categories: ["Determined Weapon +3", "ID_FMP_MAGIC_ITEM_2047"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Determined Weapon +4"] = new RulesElement({
    name: "Determined Weapon +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2048",
    source: "Adventurer's Vault",
    categories: ["Determined Weapon +4", "ID_FMP_MAGIC_ITEM_2048"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Determined Weapon +5"] = new RulesElement({
    name: "Determined Weapon +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2049",
    source: "Adventurer's Vault",
    categories: ["Determined Weapon +5", "ID_FMP_MAGIC_ITEM_2049"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Determined Weapon +6"] = new RulesElement({
    name: "Determined Weapon +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2050",
    source: "Adventurer's Vault",
    categories: ["Determined Weapon +6", "ID_FMP_MAGIC_ITEM_2050"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Diamond Bracers (epic tier)"] = new RulesElement({
    name: "Diamond Bracers (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3217",
    source: "Adventurer's Vault",
    categories: ["Diamond Bracers (epic tier)", "ID_FMP_MAGIC_ITEM_3217"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Diamond Bracers (heroic tier)"] = new RulesElement({
    name: "Diamond Bracers (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3215",
    source: "Adventurer's Vault",
    categories: ["Diamond Bracers (heroic tier)", "ID_FMP_MAGIC_ITEM_3215"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Diamond Bracers (paragon tier)"] = new RulesElement({
    name: "Diamond Bracers (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3216",
    source: "Adventurer's Vault",
    categories: ["Diamond Bracers (paragon tier)", "ID_FMP_MAGIC_ITEM_3216"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Diamond Scabbard (epic tier)"] = new RulesElement({
    name: "Diamond Scabbard (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3838",
    source: "Adventurer's Vault",
    categories: ["Diamond Scabbard (epic tier)", "ID_FMP_MAGIC_ITEM_3838"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Dimensional Stride Boots (paragon tier)"] = new RulesElement({
    name: "Dimensional Stride Boots (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3326",
    source: "Adventurer's Vault",
    categories: ["Dimensional Stride Boots (paragon tier)", "ID_FMP_MAGIC_ITEM_3326"],
    rules: function(model) {
      model.statadd("Reflex Defense", 1);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Direbeast Shield (epic tier)"] = new RulesElement({
    name: "Direbeast Shield (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3220",
    source: "Adventurer's Vault",
    categories: ["Direbeast Shield (epic tier)", "ID_FMP_MAGIC_ITEM_3220"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Direbeast Shield (heroic tier)"] = new RulesElement({
    name: "Direbeast Shield (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3218",
    source: "Adventurer's Vault",
    categories: ["Direbeast Shield (heroic tier)", "ID_FMP_MAGIC_ITEM_3218"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Direbeast Shield (paragon tier)"] = new RulesElement({
    name: "Direbeast Shield (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3219",
    source: "Adventurer's Vault",
    categories: ["Direbeast Shield (paragon tier)", "ID_FMP_MAGIC_ITEM_3219"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Displacer Armor +3"] = new RulesElement({
    name: "Displacer Armor +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1558",
    source: "Adventurer's Vault",
    categories: ["Displacer Armor +3", "ID_FMP_MAGIC_ITEM_1558"],
    rules: function(model) {
      model.statadd("Armor Class", 3, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 3);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Displacer Armor +4"] = new RulesElement({
    name: "Displacer Armor +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1559",
    source: "Adventurer's Vault",
    categories: ["Displacer Armor +4", "ID_FMP_MAGIC_ITEM_1559"],
    rules: function(model) {
      model.statadd("Armor Class", 4, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 4);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Displacer Armor +5"] = new RulesElement({
    name: "Displacer Armor +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1560",
    source: "Adventurer's Vault",
    categories: ["Displacer Armor +5", "ID_FMP_MAGIC_ITEM_1560"],
    rules: function(model) {
      model.statadd("Armor Class", 5, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 5);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Displacer Armor +6"] = new RulesElement({
    name: "Displacer Armor +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1561",
    source: "Adventurer's Vault",
    categories: ["Displacer Armor +6", "ID_FMP_MAGIC_ITEM_1561"],
    rules: function(model) {
      model.statadd("Armor Class", 6, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 6);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Distance Weapon +1"] = new RulesElement({
    name: "Distance Weapon +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2051",
    source: "Adventurer's Vault",
    categories: ["Distance Weapon +1", "ID_FMP_MAGIC_ITEM_2051"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Distance Weapon +2"] = new RulesElement({
    name: "Distance Weapon +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2052",
    source: "Adventurer's Vault",
    categories: ["Distance Weapon +2", "ID_FMP_MAGIC_ITEM_2052"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Distance Weapon +3"] = new RulesElement({
    name: "Distance Weapon +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2053",
    source: "Adventurer's Vault",
    categories: ["Distance Weapon +3", "ID_FMP_MAGIC_ITEM_2053"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Distance Weapon +4"] = new RulesElement({
    name: "Distance Weapon +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2054",
    source: "Adventurer's Vault",
    categories: ["Distance Weapon +4", "ID_FMP_MAGIC_ITEM_2054"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Distance Weapon +5"] = new RulesElement({
    name: "Distance Weapon +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2055",
    source: "Adventurer's Vault",
    categories: ["Distance Weapon +5", "ID_FMP_MAGIC_ITEM_2055"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Distance Weapon +6"] = new RulesElement({
    name: "Distance Weapon +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2056",
    source: "Adventurer's Vault",
    categories: ["Distance Weapon +6", "ID_FMP_MAGIC_ITEM_2056"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Dragonborn Greaves (paragon tier)"] = new RulesElement({
    name: "Dragonborn Greaves (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3327",
    source: "Adventurer's Vault",
    categories: ["Dragonborn Greaves (paragon tier)", "ID_FMP_MAGIC_ITEM_3327"],
    rules: function(model) {
      model.statadd("Speed", function() { /* while you are bloodied */ return 2; }, "item");
      model.statadd("AC", function() { /* while you are bloodied */ return 1; }, "item");
      model.statadd("Reflex Defense", function() { /* while you are bloodied */ return 1; }, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Dragonfire Tar (level 13)"] = new RulesElement({
    name: "Dragonfire Tar (level 13)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1359",
    source: "Adventurer's Vault",
    categories: ["Dragonfire Tar (level 13)", "ID_FMP_MAGIC_ITEM_1359"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Dragonfire Tar (level 18)"] = new RulesElement({
    name: "Dragonfire Tar (level 18)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1360",
    source: "Adventurer's Vault",
    categories: ["Dragonfire Tar (level 18)", "ID_FMP_MAGIC_ITEM_1360"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Dragonfire Tar (level 23)"] = new RulesElement({
    name: "Dragonfire Tar (level 23)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1361",
    source: "Adventurer's Vault",
    categories: ["Dragonfire Tar (level 23)", "ID_FMP_MAGIC_ITEM_1361"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Dragonfire Tar (level 28)"] = new RulesElement({
    name: "Dragonfire Tar (level 28)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1362",
    source: "Adventurer's Vault",
    categories: ["Dragonfire Tar (level 28)", "ID_FMP_MAGIC_ITEM_1362"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Dragonfire Tar (level 3)"] = new RulesElement({
    name: "Dragonfire Tar (level 3)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1357",
    source: "Adventurer's Vault",
    categories: ["Dragonfire Tar (level 3)", "ID_FMP_MAGIC_ITEM_1357"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Dragonfire Tar (level 8)"] = new RulesElement({
    name: "Dragonfire Tar (level 8)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1358",
    source: "Adventurer's Vault",
    categories: ["Dragonfire Tar (level 8)", "ID_FMP_MAGIC_ITEM_1358"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Dragonscale Armor, Black +4"] = new RulesElement({
    name: "Dragonscale Armor, Black +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1562",
    source: "Adventurer's Vault",
    categories: ["Dragonscale Armor, Black +4", "ID_FMP_MAGIC_ITEM_1562"],
    rules: function(model) {
      model.statadd("resist:acid", 10, "resist");
      model.statadd("Armor Class", 4, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 4);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Dragonscale Armor, Black +5"] = new RulesElement({
    name: "Dragonscale Armor, Black +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1563",
    source: "Adventurer's Vault",
    categories: ["Dragonscale Armor, Black +5", "ID_FMP_MAGIC_ITEM_1563"],
    rules: function(model) {
      model.statadd("resist:acid", 15, "resist");
      model.statadd("Armor Class", 5, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 5);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Dragonscale Armor, Black +6"] = new RulesElement({
    name: "Dragonscale Armor, Black +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1564",
    source: "Adventurer's Vault",
    categories: ["Dragonscale Armor, Black +6", "ID_FMP_MAGIC_ITEM_1564"],
    rules: function(model) {
      model.statadd("resist:acid", 20, "resist");
      model.statadd("Armor Class", 6, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 6);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Dragonscale Armor, Blue +4"] = new RulesElement({
    name: "Dragonscale Armor, Blue +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1565",
    source: "Adventurer's Vault",
    categories: ["Dragonscale Armor, Blue +4", "ID_FMP_MAGIC_ITEM_1565"],
    rules: function(model) {
      model.statadd("resist:lightning", 10, "resist");
      model.statadd("Armor Class", 4, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 4);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Dragonscale Armor, Blue +5"] = new RulesElement({
    name: "Dragonscale Armor, Blue +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1566",
    source: "Adventurer's Vault",
    categories: ["Dragonscale Armor, Blue +5", "ID_FMP_MAGIC_ITEM_1566"],
    rules: function(model) {
      model.statadd("resist:lightning", 15, "resist");
      model.statadd("Armor Class", 5, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 5);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Dragonscale Armor, Blue +6"] = new RulesElement({
    name: "Dragonscale Armor, Blue +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1567",
    source: "Adventurer's Vault",
    categories: ["Dragonscale Armor, Blue +6", "ID_FMP_MAGIC_ITEM_1567"],
    rules: function(model) {
      model.statadd("resist:lightning", 20, "resist");
      model.statadd("Armor Class", 6, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 6);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Dragonscale Armor, Green +4"] = new RulesElement({
    name: "Dragonscale Armor, Green +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1568",
    source: "Adventurer's Vault",
    categories: ["Dragonscale Armor, Green +4", "ID_FMP_MAGIC_ITEM_1568"],
    rules: function(model) {
      model.statadd("resist:poison", 10, "resist");
      model.statadd("Armor Class", 4, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 4);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Dragonscale Armor, Green +5"] = new RulesElement({
    name: "Dragonscale Armor, Green +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1569",
    source: "Adventurer's Vault",
    categories: ["Dragonscale Armor, Green +5", "ID_FMP_MAGIC_ITEM_1569"],
    rules: function(model) {
      model.statadd("resist:poison", 15, "resist");
      model.statadd("Armor Class", 5, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 5);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Dragonscale Armor, Green +6"] = new RulesElement({
    name: "Dragonscale Armor, Green +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1570",
    source: "Adventurer's Vault",
    categories: ["Dragonscale Armor, Green +6", "ID_FMP_MAGIC_ITEM_1570"],
    rules: function(model) {
      model.statadd("resist:poison", 20, "resist");
      model.statadd("Armor Class", 6, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 6);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Dragonscale Armor, Red +4"] = new RulesElement({
    name: "Dragonscale Armor, Red +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1571",
    source: "Adventurer's Vault",
    categories: ["Dragonscale Armor, Red +4", "ID_FMP_MAGIC_ITEM_1571"],
    rules: function(model) {
      model.statadd("resist:fire", 10, "resist");
      model.statadd("Armor Class", 4, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 4);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Dragonscale Armor, Red +5"] = new RulesElement({
    name: "Dragonscale Armor, Red +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1572",
    source: "Adventurer's Vault",
    categories: ["Dragonscale Armor, Red +5", "ID_FMP_MAGIC_ITEM_1572"],
    rules: function(model) {
      model.statadd("resist:fire", 15, "resist");
      model.statadd("Armor Class", 5, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 5);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Dragonscale Armor, Red +6"] = new RulesElement({
    name: "Dragonscale Armor, Red +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1573",
    source: "Adventurer's Vault",
    categories: ["Dragonscale Armor, Red +6", "ID_FMP_MAGIC_ITEM_1573"],
    rules: function(model) {
      model.statadd("resist:fire", 20, "resist");
      model.statadd("Armor Class", 6, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 6);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Dragonscale Armor, White +4"] = new RulesElement({
    name: "Dragonscale Armor, White +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1574",
    source: "Adventurer's Vault",
    categories: ["Dragonscale Armor, White +4", "ID_FMP_MAGIC_ITEM_1574"],
    rules: function(model) {
      model.statadd("resist:cold", 10, "resist");
      model.statadd("Armor Class", 4, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 4);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Dragonscale Armor, White +5"] = new RulesElement({
    name: "Dragonscale Armor, White +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1575",
    source: "Adventurer's Vault",
    categories: ["Dragonscale Armor, White +5", "ID_FMP_MAGIC_ITEM_1575"],
    rules: function(model) {
      model.statadd("resist:cold", 15, "resist");
      model.statadd("Armor Class", 5, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 5);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Dragonscale Armor, White +6"] = new RulesElement({
    name: "Dragonscale Armor, White +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1576",
    source: "Adventurer's Vault",
    categories: ["Dragonscale Armor, White +6", "ID_FMP_MAGIC_ITEM_1576"],
    rules: function(model) {
      model.statadd("resist:cold", 20, "resist");
      model.statadd("Armor Class", 6, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 6);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Dragonscale of Bahamut +2"] = new RulesElement({
    name: "Dragonscale of Bahamut +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2496",
    source: "Adventurer's Vault",
    categories: ["Dragonscale of Bahamut +2", "ID_FMP_MAGIC_ITEM_2496"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Dragonscale of Bahamut +3"] = new RulesElement({
    name: "Dragonscale of Bahamut +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2497",
    source: "Adventurer's Vault",
    categories: ["Dragonscale of Bahamut +3", "ID_FMP_MAGIC_ITEM_2497"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Dragonscale of Bahamut +4"] = new RulesElement({
    name: "Dragonscale of Bahamut +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2498",
    source: "Adventurer's Vault",
    categories: ["Dragonscale of Bahamut +4", "ID_FMP_MAGIC_ITEM_2498"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Dragonscale of Bahamut +5"] = new RulesElement({
    name: "Dragonscale of Bahamut +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2499",
    source: "Adventurer's Vault",
    categories: ["Dragonscale of Bahamut +5", "ID_FMP_MAGIC_ITEM_2499"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Dragonscale of Bahamut +6"] = new RulesElement({
    name: "Dragonscale of Bahamut +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2500",
    source: "Adventurer's Vault",
    categories: ["Dragonscale of Bahamut +6", "ID_FMP_MAGIC_ITEM_2500"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Dread Helm (paragon tier)"] = new RulesElement({
    name: "Dread Helm (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3451",
    source: "Adventurer's Vault",
    categories: ["Dread Helm (paragon tier)", "ID_FMP_MAGIC_ITEM_3451"],
    rules: function(model) {
      model.statadd("Intimidate Misc", 4, "item");
      model.statadd("Diplomacy Misc", -2, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Dread Nightshade (epic tier)"] = new RulesElement({
    name: "Dread Nightshade (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_4064",
    source: "Adventurer's Vault",
    categories: ["Dread Nightshade (epic tier)", "ID_FMP_MAGIC_ITEM_4064"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Dread Nightshade (paragon tier)"] = new RulesElement({
    name: "Dread Nightshade (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_4063",
    source: "Adventurer's Vault",
    categories: ["Dread Nightshade (paragon tier)", "ID_FMP_MAGIC_ITEM_4063"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Dread Weapon +2"] = new RulesElement({
    name: "Dread Weapon +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2057",
    source: "Adventurer's Vault",
    categories: ["Dread Weapon +2", "ID_FMP_MAGIC_ITEM_2057"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Dread Weapon +3"] = new RulesElement({
    name: "Dread Weapon +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2058",
    source: "Adventurer's Vault",
    categories: ["Dread Weapon +3", "ID_FMP_MAGIC_ITEM_2058"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Dread Weapon +4"] = new RulesElement({
    name: "Dread Weapon +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2059",
    source: "Adventurer's Vault",
    categories: ["Dread Weapon +4", "ID_FMP_MAGIC_ITEM_2059"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Dread Weapon +5"] = new RulesElement({
    name: "Dread Weapon +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2060",
    source: "Adventurer's Vault",
    categories: ["Dread Weapon +5", "ID_FMP_MAGIC_ITEM_2060"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Dread Weapon +6"] = new RulesElement({
    name: "Dread Weapon +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2061",
    source: "Adventurer's Vault",
    categories: ["Dread Weapon +6", "ID_FMP_MAGIC_ITEM_2061"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Drum of Panic (paragon tier)"] = new RulesElement({
    name: "Drum of Panic (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3839",
    source: "Adventurer's Vault",
    categories: ["Drum of Panic (paragon tier)", "ID_FMP_MAGIC_ITEM_3839"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Dust of Arcane Insight (heroic tier)"] = new RulesElement({
    name: "Dust of Arcane Insight (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3840",
    source: "Adventurer's Vault",
    categories: ["Dust of Arcane Insight (heroic tier)", "ID_FMP_MAGIC_ITEM_3840"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Dust of Banishment (epic tier)"] = new RulesElement({
    name: "Dust of Banishment (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3841",
    source: "Adventurer's Vault",
    categories: ["Dust of Banishment (epic tier)", "ID_FMP_MAGIC_ITEM_3841"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Dust of Creation (paragon tier)"] = new RulesElement({
    name: "Dust of Creation (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3842",
    source: "Adventurer's Vault",
    categories: ["Dust of Creation (paragon tier)", "ID_FMP_MAGIC_ITEM_3842"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Dust of Disenchantment (heroic tier)"] = new RulesElement({
    name: "Dust of Disenchantment (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3843",
    source: "Adventurer's Vault",
    categories: ["Dust of Disenchantment (heroic tier)", "ID_FMP_MAGIC_ITEM_3843"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Dwarfstride Boots (paragon tier)"] = new RulesElement({
    name: "Dwarfstride Boots (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3328",
    source: "Adventurer's Vault",
    categories: ["Dwarfstride Boots (paragon tier)", "ID_FMP_MAGIC_ITEM_3328"],
    rules: function(model) {
      model.statadd("Athletics Misc", function() { /* to all checks required by special terrain */ return 4; }, "item");
      model.statadd("Acrobatics Misc", function() { /* to all checks required by special terrain */ return 4; }, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Dwarven Boots (paragon tier)"] = new RulesElement({
    name: "Dwarven Boots (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3329",
    source: "Adventurer's Vault",
    categories: ["Dwarven Boots (paragon tier)", "ID_FMP_MAGIC_ITEM_3329"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Dwarven Throwers (heroic tier)"] = new RulesElement({
    name: "Dwarven Throwers (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3373",
    source: "Adventurer's Vault",
    categories: ["Dwarven Throwers (heroic tier)", "ID_FMP_MAGIC_ITEM_3373"],
    rules: function(model) {
      model.statadd("light thrown:damage", 2, "item");
      model.statadd("heavy thrown:damage", 2, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Dynamic Weapon +2"] = new RulesElement({
    name: "Dynamic Weapon +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2062",
    source: "Adventurer's Vault",
    categories: ["Dynamic Weapon +2", "ID_FMP_MAGIC_ITEM_2062"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Dynamic Weapon +3"] = new RulesElement({
    name: "Dynamic Weapon +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2063",
    source: "Adventurer's Vault",
    categories: ["Dynamic Weapon +3", "ID_FMP_MAGIC_ITEM_2063"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Dynamic Weapon +4"] = new RulesElement({
    name: "Dynamic Weapon +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2064",
    source: "Adventurer's Vault",
    categories: ["Dynamic Weapon +4", "ID_FMP_MAGIC_ITEM_2064"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Dynamic Weapon +5"] = new RulesElement({
    name: "Dynamic Weapon +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2065",
    source: "Adventurer's Vault",
    categories: ["Dynamic Weapon +5", "ID_FMP_MAGIC_ITEM_2065"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Dynamic Weapon +6"] = new RulesElement({
    name: "Dynamic Weapon +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2066",
    source: "Adventurer's Vault",
    categories: ["Dynamic Weapon +6", "ID_FMP_MAGIC_ITEM_2066"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Eagle Eye Goggles (epic tier)"] = new RulesElement({
    name: "Eagle Eye Goggles (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3454",
    source: "Adventurer's Vault",
    categories: ["Eagle Eye Goggles (epic tier)", "ID_FMP_MAGIC_ITEM_3454"],
    rules: function(model) {
      model.statadd("ranged basic:attack", 3, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Eagle Eye Goggles (heroic tier)"] = new RulesElement({
    name: "Eagle Eye Goggles (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3452",
    source: "Adventurer's Vault",
    categories: ["Eagle Eye Goggles (heroic tier)", "ID_FMP_MAGIC_ITEM_3452"],
    rules: function(model) {
      model.statadd("ranged basic:attack", 1, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Eagle Eye Goggles (paragon tier)"] = new RulesElement({
    name: "Eagle Eye Goggles (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3453",
    source: "Adventurer's Vault",
    categories: ["Eagle Eye Goggles (paragon tier)", "ID_FMP_MAGIC_ITEM_3453"],
    rules: function(model) {
      model.statadd("ranged basic:attack", 2, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Earthbind Lodestone (paragon tier)"] = new RulesElement({
    name: "Earthbind Lodestone (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3844",
    source: "Adventurer's Vault",
    categories: ["Earthbind Lodestone (paragon tier)", "ID_FMP_MAGIC_ITEM_3844"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Earthbreaker Weapon +2"] = new RulesElement({
    name: "Earthbreaker Weapon +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2067",
    source: "Adventurer's Vault",
    categories: ["Earthbreaker Weapon +2", "ID_FMP_MAGIC_ITEM_2067"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Earthbreaker Weapon +3"] = new RulesElement({
    name: "Earthbreaker Weapon +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2068",
    source: "Adventurer's Vault",
    categories: ["Earthbreaker Weapon +3", "ID_FMP_MAGIC_ITEM_2068"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Earthbreaker Weapon +4"] = new RulesElement({
    name: "Earthbreaker Weapon +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2069",
    source: "Adventurer's Vault",
    categories: ["Earthbreaker Weapon +4", "ID_FMP_MAGIC_ITEM_2069"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Earthbreaker Weapon +5"] = new RulesElement({
    name: "Earthbreaker Weapon +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2070",
    source: "Adventurer's Vault",
    categories: ["Earthbreaker Weapon +5", "ID_FMP_MAGIC_ITEM_2070"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Earthbreaker Weapon +6"] = new RulesElement({
    name: "Earthbreaker Weapon +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2071",
    source: "Adventurer's Vault",
    categories: ["Earthbreaker Weapon +6", "ID_FMP_MAGIC_ITEM_2071"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Earthreaver Stompers (epic tier)"] = new RulesElement({
    name: "Earthreaver Stompers (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3331",
    source: "Adventurer's Vault",
    categories: ["Earthreaver Stompers (epic tier)", "ID_FMP_MAGIC_ITEM_3331"],
    rules: function(model) {
      model.grant(elements.id["ID_INTERNAL_VISION_TREMORSENSE"]);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Earthreaver Stompers (paragon tier)"] = new RulesElement({
    name: "Earthreaver Stompers (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3330",
    source: "Adventurer's Vault",
    categories: ["Earthreaver Stompers (paragon tier)", "ID_FMP_MAGIC_ITEM_3330"],
    rules: function(model) {
      model.grant(elements.id["ID_INTERNAL_VISION_TREMORSENSE"]);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Earthroot Staff +1"] = new RulesElement({
    name: "Earthroot Staff +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2920",
    source: "Adventurer's Vault",
    categories: ["Earthroot Staff +1", "ID_FMP_MAGIC_ITEM_2920"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Earthroot Staff +2"] = new RulesElement({
    name: "Earthroot Staff +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2921",
    source: "Adventurer's Vault",
    categories: ["Earthroot Staff +2", "ID_FMP_MAGIC_ITEM_2921"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Earthroot Staff +3"] = new RulesElement({
    name: "Earthroot Staff +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2922",
    source: "Adventurer's Vault",
    categories: ["Earthroot Staff +3", "ID_FMP_MAGIC_ITEM_2922"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Earthroot Staff +4"] = new RulesElement({
    name: "Earthroot Staff +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2923",
    source: "Adventurer's Vault",
    categories: ["Earthroot Staff +4", "ID_FMP_MAGIC_ITEM_2923"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Earthroot Staff +5"] = new RulesElement({
    name: "Earthroot Staff +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2924",
    source: "Adventurer's Vault",
    categories: ["Earthroot Staff +5", "ID_FMP_MAGIC_ITEM_2924"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Earthroot Staff +6"] = new RulesElement({
    name: "Earthroot Staff +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2925",
    source: "Adventurer's Vault",
    categories: ["Earthroot Staff +6", "ID_FMP_MAGIC_ITEM_2925"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Earthstriders (paragon tier)"] = new RulesElement({
    name: "Earthstriders (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3332",
    source: "Adventurer's Vault",
    categories: ["Earthstriders (paragon tier)", "ID_FMP_MAGIC_ITEM_3332"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Ebony Fly (heroic tier)"] = new RulesElement({
    name: "Ebony Fly (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3909",
    source: "Adventurer's Vault",
    categories: ["Ebony Fly (heroic tier)", "ID_FMP_MAGIC_ITEM_3909"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Elixir of Accuracy (level 13)"] = new RulesElement({
    name: "Elixir of Accuracy (level 13)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3987",
    source: "Adventurer's Vault",
    categories: ["Elixir of Accuracy (level 13)", "ID_FMP_MAGIC_ITEM_3987"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Elixir of Accuracy (level 18)"] = new RulesElement({
    name: "Elixir of Accuracy (level 18)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3988",
    source: "Adventurer's Vault",
    categories: ["Elixir of Accuracy (level 18)", "ID_FMP_MAGIC_ITEM_3988"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Elixir of Accuracy (level 23)"] = new RulesElement({
    name: "Elixir of Accuracy (level 23)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3989",
    source: "Adventurer's Vault",
    categories: ["Elixir of Accuracy (level 23)", "ID_FMP_MAGIC_ITEM_3989"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Elixir of Accuracy (level 28)"] = new RulesElement({
    name: "Elixir of Accuracy (level 28)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3990",
    source: "Adventurer's Vault",
    categories: ["Elixir of Accuracy (level 28)", "ID_FMP_MAGIC_ITEM_3990"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Elixir of Accuracy (level 8)"] = new RulesElement({
    name: "Elixir of Accuracy (level 8)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3986",
    source: "Adventurer's Vault",
    categories: ["Elixir of Accuracy (level 8)", "ID_FMP_MAGIC_ITEM_3986"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Elixir of Aptitude (epic tier)"] = new RulesElement({
    name: "Elixir of Aptitude (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3993",
    source: "Adventurer's Vault",
    categories: ["Elixir of Aptitude (epic tier)", "ID_FMP_MAGIC_ITEM_3993"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Elixir of Aptitude (heroic tier)"] = new RulesElement({
    name: "Elixir of Aptitude (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3991",
    source: "Adventurer's Vault",
    categories: ["Elixir of Aptitude (heroic tier)", "ID_FMP_MAGIC_ITEM_3991"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Elixir of Aptitude (paragon tier)"] = new RulesElement({
    name: "Elixir of Aptitude (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3992",
    source: "Adventurer's Vault",
    categories: ["Elixir of Aptitude (paragon tier)", "ID_FMP_MAGIC_ITEM_3992"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Elixir of Dragonbreath (epic tier)"] = new RulesElement({
    name: "Elixir of Dragonbreath (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3996",
    source: "Adventurer's Vault",
    categories: ["Elixir of Dragonbreath (epic tier)", "ID_FMP_MAGIC_ITEM_3996"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Elixir of Dragonbreath (heroic tier)"] = new RulesElement({
    name: "Elixir of Dragonbreath (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3994",
    source: "Adventurer's Vault",
    categories: ["Elixir of Dragonbreath (heroic tier)", "ID_FMP_MAGIC_ITEM_3994"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Elixir of Dragonbreath (paragon tier)"] = new RulesElement({
    name: "Elixir of Dragonbreath (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3995",
    source: "Adventurer's Vault",
    categories: ["Elixir of Dragonbreath (paragon tier)", "ID_FMP_MAGIC_ITEM_3995"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Elixir of Flying (epic tier)"] = new RulesElement({
    name: "Elixir of Flying (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3997",
    source: "Adventurer's Vault",
    categories: ["Elixir of Flying (epic tier)", "ID_FMP_MAGIC_ITEM_3997"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Elixir of Fortitude (level 13)"] = new RulesElement({
    name: "Elixir of Fortitude (level 13)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3999",
    source: "Adventurer's Vault",
    categories: ["Elixir of Fortitude (level 13)", "ID_FMP_MAGIC_ITEM_3999"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Elixir of Fortitude (level 18)"] = new RulesElement({
    name: "Elixir of Fortitude (level 18)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_4000",
    source: "Adventurer's Vault",
    categories: ["Elixir of Fortitude (level 18)", "ID_FMP_MAGIC_ITEM_4000"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Elixir of Fortitude (level 23)"] = new RulesElement({
    name: "Elixir of Fortitude (level 23)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_4001",
    source: "Adventurer's Vault",
    categories: ["Elixir of Fortitude (level 23)", "ID_FMP_MAGIC_ITEM_4001"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Elixir of Fortitude (level 28)"] = new RulesElement({
    name: "Elixir of Fortitude (level 28)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_4002",
    source: "Adventurer's Vault",
    categories: ["Elixir of Fortitude (level 28)", "ID_FMP_MAGIC_ITEM_4002"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Elixir of Fortitude (level 8)"] = new RulesElement({
    name: "Elixir of Fortitude (level 8)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3998",
    source: "Adventurer's Vault",
    categories: ["Elixir of Fortitude (level 8)", "ID_FMP_MAGIC_ITEM_3998"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Elixir of Invisibility (paragon tier)"] = new RulesElement({
    name: "Elixir of Invisibility (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_4003",
    source: "Adventurer's Vault",
    categories: ["Elixir of Invisibility (paragon tier)", "ID_FMP_MAGIC_ITEM_4003"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Elixir of Reflexes (level 13)"] = new RulesElement({
    name: "Elixir of Reflexes (level 13)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_4005",
    source: "Adventurer's Vault",
    categories: ["Elixir of Reflexes (level 13)", "ID_FMP_MAGIC_ITEM_4005"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Elixir of Reflexes (level 18)"] = new RulesElement({
    name: "Elixir of Reflexes (level 18)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_4006",
    source: "Adventurer's Vault",
    categories: ["Elixir of Reflexes (level 18)", "ID_FMP_MAGIC_ITEM_4006"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Elixir of Reflexes (level 23)"] = new RulesElement({
    name: "Elixir of Reflexes (level 23)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_4007",
    source: "Adventurer's Vault",
    categories: ["Elixir of Reflexes (level 23)", "ID_FMP_MAGIC_ITEM_4007"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Elixir of Reflexes (level 28)"] = new RulesElement({
    name: "Elixir of Reflexes (level 28)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_4008",
    source: "Adventurer's Vault",
    categories: ["Elixir of Reflexes (level 28)", "ID_FMP_MAGIC_ITEM_4008"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Elixir of Reflexes (level 8)"] = new RulesElement({
    name: "Elixir of Reflexes (level 8)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_4004",
    source: "Adventurer's Vault",
    categories: ["Elixir of Reflexes (level 8)", "ID_FMP_MAGIC_ITEM_4004"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Elixir of Speed (paragon tier)"] = new RulesElement({
    name: "Elixir of Speed (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_4009",
    source: "Adventurer's Vault",
    categories: ["Elixir of Speed (paragon tier)", "ID_FMP_MAGIC_ITEM_4009"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Elixir of Will (level 13)"] = new RulesElement({
    name: "Elixir of Will (level 13)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_4011",
    source: "Adventurer's Vault",
    categories: ["Elixir of Will (level 13)", "ID_FMP_MAGIC_ITEM_4011"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Elixir of Will (level 18)"] = new RulesElement({
    name: "Elixir of Will (level 18)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_4012",
    source: "Adventurer's Vault",
    categories: ["Elixir of Will (level 18)", "ID_FMP_MAGIC_ITEM_4012"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Elixir of Will (level 23)"] = new RulesElement({
    name: "Elixir of Will (level 23)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_4013",
    source: "Adventurer's Vault",
    categories: ["Elixir of Will (level 23)", "ID_FMP_MAGIC_ITEM_4013"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Elixir of Will (level 28)"] = new RulesElement({
    name: "Elixir of Will (level 28)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_4014",
    source: "Adventurer's Vault",
    categories: ["Elixir of Will (level 28)", "ID_FMP_MAGIC_ITEM_4014"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Elixir of Will (level 8)"] = new RulesElement({
    name: "Elixir of Will (level 8)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_4010",
    source: "Adventurer's Vault",
    categories: ["Elixir of Will (level 8)", "ID_FMP_MAGIC_ITEM_4010"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Elukian Clay Armor +3"] = new RulesElement({
    name: "Elukian Clay Armor +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1577",
    source: "Adventurer's Vault",
    categories: ["Elukian Clay Armor +3", "ID_FMP_MAGIC_ITEM_1577"],
    rules: function(model) {
      model.statadd("Armor Class", 3, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 3);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Elukian Clay Armor +4"] = new RulesElement({
    name: "Elukian Clay Armor +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1578",
    source: "Adventurer's Vault",
    categories: ["Elukian Clay Armor +4", "ID_FMP_MAGIC_ITEM_1578"],
    rules: function(model) {
      model.statadd("Armor Class", 4, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 4);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Elukian Clay Armor +5"] = new RulesElement({
    name: "Elukian Clay Armor +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1579",
    source: "Adventurer's Vault",
    categories: ["Elukian Clay Armor +5", "ID_FMP_MAGIC_ITEM_1579"],
    rules: function(model) {
      model.statadd("Armor Class", 5, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 5);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Elukian Clay Armor +6"] = new RulesElement({
    name: "Elukian Clay Armor +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1580",
    source: "Adventurer's Vault",
    categories: ["Elukian Clay Armor +6", "ID_FMP_MAGIC_ITEM_1580"],
    rules: function(model) {
      model.statadd("Armor Class", 6, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 6);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Elukian Clay Weapon +3"] = new RulesElement({
    name: "Elukian Clay Weapon +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2072",
    source: "Adventurer's Vault",
    categories: ["Elukian Clay Weapon +3", "ID_FMP_MAGIC_ITEM_2072"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Elukian Clay Weapon +4"] = new RulesElement({
    name: "Elukian Clay Weapon +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2073",
    source: "Adventurer's Vault",
    categories: ["Elukian Clay Weapon +4", "ID_FMP_MAGIC_ITEM_2073"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Elukian Clay Weapon +5"] = new RulesElement({
    name: "Elukian Clay Weapon +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2074",
    source: "Adventurer's Vault",
    categories: ["Elukian Clay Weapon +5", "ID_FMP_MAGIC_ITEM_2074"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Elukian Clay Weapon +6"] = new RulesElement({
    name: "Elukian Clay Weapon +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2075",
    source: "Adventurer's Vault",
    categories: ["Elukian Clay Weapon +6", "ID_FMP_MAGIC_ITEM_2075"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Enchanted Reins (heroic tier)"] = new RulesElement({
    name: "Enchanted Reins (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3845",
    source: "Adventurer's Vault",
    categories: ["Enchanted Reins (heroic tier)", "ID_FMP_MAGIC_ITEM_3845"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Endless Canteen (heroic tier)"] = new RulesElement({
    name: "Endless Canteen (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3846",
    source: "Adventurer's Vault",
    categories: ["Endless Canteen (heroic tier)", "ID_FMP_MAGIC_ITEM_3846"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Endless Quiver (heroic tier)"] = new RulesElement({
    name: "Endless Quiver (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3847",
    source: "Adventurer's Vault",
    categories: ["Endless Quiver (heroic tier)", "ID_FMP_MAGIC_ITEM_3847"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Enshrouding Candle (heroic tier)"] = new RulesElement({
    name: "Enshrouding Candle (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3848",
    source: "Adventurer's Vault",
    categories: ["Enshrouding Candle (heroic tier)", "ID_FMP_MAGIC_ITEM_3848"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Eternal Chalk (heroic tier)"] = new RulesElement({
    name: "Eternal Chalk (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3849",
    source: "Adventurer's Vault",
    categories: ["Eternal Chalk (heroic tier)", "ID_FMP_MAGIC_ITEM_3849"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Evil Eye Fetish +2"] = new RulesElement({
    name: "Evil Eye Fetish +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3639",
    source: "Adventurer's Vault",
    categories: ["Evil Eye Fetish +2", "ID_FMP_MAGIC_ITEM_3639"],
    rules: function(model) {
      model.statadd("Fortitude Defense", 2, "Enhancement");
      model.statadd("Reflex Defense", 2, "Enhancement");
      model.statadd("Will Defense", 2, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Evil Eye Fetish +3"] = new RulesElement({
    name: "Evil Eye Fetish +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3640",
    source: "Adventurer's Vault",
    categories: ["Evil Eye Fetish +3", "ID_FMP_MAGIC_ITEM_3640"],
    rules: function(model) {
      model.statadd("Fortitude Defense", 3, "Enhancement");
      model.statadd("Reflex Defense", 3, "Enhancement");
      model.statadd("Will Defense", 3, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Evil Eye Fetish +4"] = new RulesElement({
    name: "Evil Eye Fetish +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3641",
    source: "Adventurer's Vault",
    categories: ["Evil Eye Fetish +4", "ID_FMP_MAGIC_ITEM_3641"],
    rules: function(model) {
      model.statadd("Fortitude Defense", 4, "Enhancement");
      model.statadd("Reflex Defense", 4, "Enhancement");
      model.statadd("Will Defense", 4, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Evil Eye Fetish +5"] = new RulesElement({
    name: "Evil Eye Fetish +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3642",
    source: "Adventurer's Vault",
    categories: ["Evil Eye Fetish +5", "ID_FMP_MAGIC_ITEM_3642"],
    rules: function(model) {
      model.statadd("Fortitude Defense", 5, "Enhancement");
      model.statadd("Reflex Defense", 5, "Enhancement");
      model.statadd("Will Defense", 5, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Evil Eye Fetish +6"] = new RulesElement({
    name: "Evil Eye Fetish +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3643",
    source: "Adventurer's Vault",
    categories: ["Evil Eye Fetish +6", "ID_FMP_MAGIC_ITEM_3643"],
    rules: function(model) {
      model.statadd("Fortitude Defense", 6, "Enhancement");
      model.statadd("Reflex Defense", 6, "Enhancement");
      model.statadd("Will Defense", 6, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Exodus Knife (paragon tier)"] = new RulesElement({
    name: "Exodus Knife (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3850",
    source: "Adventurer's Vault",
    categories: ["Exodus Knife (paragon tier)", "ID_FMP_MAGIC_ITEM_3850"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Eye of Awareness (epic tier)"] = new RulesElement({
    name: "Eye of Awareness (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3455",
    source: "Adventurer's Vault",
    categories: ["Eye of Awareness (epic tier)", "ID_FMP_MAGIC_ITEM_3455"],
    rules: function(model) {
      model.statadd("Will Defense", 2);
      model.statadd("Initiative Misc", 5, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Eye of Basilisk (epic tier)"] = new RulesElement({
    name: "Eye of Basilisk (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3458",
    source: "Adventurer's Vault",
    categories: ["Eye of Basilisk (epic tier)", "ID_FMP_MAGIC_ITEM_3458"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Eye of Deception (heroic tier)"] = new RulesElement({
    name: "Eye of Deception (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3456",
    source: "Adventurer's Vault",
    categories: ["Eye of Deception (heroic tier)", "ID_FMP_MAGIC_ITEM_3456"],
    rules: function(model) {
      model.statadd("Bluff Misc", 2, "item");
      model.statadd("Stealth Misc", 2, "item");
      model.statadd("Saving Throws", function() { /* against effects with the illusion or charm keywords */ return 2; }, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Eye of Discernment (epic tier)"] = new RulesElement({
    name: "Eye of Discernment (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3457",
    source: "Adventurer's Vault",
    categories: ["Eye of Discernment (epic tier)", "ID_FMP_MAGIC_ITEM_3457"],
    rules: function(model) {
      model.statadd("Insight Misc", 4, "item");
      model.statadd("Perception Misc", 4, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Eye of Ioun +2"] = new RulesElement({
    name: "Eye of Ioun +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2501",
    source: "Adventurer's Vault",
    categories: ["Eye of Ioun +2", "ID_FMP_MAGIC_ITEM_2501"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Eye of Ioun +3"] = new RulesElement({
    name: "Eye of Ioun +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2502",
    source: "Adventurer's Vault",
    categories: ["Eye of Ioun +3", "ID_FMP_MAGIC_ITEM_2502"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Eye of Ioun +4"] = new RulesElement({
    name: "Eye of Ioun +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2503",
    source: "Adventurer's Vault",
    categories: ["Eye of Ioun +4", "ID_FMP_MAGIC_ITEM_2503"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Eye of Ioun +5"] = new RulesElement({
    name: "Eye of Ioun +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2504",
    source: "Adventurer's Vault",
    categories: ["Eye of Ioun +5", "ID_FMP_MAGIC_ITEM_2504"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Eye of Ioun +6"] = new RulesElement({
    name: "Eye of Ioun +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2505",
    source: "Adventurer's Vault",
    categories: ["Eye of Ioun +6", "ID_FMP_MAGIC_ITEM_2505"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Eye of the Earthmother (paragon tier)"] = new RulesElement({
    name: "Eye of the Earthmother (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3459",
    source: "Adventurer's Vault",
    categories: ["Eye of the Earthmother (paragon tier)", "ID_FMP_MAGIC_ITEM_3459"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Face-Stealing Ring (paragon tier)"] = new RulesElement({
    name: "Face-Stealing Ring (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3730",
    source: "Adventurer's Vault",
    categories: ["Face-Stealing Ring (paragon tier)", "ID_FMP_MAGIC_ITEM_3730"],
    rules: function(model) {
      model.statadd("Insight Misc", 2, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Factotum Helm (paragon tier)"] = new RulesElement({
    name: "Factotum Helm (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3460",
    source: "Adventurer's Vault",
    categories: ["Factotum Helm (paragon tier)", "ID_FMP_MAGIC_ITEM_3460"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Fan of the Four Winds (heroic tier)"] = new RulesElement({
    name: "Fan of the Four Winds (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3851",
    source: "Adventurer's Vault",
    categories: ["Fan of the Four Winds (heroic tier)", "ID_FMP_MAGIC_ITEM_3851"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Farslayer Weapon +3"] = new RulesElement({
    name: "Farslayer Weapon +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2076",
    source: "Adventurer's Vault",
    categories: ["Farslayer Weapon +3", "ID_FMP_MAGIC_ITEM_2076"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Farslayer Weapon +4"] = new RulesElement({
    name: "Farslayer Weapon +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2077",
    source: "Adventurer's Vault",
    categories: ["Farslayer Weapon +4", "ID_FMP_MAGIC_ITEM_2077"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Farslayer Weapon +5"] = new RulesElement({
    name: "Farslayer Weapon +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2078",
    source: "Adventurer's Vault",
    categories: ["Farslayer Weapon +5", "ID_FMP_MAGIC_ITEM_2078"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Farslayer Weapon +6"] = new RulesElement({
    name: "Farslayer Weapon +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2079",
    source: "Adventurer's Vault",
    categories: ["Farslayer Weapon +6", "ID_FMP_MAGIC_ITEM_2079"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Feybread Biscuit (paragon tier)"] = new RulesElement({
    name: "Feybread Biscuit (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_4036",
    source: "Adventurer's Vault",
    categories: ["Feybread Biscuit (paragon tier)", "ID_FMP_MAGIC_ITEM_4036"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Feyleaf Sandals (heroic tier)"] = new RulesElement({
    name: "Feyleaf Sandals (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3333",
    source: "Adventurer's Vault",
    categories: ["Feyleaf Sandals (heroic tier)", "ID_FMP_MAGIC_ITEM_3333"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Feyleaf Vambraces (heroic tier)"] = new RulesElement({
    name: "Feyleaf Vambraces (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3221",
    source: "Adventurer's Vault",
    categories: ["Feyleaf Vambraces (heroic tier)", "ID_FMP_MAGIC_ITEM_3221"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Feymind Armor +3"] = new RulesElement({
    name: "Feymind Armor +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1581",
    source: "Adventurer's Vault",
    categories: ["Feymind Armor +3", "ID_FMP_MAGIC_ITEM_1581"],
    rules: function(model) {
      model.statadd("Armor Class", 3, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 3);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Feymind Armor +4"] = new RulesElement({
    name: "Feymind Armor +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1582",
    source: "Adventurer's Vault",
    categories: ["Feymind Armor +4", "ID_FMP_MAGIC_ITEM_1582"],
    rules: function(model) {
      model.statadd("Armor Class", 4, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 4);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Feymind Armor +5"] = new RulesElement({
    name: "Feymind Armor +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1583",
    source: "Adventurer's Vault",
    categories: ["Feymind Armor +5", "ID_FMP_MAGIC_ITEM_1583"],
    rules: function(model) {
      model.statadd("Armor Class", 5, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 5);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Feymind Armor +6"] = new RulesElement({
    name: "Feymind Armor +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1584",
    source: "Adventurer's Vault",
    categories: ["Feymind Armor +6", "ID_FMP_MAGIC_ITEM_1584"],
    rules: function(model) {
      model.statadd("Armor Class", 6, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 6);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Feyrod +4"] = new RulesElement({
    name: "Feyrod +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2793",
    source: "Adventurer's Vault",
    categories: ["Feyrod +4", "ID_FMP_MAGIC_ITEM_2793"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Feyrod +5"] = new RulesElement({
    name: "Feyrod +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2794",
    source: "Adventurer's Vault",
    categories: ["Feyrod +5", "ID_FMP_MAGIC_ITEM_2794"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Feyrod +6"] = new RulesElement({
    name: "Feyrod +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2795",
    source: "Adventurer's Vault",
    categories: ["Feyrod +6", "ID_FMP_MAGIC_ITEM_2795"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Feyslaughter Weapon +2"] = new RulesElement({
    name: "Feyslaughter Weapon +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2080",
    source: "Adventurer's Vault",
    categories: ["Feyslaughter Weapon +2", "ID_FMP_MAGIC_ITEM_2080"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Feyslaughter Weapon +3"] = new RulesElement({
    name: "Feyslaughter Weapon +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2081",
    source: "Adventurer's Vault",
    categories: ["Feyslaughter Weapon +3", "ID_FMP_MAGIC_ITEM_2081"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Feyslaughter Weapon +4"] = new RulesElement({
    name: "Feyslaughter Weapon +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2082",
    source: "Adventurer's Vault",
    categories: ["Feyslaughter Weapon +4", "ID_FMP_MAGIC_ITEM_2082"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Feyslaughter Weapon +5"] = new RulesElement({
    name: "Feyslaughter Weapon +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2083",
    source: "Adventurer's Vault",
    categories: ["Feyslaughter Weapon +5", "ID_FMP_MAGIC_ITEM_2083"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Feyslaughter Weapon +6"] = new RulesElement({
    name: "Feyslaughter Weapon +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2084",
    source: "Adventurer's Vault",
    categories: ["Feyslaughter Weapon +6", "ID_FMP_MAGIC_ITEM_2084"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Feystep Lacings (paragon tier)"] = new RulesElement({
    name: "Feystep Lacings (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3334",
    source: "Adventurer's Vault",
    categories: ["Feystep Lacings (paragon tier)", "ID_FMP_MAGIC_ITEM_3334"],
    rules: function(model) {
      model.statadd("Reflex Defense", 1);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Feyswarm Staff +1"] = new RulesElement({
    name: "Feyswarm Staff +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2932",
    source: "Adventurer's Vault",
    categories: ["Feyswarm Staff +1", "ID_FMP_MAGIC_ITEM_2932"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Feyswarm Staff +2"] = new RulesElement({
    name: "Feyswarm Staff +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2933",
    source: "Adventurer's Vault",
    categories: ["Feyswarm Staff +2", "ID_FMP_MAGIC_ITEM_2933"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Feyswarm Staff +3"] = new RulesElement({
    name: "Feyswarm Staff +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2934",
    source: "Adventurer's Vault",
    categories: ["Feyswarm Staff +3", "ID_FMP_MAGIC_ITEM_2934"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Feyswarm Staff +4"] = new RulesElement({
    name: "Feyswarm Staff +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2935",
    source: "Adventurer's Vault",
    categories: ["Feyswarm Staff +4", "ID_FMP_MAGIC_ITEM_2935"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Feyswarm Staff +5"] = new RulesElement({
    name: "Feyswarm Staff +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2936",
    source: "Adventurer's Vault",
    categories: ["Feyswarm Staff +5", "ID_FMP_MAGIC_ITEM_2936"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Feyswarm Staff +6"] = new RulesElement({
    name: "Feyswarm Staff +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2937",
    source: "Adventurer's Vault",
    categories: ["Feyswarm Staff +6", "ID_FMP_MAGIC_ITEM_2937"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Fire Beetle Potion (heroic tier)"] = new RulesElement({
    name: "Fire Beetle Potion (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3922",
    source: "Adventurer's Vault",
    categories: ["Fire Beetle Potion (heroic tier)", "ID_FMP_MAGIC_ITEM_3922"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Fireburst Boots (paragon tier)"] = new RulesElement({
    name: "Fireburst Boots (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3335",
    source: "Adventurer's Vault",
    categories: ["Fireburst Boots (paragon tier)", "ID_FMP_MAGIC_ITEM_3335"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Fireflower Pendant +2"] = new RulesElement({
    name: "Fireflower Pendant +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3644",
    source: "Adventurer's Vault",
    categories: ["Fireflower Pendant +2", "ID_FMP_MAGIC_ITEM_3644"],
    rules: function(model) {
      model.statadd("Fortitude Defense", 2, "Enhancement");
      model.statadd("Reflex Defense", 2, "Enhancement");
      model.statadd("Will Defense", 2, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Fireflower Pendant +3"] = new RulesElement({
    name: "Fireflower Pendant +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3645",
    source: "Adventurer's Vault",
    categories: ["Fireflower Pendant +3", "ID_FMP_MAGIC_ITEM_3645"],
    rules: function(model) {
      model.statadd("Fortitude Defense", 3, "Enhancement");
      model.statadd("Reflex Defense", 3, "Enhancement");
      model.statadd("Will Defense", 3, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Fireflower Pendant +4"] = new RulesElement({
    name: "Fireflower Pendant +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3646",
    source: "Adventurer's Vault",
    categories: ["Fireflower Pendant +4", "ID_FMP_MAGIC_ITEM_3646"],
    rules: function(model) {
      model.statadd("Fortitude Defense", 4, "Enhancement");
      model.statadd("Reflex Defense", 4, "Enhancement");
      model.statadd("Will Defense", 4, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Fireflower Pendant +5"] = new RulesElement({
    name: "Fireflower Pendant +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3647",
    source: "Adventurer's Vault",
    categories: ["Fireflower Pendant +5", "ID_FMP_MAGIC_ITEM_3647"],
    rules: function(model) {
      model.statadd("Fortitude Defense", 5, "Enhancement");
      model.statadd("Reflex Defense", 5, "Enhancement");
      model.statadd("Will Defense", 5, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Fireflower Pendant +6"] = new RulesElement({
    name: "Fireflower Pendant +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3648",
    source: "Adventurer's Vault",
    categories: ["Fireflower Pendant +6", "ID_FMP_MAGIC_ITEM_3648"],
    rules: function(model) {
      model.statadd("Fortitude Defense", 6, "Enhancement");
      model.statadd("Reflex Defense", 6, "Enhancement");
      model.statadd("Will Defense", 6, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Fist of Kord +2"] = new RulesElement({
    name: "Fist of Kord +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2506",
    source: "Adventurer's Vault",
    categories: ["Fist of Kord +2", "ID_FMP_MAGIC_ITEM_2506"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Fist of Kord +3"] = new RulesElement({
    name: "Fist of Kord +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2507",
    source: "Adventurer's Vault",
    categories: ["Fist of Kord +3", "ID_FMP_MAGIC_ITEM_2507"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Fist of Kord +4"] = new RulesElement({
    name: "Fist of Kord +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2508",
    source: "Adventurer's Vault",
    categories: ["Fist of Kord +4", "ID_FMP_MAGIC_ITEM_2508"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Fist of Kord +5"] = new RulesElement({
    name: "Fist of Kord +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2509",
    source: "Adventurer's Vault",
    categories: ["Fist of Kord +5", "ID_FMP_MAGIC_ITEM_2509"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Fist of Kord +6"] = new RulesElement({
    name: "Fist of Kord +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2510",
    source: "Adventurer's Vault",
    categories: ["Fist of Kord +6", "ID_FMP_MAGIC_ITEM_2510"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Flame Bracers (epic tier)"] = new RulesElement({
    name: "Flame Bracers (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3224",
    source: "Adventurer's Vault",
    categories: ["Flame Bracers (epic tier)", "ID_FMP_MAGIC_ITEM_3224"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Flame Bracers (heroic tier)"] = new RulesElement({
    name: "Flame Bracers (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3222",
    source: "Adventurer's Vault",
    categories: ["Flame Bracers (heroic tier)", "ID_FMP_MAGIC_ITEM_3222"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Flame Bracers (paragon tier)"] = new RulesElement({
    name: "Flame Bracers (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3223",
    source: "Adventurer's Vault",
    categories: ["Flame Bracers (paragon tier)", "ID_FMP_MAGIC_ITEM_3223"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Flame Rose (epic tier)"] = new RulesElement({
    name: "Flame Rose (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_4067",
    source: "Adventurer's Vault",
    categories: ["Flame Rose (epic tier)", "ID_FMP_MAGIC_ITEM_4067"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Flame Rose (heroic tier)"] = new RulesElement({
    name: "Flame Rose (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_4065",
    source: "Adventurer's Vault",
    categories: ["Flame Rose (heroic tier)", "ID_FMP_MAGIC_ITEM_4065"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Flame Rose (paragon tier)"] = new RulesElement({
    name: "Flame Rose (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_4066",
    source: "Adventurer's Vault",
    categories: ["Flame Rose (paragon tier)", "ID_FMP_MAGIC_ITEM_4066"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Flame Wand +1"] = new RulesElement({
    name: "Flame Wand +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3039",
    source: "Adventurer's Vault",
    categories: ["Flame Wand +1", "ID_FMP_MAGIC_ITEM_3039"],
    rules: function(model) {
      model.statadd("fire:damage", 1, "item");
      model.grant(elements.id["ID_FMP_POWER_1166"]);
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Flame Wand +2"] = new RulesElement({
    name: "Flame Wand +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3040",
    source: "Adventurer's Vault",
    categories: ["Flame Wand +2", "ID_FMP_MAGIC_ITEM_3040"],
    rules: function(model) {
      model.statadd("fire:damage", 1, "item");
      model.grant(elements.id["ID_FMP_POWER_1166"]);
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Flame Wand +3"] = new RulesElement({
    name: "Flame Wand +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3041",
    source: "Adventurer's Vault",
    categories: ["Flame Wand +3", "ID_FMP_MAGIC_ITEM_3041"],
    rules: function(model) {
      model.statadd("fire:damage", 2, "item");
      model.grant(elements.id["ID_FMP_POWER_1166"]);
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Flame Wand +4"] = new RulesElement({
    name: "Flame Wand +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3042",
    source: "Adventurer's Vault",
    categories: ["Flame Wand +4", "ID_FMP_MAGIC_ITEM_3042"],
    rules: function(model) {
      model.statadd("fire:damage", 2, "item");
      model.grant(elements.id["ID_FMP_POWER_1166"]);
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Flame Wand +5"] = new RulesElement({
    name: "Flame Wand +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3043",
    source: "Adventurer's Vault",
    categories: ["Flame Wand +5", "ID_FMP_MAGIC_ITEM_3043"],
    rules: function(model) {
      model.statadd("fire:damage", 3, "item");
      model.grant(elements.id["ID_FMP_POWER_1166"]);
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Flame Wand +6"] = new RulesElement({
    name: "Flame Wand +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3044",
    source: "Adventurer's Vault",
    categories: ["Flame Wand +6", "ID_FMP_MAGIC_ITEM_3044"],
    rules: function(model) {
      model.statadd("fire:damage", 3, "item");
      model.grant(elements.id["ID_FMP_POWER_1166"]);
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Flamedrinker Shield (epic tier)"] = new RulesElement({
    name: "Flamedrinker Shield (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3227",
    source: "Adventurer's Vault",
    categories: ["Flamedrinker Shield (epic tier)", "ID_FMP_MAGIC_ITEM_3227"],
    rules: function(model) {
      model.statadd("Flamedrinker Shield (epic tier)", 15, "Flamedrinker Shield (epic tier)");
      model.statadd("resist:fire", function() { return model.stat("Flamedrinker Shield (epic tier)"); }, "resist");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Flamedrinker Shield (heroic tier)"] = new RulesElement({
    name: "Flamedrinker Shield (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3225",
    source: "Adventurer's Vault",
    categories: ["Flamedrinker Shield (heroic tier)", "ID_FMP_MAGIC_ITEM_3225"],
    rules: function(model) {
      model.statadd("Flamedrinker Shield (heroic tier)", 5, "Flamedrinker Shield (heroic tier)");
      model.statadd("resist:fire", function() { return model.stat("Flamedrinker Shield (heroic tier)"); }, "resist");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Flamedrinker Shield (paragon tier)"] = new RulesElement({
    name: "Flamedrinker Shield (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3226",
    source: "Adventurer's Vault",
    categories: ["Flamedrinker Shield (paragon tier)", "ID_FMP_MAGIC_ITEM_3226"],
    rules: function(model) {
      model.statadd("Flamedrinker Shield (paragon tier)", 10, "Flamedrinker Shield (paragon tier)");
      model.statadd("resist:fire", function() { return model.stat("Flamedrinker Shield (paragon tier)"); }, "resist");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Flamewrath Cape +3"] = new RulesElement({
    name: "Flamewrath Cape +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3649",
    source: "Adventurer's Vault",
    categories: ["Flamewrath Cape +3", "ID_FMP_MAGIC_ITEM_3649"],
    rules: function(model) {
      model.statadd("Intimidate Misc", 3, "item");
      model.statadd("Fortitude Defense", 3, "Enhancement");
      model.statadd("Reflex Defense", 3, "Enhancement");
      model.statadd("Will Defense", 3, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Flamewrath Cape +4"] = new RulesElement({
    name: "Flamewrath Cape +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3650",
    source: "Adventurer's Vault",
    categories: ["Flamewrath Cape +4", "ID_FMP_MAGIC_ITEM_3650"],
    rules: function(model) {
      model.statadd("Intimidate Misc", 4, "item");
      model.statadd("Fortitude Defense", 4, "Enhancement");
      model.statadd("Reflex Defense", 4, "Enhancement");
      model.statadd("Will Defense", 4, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Flamewrath Cape +5"] = new RulesElement({
    name: "Flamewrath Cape +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3651",
    source: "Adventurer's Vault",
    categories: ["Flamewrath Cape +5", "ID_FMP_MAGIC_ITEM_3651"],
    rules: function(model) {
      model.statadd("Intimidate Misc", 5, "item");
      model.statadd("Fortitude Defense", 5, "Enhancement");
      model.statadd("Reflex Defense", 5, "Enhancement");
      model.statadd("Will Defense", 5, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Flamewrath Cape +6"] = new RulesElement({
    name: "Flamewrath Cape +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3652",
    source: "Adventurer's Vault",
    categories: ["Flamewrath Cape +6", "ID_FMP_MAGIC_ITEM_3652"],
    rules: function(model) {
      model.statadd("Intimidate Misc", 6, "item");
      model.statadd("Fortitude Defense", 6, "Enhancement");
      model.statadd("Reflex Defense", 6, "Enhancement");
      model.statadd("Will Defense", 6, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Flanker's Boots (paragon tier)"] = new RulesElement({
    name: "Flanker's Boots (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3336",
    source: "Adventurer's Vault",
    categories: ["Flanker's Boots (paragon tier)", "ID_FMP_MAGIC_ITEM_3336"],
    rules: function(model) {
      model.statadd("Athletics Misc", 2, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Flanking Weapon +2"] = new RulesElement({
    name: "Flanking Weapon +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2085",
    source: "Adventurer's Vault",
    categories: ["Flanking Weapon +2", "ID_FMP_MAGIC_ITEM_2085"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Flanking Weapon +3"] = new RulesElement({
    name: "Flanking Weapon +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2086",
    source: "Adventurer's Vault",
    categories: ["Flanking Weapon +3", "ID_FMP_MAGIC_ITEM_2086"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Flanking Weapon +4"] = new RulesElement({
    name: "Flanking Weapon +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2087",
    source: "Adventurer's Vault",
    categories: ["Flanking Weapon +4", "ID_FMP_MAGIC_ITEM_2087"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Flanking Weapon +5"] = new RulesElement({
    name: "Flanking Weapon +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2088",
    source: "Adventurer's Vault",
    categories: ["Flanking Weapon +5", "ID_FMP_MAGIC_ITEM_2088"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Flanking Weapon +6"] = new RulesElement({
    name: "Flanking Weapon +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2089",
    source: "Adventurer's Vault",
    categories: ["Flanking Weapon +6", "ID_FMP_MAGIC_ITEM_2089"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Flaring Shield (paragon tier)"] = new RulesElement({
    name: "Flaring Shield (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3228",
    source: "Adventurer's Vault",
    categories: ["Flaring Shield (paragon tier)", "ID_FMP_MAGIC_ITEM_3228"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Flaying Gloves (epic tier)"] = new RulesElement({
    name: "Flaying Gloves (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3376",
    source: "Adventurer's Vault",
    categories: ["Flaying Gloves (epic tier)", "ID_FMP_MAGIC_ITEM_3376"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Flaying Gloves (heroic tier)"] = new RulesElement({
    name: "Flaying Gloves (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3374",
    source: "Adventurer's Vault",
    categories: ["Flaying Gloves (heroic tier)", "ID_FMP_MAGIC_ITEM_3374"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Flaying Gloves (paragon tier)"] = new RulesElement({
    name: "Flaying Gloves (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3375",
    source: "Adventurer's Vault",
    categories: ["Flaying Gloves (paragon tier)", "ID_FMP_MAGIC_ITEM_3375"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Flesh Seeker +1"] = new RulesElement({
    name: "Flesh Seeker +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2090",
    source: "Adventurer's Vault",
    categories: ["Flesh Seeker +1", "ID_FMP_MAGIC_ITEM_2090"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Flesh Seeker +2"] = new RulesElement({
    name: "Flesh Seeker +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2091",
    source: "Adventurer's Vault",
    categories: ["Flesh Seeker +2", "ID_FMP_MAGIC_ITEM_2091"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Flesh Seeker +3"] = new RulesElement({
    name: "Flesh Seeker +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2092",
    source: "Adventurer's Vault",
    categories: ["Flesh Seeker +3", "ID_FMP_MAGIC_ITEM_2092"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Flesh Seeker +4"] = new RulesElement({
    name: "Flesh Seeker +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2093",
    source: "Adventurer's Vault",
    categories: ["Flesh Seeker +4", "ID_FMP_MAGIC_ITEM_2093"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Flesh Seeker +5"] = new RulesElement({
    name: "Flesh Seeker +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2094",
    source: "Adventurer's Vault",
    categories: ["Flesh Seeker +5", "ID_FMP_MAGIC_ITEM_2094"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Flesh Seeker +6"] = new RulesElement({
    name: "Flesh Seeker +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2095",
    source: "Adventurer's Vault",
    categories: ["Flesh Seeker +6", "ID_FMP_MAGIC_ITEM_2095"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Flickersight Armor +3"] = new RulesElement({
    name: "Flickersight Armor +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1585",
    source: "Adventurer's Vault",
    categories: ["Flickersight Armor +3", "ID_FMP_MAGIC_ITEM_1585"],
    rules: function(model) {
      model.statadd("Armor Class", 3, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 3);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Flickersight Armor +4"] = new RulesElement({
    name: "Flickersight Armor +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1586",
    source: "Adventurer's Vault",
    categories: ["Flickersight Armor +4", "ID_FMP_MAGIC_ITEM_1586"],
    rules: function(model) {
      model.statadd("Armor Class", 4, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 4);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Flickersight Armor +5"] = new RulesElement({
    name: "Flickersight Armor +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1587",
    source: "Adventurer's Vault",
    categories: ["Flickersight Armor +5", "ID_FMP_MAGIC_ITEM_1587"],
    rules: function(model) {
      model.statadd("Armor Class", 5, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 5);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Flickersight Armor +6"] = new RulesElement({
    name: "Flickersight Armor +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1588",
    source: "Adventurer's Vault",
    categories: ["Flickersight Armor +6", "ID_FMP_MAGIC_ITEM_1588"],
    rules: function(model) {
      model.statadd("Armor Class", 6, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 6);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Floating Lantern (heroic tier)"] = new RulesElement({
    name: "Floating Lantern (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3852",
    source: "Adventurer's Vault",
    categories: ["Floating Lantern (heroic tier)", "ID_FMP_MAGIC_ITEM_3852"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Floating Shield (heroic tier)"] = new RulesElement({
    name: "Floating Shield (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3229",
    source: "Adventurer's Vault",
    categories: ["Floating Shield (heroic tier)", "ID_FMP_MAGIC_ITEM_3229"],
    rules: function(model) {
      model.statadd("Athletics Misc", function() { /* to swim */ return 3; }, "item");
      model.statadd("Endurance Misc", function() { /* to swim for an hour or more */ return 3; }, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Floorfighter Straps (paragon tier)"] = new RulesElement({
    name: "Floorfighter Straps (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3337",
    source: "Adventurer's Vault",
    categories: ["Floorfighter Straps (paragon tier)", "ID_FMP_MAGIC_ITEM_3337"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Flying Hook (paragon tier)"] = new RulesElement({
    name: "Flying Hook (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3853",
    source: "Adventurer's Vault",
    categories: ["Flying Hook (paragon tier)", "ID_FMP_MAGIC_ITEM_3853"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Foe Stone (paragon tier)"] = new RulesElement({
    name: "Foe Stone (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3854",
    source: "Adventurer's Vault",
    categories: ["Foe Stone (paragon tier)", "ID_FMP_MAGIC_ITEM_3854"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Footpad's Friend +2"] = new RulesElement({
    name: "Footpad's Friend +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2096",
    source: "Adventurer's Vault",
    categories: ["Footpad's Friend +2", "ID_FMP_MAGIC_ITEM_2096"],
    rules: function(model) {
      model.statadd("Sneak Attack", function() { return abilitymod(model.stat("Charisma")); });
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Footpad's Friend +3"] = new RulesElement({
    name: "Footpad's Friend +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2097",
    source: "Adventurer's Vault",
    categories: ["Footpad's Friend +3", "ID_FMP_MAGIC_ITEM_2097"],
    rules: function(model) {
      model.statadd("Sneak Attack", function() { return abilitymod(model.stat("Charisma")); });
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Footpad's Friend +4"] = new RulesElement({
    name: "Footpad's Friend +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2098",
    source: "Adventurer's Vault",
    categories: ["Footpad's Friend +4", "ID_FMP_MAGIC_ITEM_2098"],
    rules: function(model) {
      model.statadd("Sneak Attack", function() { return abilitymod(model.stat("Charisma")); });
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Footpad's Friend +5"] = new RulesElement({
    name: "Footpad's Friend +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2099",
    source: "Adventurer's Vault",
    categories: ["Footpad's Friend +5", "ID_FMP_MAGIC_ITEM_2099"],
    rules: function(model) {
      model.statadd("Sneak Attack", function() { return abilitymod(model.stat("Charisma")); });
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Footpad's Friend +6"] = new RulesElement({
    name: "Footpad's Friend +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2100",
    source: "Adventurer's Vault",
    categories: ["Footpad's Friend +6", "ID_FMP_MAGIC_ITEM_2100"],
    rules: function(model) {
      model.statadd("Sneak Attack", function() { return abilitymod(model.stat("Charisma")); });
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Forbidding Weapon +3"] = new RulesElement({
    name: "Forbidding Weapon +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2101",
    source: "Adventurer's Vault",
    categories: ["Forbidding Weapon +3", "ID_FMP_MAGIC_ITEM_2101"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Forbidding Weapon +4"] = new RulesElement({
    name: "Forbidding Weapon +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2102",
    source: "Adventurer's Vault",
    categories: ["Forbidding Weapon +4", "ID_FMP_MAGIC_ITEM_2102"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Forbidding Weapon +5"] = new RulesElement({
    name: "Forbidding Weapon +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2103",
    source: "Adventurer's Vault",
    categories: ["Forbidding Weapon +5", "ID_FMP_MAGIC_ITEM_2103"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Forbidding Weapon +6"] = new RulesElement({
    name: "Forbidding Weapon +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2104",
    source: "Adventurer's Vault",
    categories: ["Forbidding Weapon +6", "ID_FMP_MAGIC_ITEM_2104"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Force Staff +1"] = new RulesElement({
    name: "Force Staff +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2926",
    source: "Adventurer's Vault",
    categories: ["Force Staff +1", "ID_FMP_MAGIC_ITEM_2926"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Force Staff +2"] = new RulesElement({
    name: "Force Staff +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2927",
    source: "Adventurer's Vault",
    categories: ["Force Staff +2", "ID_FMP_MAGIC_ITEM_2927"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Force Staff +3"] = new RulesElement({
    name: "Force Staff +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2928",
    source: "Adventurer's Vault",
    categories: ["Force Staff +3", "ID_FMP_MAGIC_ITEM_2928"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Force Staff +4"] = new RulesElement({
    name: "Force Staff +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2929",
    source: "Adventurer's Vault",
    categories: ["Force Staff +4", "ID_FMP_MAGIC_ITEM_2929"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Force Staff +5"] = new RulesElement({
    name: "Force Staff +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2930",
    source: "Adventurer's Vault",
    categories: ["Force Staff +5", "ID_FMP_MAGIC_ITEM_2930"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Force Staff +6"] = new RulesElement({
    name: "Force Staff +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2931",
    source: "Adventurer's Vault",
    categories: ["Force Staff +6", "ID_FMP_MAGIC_ITEM_2931"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Force Wand +1"] = new RulesElement({
    name: "Force Wand +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3045",
    source: "Adventurer's Vault",
    categories: ["Force Wand +1", "ID_FMP_MAGIC_ITEM_3045"],
    rules: function(model) {
      model.statadd("force:damage", 1, "item");
      model.grant(elements.id["ID_FMP_POWER_463"]);
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Force Wand +2"] = new RulesElement({
    name: "Force Wand +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3046",
    source: "Adventurer's Vault",
    categories: ["Force Wand +2", "ID_FMP_MAGIC_ITEM_3046"],
    rules: function(model) {
      model.statadd("force:damage", 1, "item");
      model.grant(elements.id["ID_FMP_POWER_463"]);
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Force Wand +3"] = new RulesElement({
    name: "Force Wand +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3047",
    source: "Adventurer's Vault",
    categories: ["Force Wand +3", "ID_FMP_MAGIC_ITEM_3047"],
    rules: function(model) {
      model.statadd("force:damage", 2, "item");
      model.grant(elements.id["ID_FMP_POWER_463"]);
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Force Wand +4"] = new RulesElement({
    name: "Force Wand +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3048",
    source: "Adventurer's Vault",
    categories: ["Force Wand +4", "ID_FMP_MAGIC_ITEM_3048"],
    rules: function(model) {
      model.statadd("force:damage", 2, "item");
      model.grant(elements.id["ID_FMP_POWER_463"]);
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Force Wand +5"] = new RulesElement({
    name: "Force Wand +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3049",
    source: "Adventurer's Vault",
    categories: ["Force Wand +5", "ID_FMP_MAGIC_ITEM_3049"],
    rules: function(model) {
      model.statadd("force:damage", 3, "item");
      model.grant(elements.id["ID_FMP_POWER_463"]);
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Force Wand +6"] = new RulesElement({
    name: "Force Wand +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3050",
    source: "Adventurer's Vault",
    categories: ["Force Wand +6", "ID_FMP_MAGIC_ITEM_3050"],
    rules: function(model) {
      model.statadd("force:damage", 3, "item");
      model.grant(elements.id["ID_FMP_POWER_463"]);
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Force Weapon +2"] = new RulesElement({
    name: "Force Weapon +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2105",
    source: "Adventurer's Vault",
    categories: ["Force Weapon +2", "ID_FMP_MAGIC_ITEM_2105"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Force Weapon +3"] = new RulesElement({
    name: "Force Weapon +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2106",
    source: "Adventurer's Vault",
    categories: ["Force Weapon +3", "ID_FMP_MAGIC_ITEM_2106"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Force Weapon +4"] = new RulesElement({
    name: "Force Weapon +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2107",
    source: "Adventurer's Vault",
    categories: ["Force Weapon +4", "ID_FMP_MAGIC_ITEM_2107"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Force Weapon +5"] = new RulesElement({
    name: "Force Weapon +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2108",
    source: "Adventurer's Vault",
    categories: ["Force Weapon +5", "ID_FMP_MAGIC_ITEM_2108"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Force Weapon +6"] = new RulesElement({
    name: "Force Weapon +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2109",
    source: "Adventurer's Vault",
    categories: ["Force Weapon +6", "ID_FMP_MAGIC_ITEM_2109"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Forceful Weapon +4"] = new RulesElement({
    name: "Forceful Weapon +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2110",
    source: "Adventurer's Vault",
    categories: ["Forceful Weapon +4", "ID_FMP_MAGIC_ITEM_2110"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Forceful Weapon +5"] = new RulesElement({
    name: "Forceful Weapon +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2111",
    source: "Adventurer's Vault",
    categories: ["Forceful Weapon +5", "ID_FMP_MAGIC_ITEM_2111"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Forceful Weapon +6"] = new RulesElement({
    name: "Forceful Weapon +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2112",
    source: "Adventurer's Vault",
    categories: ["Forceful Weapon +6", "ID_FMP_MAGIC_ITEM_2112"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Fortification Armor +1"] = new RulesElement({
    name: "Fortification Armor +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1589",
    source: "Adventurer's Vault",
    categories: ["Fortification Armor +1", "ID_FMP_MAGIC_ITEM_1589"],
    rules: function(model) {
      model.statadd("Armor Class", 1, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 1);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Fortification Armor +2"] = new RulesElement({
    name: "Fortification Armor +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1590",
    source: "Adventurer's Vault",
    categories: ["Fortification Armor +2", "ID_FMP_MAGIC_ITEM_1590"],
    rules: function(model) {
      model.statadd("Armor Class", 2, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 2);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Fortification Armor +3"] = new RulesElement({
    name: "Fortification Armor +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1591",
    source: "Adventurer's Vault",
    categories: ["Fortification Armor +3", "ID_FMP_MAGIC_ITEM_1591"],
    rules: function(model) {
      model.statadd("Armor Class", 3, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 3);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Fortification Armor +4"] = new RulesElement({
    name: "Fortification Armor +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1592",
    source: "Adventurer's Vault",
    categories: ["Fortification Armor +4", "ID_FMP_MAGIC_ITEM_1592"],
    rules: function(model) {
      model.statadd("Armor Class", 4, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 4);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Fortification Armor +5"] = new RulesElement({
    name: "Fortification Armor +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1593",
    source: "Adventurer's Vault",
    categories: ["Fortification Armor +5", "ID_FMP_MAGIC_ITEM_1593"],
    rules: function(model) {
      model.statadd("Armor Class", 5, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 5);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Fortification Armor +6"] = new RulesElement({
    name: "Fortification Armor +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1594",
    source: "Adventurer's Vault",
    categories: ["Fortification Armor +6", "ID_FMP_MAGIC_ITEM_1594"],
    rules: function(model) {
      model.statadd("Armor Class", 6, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 6);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Fragrance of Authority (paragon tier)"] = new RulesElement({
    name: "Fragrance of Authority (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3855",
    source: "Adventurer's Vault",
    categories: ["Fragrance of Authority (paragon tier)", "ID_FMP_MAGIC_ITEM_3855"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Friend's Gift (epic tier)"] = new RulesElement({
    name: "Friend's Gift (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3962",
    source: "Adventurer's Vault",
    categories: ["Friend's Gift (epic tier)", "ID_FMP_MAGIC_ITEM_3962"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Friend's Gift (heroic tier)"] = new RulesElement({
    name: "Friend's Gift (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3960",
    source: "Adventurer's Vault",
    categories: ["Friend's Gift (heroic tier)", "ID_FMP_MAGIC_ITEM_3960"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Friend's Gift (paragon tier)"] = new RulesElement({
    name: "Friend's Gift (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3961",
    source: "Adventurer's Vault",
    categories: ["Friend's Gift (paragon tier)", "ID_FMP_MAGIC_ITEM_3961"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Frost Gauntlets (epic tier)"] = new RulesElement({
    name: "Frost Gauntlets (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3379",
    source: "Adventurer's Vault",
    categories: ["Frost Gauntlets (epic tier)", "ID_FMP_MAGIC_ITEM_3379"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Frost Gauntlets (heroic tier)"] = new RulesElement({
    name: "Frost Gauntlets (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3377",
    source: "Adventurer's Vault",
    categories: ["Frost Gauntlets (heroic tier)", "ID_FMP_MAGIC_ITEM_3377"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Frost Gauntlets (paragon tier)"] = new RulesElement({
    name: "Frost Gauntlets (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3378",
    source: "Adventurer's Vault",
    categories: ["Frost Gauntlets (paragon tier)", "ID_FMP_MAGIC_ITEM_3378"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Frostburn Armor +3"] = new RulesElement({
    name: "Frostburn Armor +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1595",
    source: "Adventurer's Vault",
    categories: ["Frostburn Armor +3", "ID_FMP_MAGIC_ITEM_1595"],
    rules: function(model) {
      model.statadd("resist:cold", 5, "resist");
      model.statadd("resist:fire", 5, "resist");
      model.statadd("Armor Class", 3, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 3);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Frostburn Armor +4"] = new RulesElement({
    name: "Frostburn Armor +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1596",
    source: "Adventurer's Vault",
    categories: ["Frostburn Armor +4", "ID_FMP_MAGIC_ITEM_1596"],
    rules: function(model) {
      model.statadd("resist:cold", 5, "resist");
      model.statadd("resist:fire", 5, "resist");
      model.statadd("Armor Class", 4, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 4);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Frostburn Armor +5"] = new RulesElement({
    name: "Frostburn Armor +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1597",
    source: "Adventurer's Vault",
    categories: ["Frostburn Armor +5", "ID_FMP_MAGIC_ITEM_1597"],
    rules: function(model) {
      model.statadd("resist:cold", 10, "resist");
      model.statadd("resist:fire", 10, "resist");
      model.statadd("Armor Class", 5, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 5);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Frostburn Armor +6"] = new RulesElement({
    name: "Frostburn Armor +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1598",
    source: "Adventurer's Vault",
    categories: ["Frostburn Armor +6", "ID_FMP_MAGIC_ITEM_1598"],
    rules: function(model) {
      model.statadd("resist:cold", 10, "resist");
      model.statadd("resist:fire", 10, "resist");
      model.statadd("Armor Class", 6, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 6);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Frozen Armor +1"] = new RulesElement({
    name: "Frozen Armor +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1599",
    source: "Adventurer's Vault",
    categories: ["Frozen Armor +1", "ID_FMP_MAGIC_ITEM_1599"],
    rules: function(model) {
      model.statadd("resist:cold", 5, "resist");
      model.statadd("Armor Class", 1, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 1);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Frozen Armor +2"] = new RulesElement({
    name: "Frozen Armor +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1600",
    source: "Adventurer's Vault",
    categories: ["Frozen Armor +2", "ID_FMP_MAGIC_ITEM_1600"],
    rules: function(model) {
      model.statadd("resist:cold", 5, "resist");
      model.statadd("Armor Class", 2, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 2);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Frozen Armor +3"] = new RulesElement({
    name: "Frozen Armor +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1601",
    source: "Adventurer's Vault",
    categories: ["Frozen Armor +3", "ID_FMP_MAGIC_ITEM_1601"],
    rules: function(model) {
      model.statadd("resist:cold", 10, "resist");
      model.statadd("Armor Class", 3, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 3);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Frozen Armor +4"] = new RulesElement({
    name: "Frozen Armor +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1602",
    source: "Adventurer's Vault",
    categories: ["Frozen Armor +4", "ID_FMP_MAGIC_ITEM_1602"],
    rules: function(model) {
      model.statadd("resist:cold", 10, "resist");
      model.statadd("Armor Class", 4, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 4);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Frozen Armor +5"] = new RulesElement({
    name: "Frozen Armor +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1603",
    source: "Adventurer's Vault",
    categories: ["Frozen Armor +5", "ID_FMP_MAGIC_ITEM_1603"],
    rules: function(model) {
      model.statadd("resist:cold", 15, "resist");
      model.statadd("Armor Class", 5, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 5);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Frozen Armor +6"] = new RulesElement({
    name: "Frozen Armor +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1604",
    source: "Adventurer's Vault",
    categories: ["Frozen Armor +6", "ID_FMP_MAGIC_ITEM_1604"],
    rules: function(model) {
      model.statadd("resist:cold", 15, "resist");
      model.statadd("Armor Class", 6, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 6);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Frozen Whetstone (epic tier)"] = new RulesElement({
    name: "Frozen Whetstone (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_4025",
    source: "Adventurer's Vault",
    categories: ["Frozen Whetstone (epic tier)", "ID_FMP_MAGIC_ITEM_4025"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Frozen Whetstone (heroic tier)"] = new RulesElement({
    name: "Frozen Whetstone (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_4023",
    source: "Adventurer's Vault",
    categories: ["Frozen Whetstone (heroic tier)", "ID_FMP_MAGIC_ITEM_4023"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Frozen Whetstone (paragon tier)"] = new RulesElement({
    name: "Frozen Whetstone (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_4024",
    source: "Adventurer's Vault",
    categories: ["Frozen Whetstone (paragon tier)", "ID_FMP_MAGIC_ITEM_4024"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Fundamental Ice (epic tier)"] = new RulesElement({
    name: "Fundamental Ice (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_4070",
    source: "Adventurer's Vault",
    categories: ["Fundamental Ice (epic tier)", "ID_FMP_MAGIC_ITEM_4070"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Fundamental Ice (heroic tier)"] = new RulesElement({
    name: "Fundamental Ice (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_4068",
    source: "Adventurer's Vault",
    categories: ["Fundamental Ice (heroic tier)", "ID_FMP_MAGIC_ITEM_4068"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Fundamental Ice (paragon tier)"] = new RulesElement({
    name: "Fundamental Ice (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_4069",
    source: "Adventurer's Vault",
    categories: ["Fundamental Ice (paragon tier)", "ID_FMP_MAGIC_ITEM_4069"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Gambler's Weapon +1"] = new RulesElement({
    name: "Gambler's Weapon +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2113",
    source: "Adventurer's Vault",
    categories: ["Gambler's Weapon +1", "ID_FMP_MAGIC_ITEM_2113"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Gambler's Weapon +2"] = new RulesElement({
    name: "Gambler's Weapon +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2114",
    source: "Adventurer's Vault",
    categories: ["Gambler's Weapon +2", "ID_FMP_MAGIC_ITEM_2114"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Gambler's Weapon +3"] = new RulesElement({
    name: "Gambler's Weapon +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2115",
    source: "Adventurer's Vault",
    categories: ["Gambler's Weapon +3", "ID_FMP_MAGIC_ITEM_2115"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Gambler's Weapon +4"] = new RulesElement({
    name: "Gambler's Weapon +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2116",
    source: "Adventurer's Vault",
    categories: ["Gambler's Weapon +4", "ID_FMP_MAGIC_ITEM_2116"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Gambler's Weapon +5"] = new RulesElement({
    name: "Gambler's Weapon +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2117",
    source: "Adventurer's Vault",
    categories: ["Gambler's Weapon +5", "ID_FMP_MAGIC_ITEM_2117"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Gambler's Weapon +6"] = new RulesElement({
    name: "Gambler's Weapon +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2118",
    source: "Adventurer's Vault",
    categories: ["Gambler's Weapon +6", "ID_FMP_MAGIC_ITEM_2118"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Gargoyle Ring (epic tier)"] = new RulesElement({
    name: "Gargoyle Ring (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3731",
    source: "Adventurer's Vault",
    categories: ["Gargoyle Ring (epic tier)", "ID_FMP_MAGIC_ITEM_3731"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Gauntlets of blinding strikes (paragon tier)"] = new RulesElement({
    name: "Gauntlets of blinding strikes (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3380",
    source: "Adventurer's Vault",
    categories: ["Gauntlets of blinding strikes (paragon tier)", "ID_FMP_MAGIC_ITEM_3380"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Gauntlets of Brilliance (heroic tier)"] = new RulesElement({
    name: "Gauntlets of Brilliance (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3381",
    source: "Adventurer's Vault",
    categories: ["Gauntlets of Brilliance (heroic tier)", "ID_FMP_MAGIC_ITEM_3381"],
    rules: function(model) {
      model.grant(elements.id["ID_FMP_POWER_1225"]);
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Gem of Auditory Recollection (paragon tier)"] = new RulesElement({
    name: "Gem of Auditory Recollection (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3856",
    source: "Adventurer's Vault",
    categories: ["Gem of Auditory Recollection (paragon tier)", "ID_FMP_MAGIC_ITEM_3856"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Gem of Colloquy (heroic tier)"] = new RulesElement({
    name: "Gem of Colloquy (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3461",
    source: "Adventurer's Vault",
    categories: ["Gem of Colloquy (heroic tier)", "ID_FMP_MAGIC_ITEM_3461"],
    rules: function(model) {
      model.statadd("Bluff Misc", 1, "item");
      model.statadd("Diplomacy Misc", 1, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Gem of Colloquy (paragon tier)"] = new RulesElement({
    name: "Gem of Colloquy (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3462",
    source: "Adventurer's Vault",
    categories: ["Gem of Colloquy (paragon tier)", "ID_FMP_MAGIC_ITEM_3462"],
    rules: function(model) {
      model.statadd("Bluff Misc", 3, "item");
      model.statadd("Diplomacy Misc", 3, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Gem of Valor (paragon tier)"] = new RulesElement({
    name: "Gem of Valor (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_4037",
    source: "Adventurer's Vault",
    categories: ["Gem of Valor (paragon tier)", "ID_FMP_MAGIC_ITEM_4037"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Ghost Bridle (heroic tier)"] = new RulesElement({
    name: "Ghost Bridle (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3973",
    source: "Adventurer's Vault",
    categories: ["Ghost Bridle (heroic tier)", "ID_FMP_MAGIC_ITEM_3973"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Ghost Chain Weapon +5"] = new RulesElement({
    name: "Ghost Chain Weapon +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2119",
    source: "Adventurer's Vault",
    categories: ["Ghost Chain Weapon +5", "ID_FMP_MAGIC_ITEM_2119"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Ghost Chain Weapon +6"] = new RulesElement({
    name: "Ghost Chain Weapon +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2120",
    source: "Adventurer's Vault",
    categories: ["Ghost Chain Weapon +6", "ID_FMP_MAGIC_ITEM_2120"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Ghoststrike Oil (level 13)"] = new RulesElement({
    name: "Ghoststrike Oil (level 13)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1365",
    source: "Adventurer's Vault",
    categories: ["Ghoststrike Oil (level 13)", "ID_FMP_MAGIC_ITEM_1365"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Ghoststrike Oil (level 18)"] = new RulesElement({
    name: "Ghoststrike Oil (level 18)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1366",
    source: "Adventurer's Vault",
    categories: ["Ghoststrike Oil (level 18)", "ID_FMP_MAGIC_ITEM_1366"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Ghoststrike Oil (level 23)"] = new RulesElement({
    name: "Ghoststrike Oil (level 23)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1367",
    source: "Adventurer's Vault",
    categories: ["Ghoststrike Oil (level 23)", "ID_FMP_MAGIC_ITEM_1367"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Ghoststrike Oil (level 28)"] = new RulesElement({
    name: "Ghoststrike Oil (level 28)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1368",
    source: "Adventurer's Vault",
    categories: ["Ghoststrike Oil (level 28)", "ID_FMP_MAGIC_ITEM_1368"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Ghoststrike Oil (level 3)"] = new RulesElement({
    name: "Ghoststrike Oil (level 3)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1363",
    source: "Adventurer's Vault",
    categories: ["Ghoststrike Oil (level 3)", "ID_FMP_MAGIC_ITEM_1363"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Ghoststrike Oil (level 8)"] = new RulesElement({
    name: "Ghoststrike Oil (level 8)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1364",
    source: "Adventurer's Vault",
    categories: ["Ghoststrike Oil (level 8)", "ID_FMP_MAGIC_ITEM_1364"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Giant Gloves (paragon tier)"] = new RulesElement({
    name: "Giant Gloves (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3382",
    source: "Adventurer's Vault",
    categories: ["Giant Gloves (paragon tier)", "ID_FMP_MAGIC_ITEM_3382"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Giantdodger Armor +3"] = new RulesElement({
    name: "Giantdodger Armor +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1605",
    source: "Adventurer's Vault",
    categories: ["Giantdodger Armor +3", "ID_FMP_MAGIC_ITEM_1605"],
    rules: function(model) {
      model.statadd("Armor Class", 3, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 3);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Giantdodger Armor +4"] = new RulesElement({
    name: "Giantdodger Armor +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1606",
    source: "Adventurer's Vault",
    categories: ["Giantdodger Armor +4", "ID_FMP_MAGIC_ITEM_1606"],
    rules: function(model) {
      model.statadd("Armor Class", 4, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 4);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Giantdodger Armor +5"] = new RulesElement({
    name: "Giantdodger Armor +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1607",
    source: "Adventurer's Vault",
    categories: ["Giantdodger Armor +5", "ID_FMP_MAGIC_ITEM_1607"],
    rules: function(model) {
      model.statadd("Armor Class", 5, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 5);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Giantdodger Armor +6"] = new RulesElement({
    name: "Giantdodger Armor +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1608",
    source: "Adventurer's Vault",
    categories: ["Giantdodger Armor +6", "ID_FMP_MAGIC_ITEM_1608"],
    rules: function(model) {
      model.statadd("Armor Class", 6, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 6);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Girdle of the Dragon (epic tier)"] = new RulesElement({
    name: "Girdle of the Dragon (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3799",
    source: "Adventurer's Vault",
    categories: ["Girdle of the Dragon (epic tier)", "ID_FMP_MAGIC_ITEM_3799"],
    rules: function(model) {
      model.statadd("Fortitude Defense", 1);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Girdle of the Dragon (paragon tier)"] = new RulesElement({
    name: "Girdle of the Dragon (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3798",
    source: "Adventurer's Vault",
    categories: ["Girdle of the Dragon (paragon tier)", "ID_FMP_MAGIC_ITEM_3798"],
    rules: function(model) {
      model.statadd("Fortitude Defense", 1);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Girdle of the Oxen (heroic tier)"] = new RulesElement({
    name: "Girdle of the Oxen (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3800",
    source: "Adventurer's Vault",
    categories: ["Girdle of the Oxen (heroic tier)", "ID_FMP_MAGIC_ITEM_3800"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Girdle of the Umber Hulk (epic tier)"] = new RulesElement({
    name: "Girdle of the Umber Hulk (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3802",
    source: "Adventurer's Vault",
    categories: ["Girdle of the Umber Hulk (epic tier)", "ID_FMP_MAGIC_ITEM_3802"],
    rules: function(model) {
      model.statadd("Fortitude Defense", 1);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Girdle of the Umber Hulk (paragon tier)"] = new RulesElement({
    name: "Girdle of the Umber Hulk (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3801",
    source: "Adventurer's Vault",
    categories: ["Girdle of the Umber Hulk (paragon tier)", "ID_FMP_MAGIC_ITEM_3801"],
    rules: function(model) {
      model.statadd("Fortitude Defense", 1);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Glassteel Shard (epic tier)"] = new RulesElement({
    name: "Glassteel Shard (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_4073",
    source: "Adventurer's Vault",
    categories: ["Glassteel Shard (epic tier)", "ID_FMP_MAGIC_ITEM_4073"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Glassteel Shard (heroic tier)"] = new RulesElement({
    name: "Glassteel Shard (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_4071",
    source: "Adventurer's Vault",
    categories: ["Glassteel Shard (heroic tier)", "ID_FMP_MAGIC_ITEM_4071"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Glassteel Shard (paragon tier)"] = new RulesElement({
    name: "Glassteel Shard (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_4072",
    source: "Adventurer's Vault",
    categories: ["Glassteel Shard (paragon tier)", "ID_FMP_MAGIC_ITEM_4072"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Gloaming Shroud +1"] = new RulesElement({
    name: "Gloaming Shroud +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3653",
    source: "Adventurer's Vault",
    categories: ["Gloaming Shroud +1", "ID_FMP_MAGIC_ITEM_3653"],
    rules: function(model) {
      model.statadd("Stealth Misc", function() { /* in dim light or darkness */ return 1; }, "item");
      model.statadd("Fortitude Defense", 1, "Enhancement");
      model.statadd("Reflex Defense", 1, "Enhancement");
      model.statadd("Will Defense", 1, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Gloaming Shroud +2"] = new RulesElement({
    name: "Gloaming Shroud +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3654",
    source: "Adventurer's Vault",
    categories: ["Gloaming Shroud +2", "ID_FMP_MAGIC_ITEM_3654"],
    rules: function(model) {
      model.statadd("Stealth Misc", function() { /* in dim light or darkness */ return 2; }, "item");
      model.statadd("Fortitude Defense", 2, "Enhancement");
      model.statadd("Reflex Defense", 2, "Enhancement");
      model.statadd("Will Defense", 2, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Gloaming Shroud +3"] = new RulesElement({
    name: "Gloaming Shroud +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3655",
    source: "Adventurer's Vault",
    categories: ["Gloaming Shroud +3", "ID_FMP_MAGIC_ITEM_3655"],
    rules: function(model) {
      model.statadd("Stealth Misc", function() { /* in dim light or darkness */ return 3; }, "item");
      model.statadd("Fortitude Defense", 3, "Enhancement");
      model.statadd("Reflex Defense", 3, "Enhancement");
      model.statadd("Will Defense", 3, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Gloaming Shroud +4"] = new RulesElement({
    name: "Gloaming Shroud +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3656",
    source: "Adventurer's Vault",
    categories: ["Gloaming Shroud +4", "ID_FMP_MAGIC_ITEM_3656"],
    rules: function(model) {
      model.statadd("Stealth Misc", function() { /* in dim light or darkness */ return 4; }, "item");
      model.statadd("Fortitude Defense", 4, "Enhancement");
      model.statadd("Reflex Defense", 4, "Enhancement");
      model.statadd("Will Defense", 4, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Gloaming Shroud +5"] = new RulesElement({
    name: "Gloaming Shroud +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3657",
    source: "Adventurer's Vault",
    categories: ["Gloaming Shroud +5", "ID_FMP_MAGIC_ITEM_3657"],
    rules: function(model) {
      model.statadd("Stealth Misc", function() { /* in dim light or darkness */ return 5; }, "item");
      model.statadd("Fortitude Defense", 5, "Enhancement");
      model.statadd("Reflex Defense", 5, "Enhancement");
      model.statadd("Will Defense", 5, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Gloaming Shroud +6"] = new RulesElement({
    name: "Gloaming Shroud +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3658",
    source: "Adventurer's Vault",
    categories: ["Gloaming Shroud +6", "ID_FMP_MAGIC_ITEM_3658"],
    rules: function(model) {
      model.statadd("Stealth Misc", function() { /* in dim light or darkness */ return 6; }, "item");
      model.statadd("Fortitude Defense", 6, "Enhancement");
      model.statadd("Reflex Defense", 6, "Enhancement");
      model.statadd("Will Defense", 6, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Gloves of Accuracy (paragon tier)"] = new RulesElement({
    name: "Gloves of Accuracy (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3383",
    source: "Adventurer's Vault",
    categories: ["Gloves of Accuracy (paragon tier)", "ID_FMP_MAGIC_ITEM_3383"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Gloves of Agility (heroic tier)"] = new RulesElement({
    name: "Gloves of Agility (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3384",
    source: "Adventurer's Vault",
    categories: ["Gloves of Agility (heroic tier)", "ID_FMP_MAGIC_ITEM_3384"],
    rules: function(model) {
      model.statadd("Acrobatics Misc", 1, "item");
      model.statadd("Stealth Misc", 1, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Gloves of Camaraderie (epic tier)"] = new RulesElement({
    name: "Gloves of Camaraderie (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3385",
    source: "Adventurer's Vault",
    categories: ["Gloves of Camaraderie (epic tier)", "ID_FMP_MAGIC_ITEM_3385"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Gloves of Dimensional Repulsion (paragon tier)"] = new RulesElement({
    name: "Gloves of Dimensional Repulsion (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3386",
    source: "Adventurer's Vault",
    categories: ["Gloves of Dimensional Repulsion (paragon tier)", "ID_FMP_MAGIC_ITEM_3386"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Gloves of Eldritch Admixture (epic tier)"] = new RulesElement({
    name: "Gloves of Eldritch Admixture (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3389",
    source: "Adventurer's Vault",
    categories: ["Gloves of Eldritch Admixture (epic tier)", "ID_FMP_MAGIC_ITEM_3389"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Gloves of Eldritch Admixture (heroic tier)"] = new RulesElement({
    name: "Gloves of Eldritch Admixture (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3387",
    source: "Adventurer's Vault",
    categories: ["Gloves of Eldritch Admixture (heroic tier)", "ID_FMP_MAGIC_ITEM_3387"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Gloves of Eldritch Admixture (paragon tier)"] = new RulesElement({
    name: "Gloves of Eldritch Admixture (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3388",
    source: "Adventurer's Vault",
    categories: ["Gloves of Eldritch Admixture (paragon tier)", "ID_FMP_MAGIC_ITEM_3388"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Gloves of Missile Deflection (paragon tier)"] = new RulesElement({
    name: "Gloves of Missile Deflection (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3390",
    source: "Adventurer's Vault",
    categories: ["Gloves of Missile Deflection (paragon tier)", "ID_FMP_MAGIC_ITEM_3390"],
    rules: function(model) {
      model.statadd("AC", function() { /* against ranged weapon attacks */ return 1; }, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Gloves of Storing (heroic tier)"] = new RulesElement({
    name: "Gloves of Storing (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3391",
    source: "Adventurer's Vault",
    categories: ["Gloves of Storing (heroic tier)", "ID_FMP_MAGIC_ITEM_3391"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Gloves of the Bounty Hunter (heroic tier)"] = new RulesElement({
    name: "Gloves of the Bounty Hunter (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3392",
    source: "Adventurer's Vault",
    categories: ["Gloves of the Bounty Hunter (heroic tier)", "ID_FMP_MAGIC_ITEM_3392"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Gloves of the Healer (epic tier)"] = new RulesElement({
    name: "Gloves of the Healer (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3394",
    source: "Adventurer's Vault",
    categories: ["Gloves of the Healer (epic tier)", "ID_FMP_MAGIC_ITEM_3394"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Gloves of the Healer (paragon tier)"] = new RulesElement({
    name: "Gloves of the Healer (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3393",
    source: "Adventurer's Vault",
    categories: ["Gloves of the Healer (paragon tier)", "ID_FMP_MAGIC_ITEM_3393"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Gloves of Transference (paragon tier)"] = new RulesElement({
    name: "Gloves of Transference (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3395",
    source: "Adventurer's Vault",
    categories: ["Gloves of Transference (paragon tier)", "ID_FMP_MAGIC_ITEM_3395"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Glowstone (heroic tier)"] = new RulesElement({
    name: "Glowstone (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_4038",
    source: "Adventurer's Vault",
    categories: ["Glowstone (heroic tier)", "ID_FMP_MAGIC_ITEM_4038"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Goblin Stompers (heroic tier)"] = new RulesElement({
    name: "Goblin Stompers (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3338",
    source: "Adventurer's Vault",
    categories: ["Goblin Stompers (heroic tier)", "ID_FMP_MAGIC_ITEM_3338"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Goggles of Aura Sight (heroic tier)"] = new RulesElement({
    name: "Goggles of Aura Sight (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3463",
    source: "Adventurer's Vault",
    categories: ["Goggles of Aura Sight (heroic tier)", "ID_FMP_MAGIC_ITEM_3463"],
    rules: function(model) {
      model.statadd("Heal Misc", 2, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Goggles of the Bone Collector (heroic tier)"] = new RulesElement({
    name: "Goggles of the Bone Collector (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3464",
    source: "Adventurer's Vault",
    categories: ["Goggles of the Bone Collector (heroic tier)", "ID_FMP_MAGIC_ITEM_3464"],
    rules: function(model) {
      model.statadd("Arcana Misc", function() { /* to monster knowledge checks */ return 3; }, "item");
      model.statadd("Dungeoneering Misc", function() { /* to monster knowledge checks */ return 3; }, "item");
      model.statadd("Nature Misc", function() { /* to monster knowledge checks */ return 3; }, "item");
      model.statadd("Religion Misc", function() { /* to monster knowledge checks */ return 3; }, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Goggles of the Hawk (paragon tier)"] = new RulesElement({
    name: "Goggles of the Hawk (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3465",
    source: "Adventurer's Vault",
    categories: ["Goggles of the Hawk (paragon tier)", "ID_FMP_MAGIC_ITEM_3465"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Golden Lion (paragon tier)"] = new RulesElement({
    name: "Golden Lion (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3910",
    source: "Adventurer's Vault",
    categories: ["Golden Lion (paragon tier)", "ID_FMP_MAGIC_ITEM_3910"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Golden Spade (paragon tier)"] = new RulesElement({
    name: "Golden Spade (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3857",
    source: "Adventurer's Vault",
    categories: ["Golden Spade (paragon tier)", "ID_FMP_MAGIC_ITEM_3857"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Goliath's Belt (heroic tier)"] = new RulesElement({
    name: "Goliath's Belt (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3803",
    source: "Adventurer's Vault",
    categories: ["Goliath's Belt (heroic tier)", "ID_FMP_MAGIC_ITEM_3803"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Goodnight Tincture (level 11)"] = new RulesElement({
    name: "Goodnight Tincture (level 11)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1370",
    source: "Adventurer's Vault",
    categories: ["Goodnight Tincture (level 11)", "ID_FMP_MAGIC_ITEM_1370"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Goodnight Tincture (level 16)"] = new RulesElement({
    name: "Goodnight Tincture (level 16)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1371",
    source: "Adventurer's Vault",
    categories: ["Goodnight Tincture (level 16)", "ID_FMP_MAGIC_ITEM_1371"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Goodnight Tincture (level 21)"] = new RulesElement({
    name: "Goodnight Tincture (level 21)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1372",
    source: "Adventurer's Vault",
    categories: ["Goodnight Tincture (level 21)", "ID_FMP_MAGIC_ITEM_1372"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Goodnight Tincture (level 26)"] = new RulesElement({
    name: "Goodnight Tincture (level 26)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1373",
    source: "Adventurer's Vault",
    categories: ["Goodnight Tincture (level 26)", "ID_FMP_MAGIC_ITEM_1373"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Goodnight Tincture (level 6)"] = new RulesElement({
    name: "Goodnight Tincture (level 6)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1369",
    source: "Adventurer's Vault",
    categories: ["Goodnight Tincture (level 6)", "ID_FMP_MAGIC_ITEM_1369"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Gorget of Reciprocity +6"] = new RulesElement({
    name: "Gorget of Reciprocity +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3659",
    source: "Adventurer's Vault",
    categories: ["Gorget of Reciprocity +6", "ID_FMP_MAGIC_ITEM_3659"],
    rules: function(model) {
      model.statadd("Fortitude Defense", 6, "Enhancement");
      model.statadd("Reflex Defense", 6, "Enhancement");
      model.statadd("Will Defense", 6, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Graceful Weapon +2"] = new RulesElement({
    name: "Graceful Weapon +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2121",
    source: "Adventurer's Vault",
    categories: ["Graceful Weapon +2", "ID_FMP_MAGIC_ITEM_2121"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Graceful Weapon +3"] = new RulesElement({
    name: "Graceful Weapon +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2122",
    source: "Adventurer's Vault",
    categories: ["Graceful Weapon +3", "ID_FMP_MAGIC_ITEM_2122"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Graceful Weapon +4"] = new RulesElement({
    name: "Graceful Weapon +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2123",
    source: "Adventurer's Vault",
    categories: ["Graceful Weapon +4", "ID_FMP_MAGIC_ITEM_2123"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Graceful Weapon +5"] = new RulesElement({
    name: "Graceful Weapon +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2124",
    source: "Adventurer's Vault",
    categories: ["Graceful Weapon +5", "ID_FMP_MAGIC_ITEM_2124"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Graceful Weapon +6"] = new RulesElement({
    name: "Graceful Weapon +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2125",
    source: "Adventurer's Vault",
    categories: ["Graceful Weapon +6", "ID_FMP_MAGIC_ITEM_2125"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Grasping Weapon +2"] = new RulesElement({
    name: "Grasping Weapon +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2126",
    source: "Adventurer's Vault",
    categories: ["Grasping Weapon +2", "ID_FMP_MAGIC_ITEM_2126"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Grasping Weapon +3"] = new RulesElement({
    name: "Grasping Weapon +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2127",
    source: "Adventurer's Vault",
    categories: ["Grasping Weapon +3", "ID_FMP_MAGIC_ITEM_2127"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Grasping Weapon +4"] = new RulesElement({
    name: "Grasping Weapon +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2128",
    source: "Adventurer's Vault",
    categories: ["Grasping Weapon +4", "ID_FMP_MAGIC_ITEM_2128"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Grasping Weapon +5"] = new RulesElement({
    name: "Grasping Weapon +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2129",
    source: "Adventurer's Vault",
    categories: ["Grasping Weapon +5", "ID_FMP_MAGIC_ITEM_2129"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Grasping Weapon +6"] = new RulesElement({
    name: "Grasping Weapon +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2130",
    source: "Adventurer's Vault",
    categories: ["Grasping Weapon +6", "ID_FMP_MAGIC_ITEM_2130"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Gravespawn Potion (heroic tier)"] = new RulesElement({
    name: "Gravespawn Potion (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3923",
    source: "Adventurer's Vault",
    categories: ["Gravespawn Potion (heroic tier)", "ID_FMP_MAGIC_ITEM_3923"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Greatreach Gauntlets (paragon tier)"] = new RulesElement({
    name: "Greatreach Gauntlets (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3396",
    source: "Adventurer's Vault",
    categories: ["Greatreach Gauntlets (paragon tier)", "ID_FMP_MAGIC_ITEM_3396"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Green Thumbs (heroic tier)"] = new RulesElement({
    name: "Green Thumbs (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3397",
    source: "Adventurer's Vault",
    categories: ["Green Thumbs (heroic tier)", "ID_FMP_MAGIC_ITEM_3397"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Grimlock Helm (paragon tier)"] = new RulesElement({
    name: "Grimlock Helm (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3466",
    source: "Adventurer's Vault",
    categories: ["Grimlock Helm (paragon tier)", "ID_FMP_MAGIC_ITEM_3466"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Guardian's Collar (heroic tier)"] = new RulesElement({
    name: "Guardian's Collar (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3963",
    source: "Adventurer's Vault",
    categories: ["Guardian's Collar (heroic tier)", "ID_FMP_MAGIC_ITEM_3963"],
    rules: function(model) {
      model.statadd("BEAST.Perception misc", 3, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Harmonious Harp (heroic tier)"] = new RulesElement({
    name: "Harmonious Harp (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3858",
    source: "Adventurer's Vault",
    categories: ["Harmonious Harp (heroic tier)", "ID_FMP_MAGIC_ITEM_3858"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Hat of Disguise (heroic tier)"] = new RulesElement({
    name: "Hat of Disguise (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3467",
    source: "Adventurer's Vault",
    categories: ["Hat of Disguise (heroic tier)", "ID_FMP_MAGIC_ITEM_3467"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Headband of Insight (paragon tier)"] = new RulesElement({
    name: "Headband of Insight (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3468",
    source: "Adventurer's Vault",
    categories: ["Headband of Insight (paragon tier)", "ID_FMP_MAGIC_ITEM_3468"],
    rules: function(model) {
      model.statadd("Insight Misc", 4, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Headband of Intellect (epic tier)"] = new RulesElement({
    name: "Headband of Intellect (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3471",
    source: "Adventurer's Vault",
    categories: ["Headband of Intellect (epic tier)", "ID_FMP_MAGIC_ITEM_3471"],
    rules: function(model) {
      model.statadd("Arcana Misc", function() { /* to knowledge or monster knowledge checks */ return 6; }, "item");
      model.statadd("Dungeoneering Misc", function() { /* to knowledge or monster knowledge checks */ return 6; }, "item");
      model.statadd("Nature Misc", function() { /* to knowledge or monster knowledge checks */ return 6; }, "item");
      model.statadd("Religion Misc", function() { /* to knowledge or monster knowledge checks */ return 6; }, "item");
      model.statadd("psychic:attack", 1, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Headband of Intellect (heroic tier)"] = new RulesElement({
    name: "Headband of Intellect (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3469",
    source: "Adventurer's Vault",
    categories: ["Headband of Intellect (heroic tier)", "ID_FMP_MAGIC_ITEM_3469"],
    rules: function(model) {
      model.statadd("Arcana Misc", function() { /* to knowledge or monster knowledge checks */ return 2; }, "item");
      model.statadd("Dungeoneering Misc", function() { /* to knowledge or monster knowledge checks */ return 2; }, "item");
      model.statadd("Nature Misc", function() { /* to knowledge or monster knowledge checks */ return 2; }, "item");
      model.statadd("Religion Misc", function() { /* to knowledge or monster knowledge checks */ return 2; }, "item");
      model.statadd("psychic:attack", 1, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Headband of Intellect (paragon tier)"] = new RulesElement({
    name: "Headband of Intellect (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3470",
    source: "Adventurer's Vault",
    categories: ["Headband of Intellect (paragon tier)", "ID_FMP_MAGIC_ITEM_3470"],
    rules: function(model) {
      model.statadd("Arcana Misc", function() { /* to knowledge or monster knowledge checks */ return 4; }, "item");
      model.statadd("Dungeoneering Misc", function() { /* to knowledge or monster knowledge checks */ return 4; }, "item");
      model.statadd("Nature Misc", function() { /* to knowledge or monster knowledge checks */ return 4; }, "item");
      model.statadd("Religion Misc", function() { /* to knowledge or monster knowledge checks */ return 4; }, "item");
      model.statadd("psychic:attack", 1, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Headband of Perception (epic tier)"] = new RulesElement({
    name: "Headband of Perception (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3474",
    source: "Adventurer's Vault",
    categories: ["Headband of Perception (epic tier)", "ID_FMP_MAGIC_ITEM_3474"],
    rules: function(model) {
      model.statadd("Perception Misc", 5, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Headband of Perception (heroic tier)"] = new RulesElement({
    name: "Headband of Perception (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3472",
    source: "Adventurer's Vault",
    categories: ["Headband of Perception (heroic tier)", "ID_FMP_MAGIC_ITEM_3472"],
    rules: function(model) {
      model.statadd("Perception Misc", 1, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Headband of Perception (paragon tier)"] = new RulesElement({
    name: "Headband of Perception (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3473",
    source: "Adventurer's Vault",
    categories: ["Headband of Perception (paragon tier)", "ID_FMP_MAGIC_ITEM_3473"],
    rules: function(model) {
      model.statadd("Perception Misc", 3, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Headband of Psychic Attack (paragon tier)"] = new RulesElement({
    name: "Headband of Psychic Attack (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3475",
    source: "Adventurer's Vault",
    categories: ["Headband of Psychic Attack (paragon tier)", "ID_FMP_MAGIC_ITEM_3475"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Healer's Brooch +1"] = new RulesElement({
    name: "Healer's Brooch +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3660",
    source: "Adventurer's Vault",
    categories: ["Healer's Brooch +1", "ID_FMP_MAGIC_ITEM_3660"],
    rules: function(model) {
      model.statadd("Healing", 1);
      model.statadd("Fortitude Defense", 1, "Enhancement");
      model.statadd("Reflex Defense", 1, "Enhancement");
      model.statadd("Will Defense", 1, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Healer's Brooch +2"] = new RulesElement({
    name: "Healer's Brooch +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3661",
    source: "Adventurer's Vault",
    categories: ["Healer's Brooch +2", "ID_FMP_MAGIC_ITEM_3661"],
    rules: function(model) {
      model.statadd("Healing", 2);
      model.statadd("Fortitude Defense", 2, "Enhancement");
      model.statadd("Reflex Defense", 2, "Enhancement");
      model.statadd("Will Defense", 2, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Healer's Brooch +3"] = new RulesElement({
    name: "Healer's Brooch +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3662",
    source: "Adventurer's Vault",
    categories: ["Healer's Brooch +3", "ID_FMP_MAGIC_ITEM_3662"],
    rules: function(model) {
      model.statadd("Healing", 3);
      model.statadd("Fortitude Defense", 3, "Enhancement");
      model.statadd("Reflex Defense", 3, "Enhancement");
      model.statadd("Will Defense", 3, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Healer's Brooch +4"] = new RulesElement({
    name: "Healer's Brooch +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3663",
    source: "Adventurer's Vault",
    categories: ["Healer's Brooch +4", "ID_FMP_MAGIC_ITEM_3663"],
    rules: function(model) {
      model.statadd("Healing", 4);
      model.statadd("Fortitude Defense", 4, "Enhancement");
      model.statadd("Reflex Defense", 4, "Enhancement");
      model.statadd("Will Defense", 4, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Healer's Brooch +5"] = new RulesElement({
    name: "Healer's Brooch +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3664",
    source: "Adventurer's Vault",
    categories: ["Healer's Brooch +5", "ID_FMP_MAGIC_ITEM_3664"],
    rules: function(model) {
      model.statadd("Healing", 5);
      model.statadd("Fortitude Defense", 5, "Enhancement");
      model.statadd("Reflex Defense", 5, "Enhancement");
      model.statadd("Will Defense", 5, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Healer's Brooch +6"] = new RulesElement({
    name: "Healer's Brooch +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3665",
    source: "Adventurer's Vault",
    categories: ["Healer's Brooch +6", "ID_FMP_MAGIC_ITEM_3665"],
    rules: function(model) {
      model.statadd("Healing", 6);
      model.statadd("Fortitude Defense", 6, "Enhancement");
      model.statadd("Reflex Defense", 6, "Enhancement");
      model.statadd("Will Defense", 6, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Healer's Sash (epic tier)"] = new RulesElement({
    name: "Healer's Sash (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3805",
    source: "Adventurer's Vault",
    categories: ["Healer's Sash (epic tier)", "ID_FMP_MAGIC_ITEM_3805"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Healer's Sash (paragon tier)"] = new RulesElement({
    name: "Healer's Sash (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3804",
    source: "Adventurer's Vault",
    categories: ["Healer's Sash (paragon tier)", "ID_FMP_MAGIC_ITEM_3804"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Healer's Shield (epic tier)"] = new RulesElement({
    name: "Healer's Shield (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3232",
    source: "Adventurer's Vault",
    categories: ["Healer's Shield (epic tier)", "ID_FMP_MAGIC_ITEM_3232"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Healer's Shield (heroic tier)"] = new RulesElement({
    name: "Healer's Shield (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3230",
    source: "Adventurer's Vault",
    categories: ["Healer's Shield (heroic tier)", "ID_FMP_MAGIC_ITEM_3230"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Healer's Shield (paragon tier)"] = new RulesElement({
    name: "Healer's Shield (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3231",
    source: "Adventurer's Vault",
    categories: ["Healer's Shield (paragon tier)", "ID_FMP_MAGIC_ITEM_3231"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Healing Weapon +3"] = new RulesElement({
    name: "Healing Weapon +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2131",
    source: "Adventurer's Vault",
    categories: ["Healing Weapon +3", "ID_FMP_MAGIC_ITEM_2131"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Healing Weapon +4"] = new RulesElement({
    name: "Healing Weapon +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2132",
    source: "Adventurer's Vault",
    categories: ["Healing Weapon +4", "ID_FMP_MAGIC_ITEM_2132"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Healing Weapon +5"] = new RulesElement({
    name: "Healing Weapon +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2133",
    source: "Adventurer's Vault",
    categories: ["Healing Weapon +5", "ID_FMP_MAGIC_ITEM_2133"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Healing Weapon +6"] = new RulesElement({
    name: "Healing Weapon +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2134",
    source: "Adventurer's Vault",
    categories: ["Healing Weapon +6", "ID_FMP_MAGIC_ITEM_2134"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Heartening Armor +1"] = new RulesElement({
    name: "Heartening Armor +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1609",
    source: "Adventurer's Vault",
    categories: ["Heartening Armor +1", "ID_FMP_MAGIC_ITEM_1609"],
    rules: function(model) {
      model.statadd("Saving Throws", function() { /* against fear effects */ return 1; });
      model.statadd("Armor Class", 1, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 1);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Heartening Armor +2"] = new RulesElement({
    name: "Heartening Armor +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1610",
    source: "Adventurer's Vault",
    categories: ["Heartening Armor +2", "ID_FMP_MAGIC_ITEM_1610"],
    rules: function(model) {
      model.statadd("Saving Throws", function() { /* against fear effects */ return 2; });
      model.statadd("Armor Class", 2, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 2);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Heartening Armor +3"] = new RulesElement({
    name: "Heartening Armor +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1611",
    source: "Adventurer's Vault",
    categories: ["Heartening Armor +3", "ID_FMP_MAGIC_ITEM_1611"],
    rules: function(model) {
      model.statadd("Saving Throws", function() { /* against fear effects */ return 3; });
      model.statadd("Armor Class", 3, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 3);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Heartening Armor +4"] = new RulesElement({
    name: "Heartening Armor +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1612",
    source: "Adventurer's Vault",
    categories: ["Heartening Armor +4", "ID_FMP_MAGIC_ITEM_1612"],
    rules: function(model) {
      model.statadd("Saving Throws", function() { /* against fear effects */ return 4; });
      model.statadd("Armor Class", 4, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 4);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Heartening Armor +5"] = new RulesElement({
    name: "Heartening Armor +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1613",
    source: "Adventurer's Vault",
    categories: ["Heartening Armor +5", "ID_FMP_MAGIC_ITEM_1613"],
    rules: function(model) {
      model.statadd("Saving Throws", function() { /* against fear effects */ return 5; });
      model.statadd("Armor Class", 5, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 5);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Heartening Armor +6"] = new RulesElement({
    name: "Heartening Armor +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1614",
    source: "Adventurer's Vault",
    categories: ["Heartening Armor +6", "ID_FMP_MAGIC_ITEM_1614"],
    rules: function(model) {
      model.statadd("Saving Throws", function() { /* against fear effects */ return 6; });
      model.statadd("Armor Class", 6, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 6);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Hedge Wizard's Gloves (heroic tier)"] = new RulesElement({
    name: "Hedge Wizard's Gloves (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3398",
    source: "Adventurer's Vault",
    categories: ["Hedge Wizard's Gloves (heroic tier)", "ID_FMP_MAGIC_ITEM_3398"],
    rules: function(model) {
      model.grant(elements.id["ID_FMP_POWER_1227"]);
      // unsupported rule: cbimporter.Rules.ModifyRule
      model.grant(elements.id["ID_FMP_POWER_1930"]);
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Hellfire Wand +1"] = new RulesElement({
    name: "Hellfire Wand +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3051",
    source: "Adventurer's Vault",
    categories: ["Hellfire Wand +1", "ID_FMP_MAGIC_ITEM_3051"],
    rules: function(model) {
      model.statadd("fire:damage", 1, "item");
      model.grant(elements.id["ID_FMP_POWER_1458"]);
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Hellfire Wand +2"] = new RulesElement({
    name: "Hellfire Wand +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3052",
    source: "Adventurer's Vault",
    categories: ["Hellfire Wand +2", "ID_FMP_MAGIC_ITEM_3052"],
    rules: function(model) {
      model.statadd("fire:damage", 1, "item");
      model.grant(elements.id["ID_FMP_POWER_1458"]);
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Hellfire Wand +3"] = new RulesElement({
    name: "Hellfire Wand +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3053",
    source: "Adventurer's Vault",
    categories: ["Hellfire Wand +3", "ID_FMP_MAGIC_ITEM_3053"],
    rules: function(model) {
      model.statadd("fire:damage", 2, "item");
      model.grant(elements.id["ID_FMP_POWER_1458"]);
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Hellfire Wand +4"] = new RulesElement({
    name: "Hellfire Wand +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3054",
    source: "Adventurer's Vault",
    categories: ["Hellfire Wand +4", "ID_FMP_MAGIC_ITEM_3054"],
    rules: function(model) {
      model.statadd("fire:damage", 2, "item");
      model.grant(elements.id["ID_FMP_POWER_1458"]);
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Hellfire Wand +5"] = new RulesElement({
    name: "Hellfire Wand +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3055",
    source: "Adventurer's Vault",
    categories: ["Hellfire Wand +5", "ID_FMP_MAGIC_ITEM_3055"],
    rules: function(model) {
      model.statadd("fire:damage", 3, "item");
      model.grant(elements.id["ID_FMP_POWER_1458"]);
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Hellfire Wand +6"] = new RulesElement({
    name: "Hellfire Wand +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3056",
    source: "Adventurer's Vault",
    categories: ["Hellfire Wand +6", "ID_FMP_MAGIC_ITEM_3056"],
    rules: function(model) {
      model.statadd("fire:damage", 3, "item");
      model.grant(elements.id["ID_FMP_POWER_1458"]);
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Hellrod +4"] = new RulesElement({
    name: "Hellrod +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2796",
    source: "Adventurer's Vault",
    categories: ["Hellrod +4", "ID_FMP_MAGIC_ITEM_2796"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Hellrod +5"] = new RulesElement({
    name: "Hellrod +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2797",
    source: "Adventurer's Vault",
    categories: ["Hellrod +5", "ID_FMP_MAGIC_ITEM_2797"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Hellrod +6"] = new RulesElement({
    name: "Hellrod +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2798",
    source: "Adventurer's Vault",
    categories: ["Hellrod +6", "ID_FMP_MAGIC_ITEM_2798"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Helm of Hidden Horrors (paragon tier)"] = new RulesElement({
    name: "Helm of Hidden Horrors (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3476",
    source: "Adventurer's Vault",
    categories: ["Helm of Hidden Horrors (paragon tier)", "ID_FMP_MAGIC_ITEM_3476"],
    rules: function(model) {
      model.statadd("Will Defense", 1);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Helm of Opportunity (epic tier)"] = new RulesElement({
    name: "Helm of Opportunity (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3479",
    source: "Adventurer's Vault",
    categories: ["Helm of Opportunity (epic tier)", "ID_FMP_MAGIC_ITEM_3479"],
    rules: function(model) {
      model.statadd("attack rolls", function() { /* with opportunity attacks */ return 3; }, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Helm of Opportunity (heroic tier)"] = new RulesElement({
    name: "Helm of Opportunity (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3477",
    source: "Adventurer's Vault",
    categories: ["Helm of Opportunity (heroic tier)", "ID_FMP_MAGIC_ITEM_3477"],
    rules: function(model) {
      model.statadd("attack rolls", function() { /* with opportunity attacks */ return 1; }, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Helm of Opportunity (paragon tier)"] = new RulesElement({
    name: "Helm of Opportunity (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3478",
    source: "Adventurer's Vault",
    categories: ["Helm of Opportunity (paragon tier)", "ID_FMP_MAGIC_ITEM_3478"],
    rules: function(model) {
      model.statadd("attack rolls", function() { /* with opportunity attacks */ return 2; }, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Helm of Swift Punishment (paragon tier)"] = new RulesElement({
    name: "Helm of Swift Punishment (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3480",
    source: "Adventurer's Vault",
    categories: ["Helm of Swift Punishment (paragon tier)", "ID_FMP_MAGIC_ITEM_3480"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Helm of the Flamewarped (heroic tier)"] = new RulesElement({
    name: "Helm of the Flamewarped (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3481",
    source: "Adventurer's Vault",
    categories: ["Helm of the Flamewarped (heroic tier)", "ID_FMP_MAGIC_ITEM_3481"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Helm of the Stubborn Mind (heroic tier)"] = new RulesElement({
    name: "Helm of the Stubborn Mind (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3482",
    source: "Adventurer's Vault",
    categories: ["Helm of the Stubborn Mind (heroic tier)", "ID_FMP_MAGIC_ITEM_3482"],
    rules: function(model) {
      model.statadd("Will Defense", function() { /* against charm attacks */ return 1; }, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Helm of Vigilant Awareness (heroic tier)"] = new RulesElement({
    name: "Helm of Vigilant Awareness (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3483",
    source: "Adventurer's Vault",
    categories: ["Helm of Vigilant Awareness (heroic tier)", "ID_FMP_MAGIC_ITEM_3483"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Herbal Poultice (level 13)"] = new RulesElement({
    name: "Herbal Poultice (level 13)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1376",
    source: "Adventurer's Vault",
    categories: ["Herbal Poultice (level 13)", "ID_FMP_MAGIC_ITEM_1376"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Herbal Poultice (level 18)"] = new RulesElement({
    name: "Herbal Poultice (level 18)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1377",
    source: "Adventurer's Vault",
    categories: ["Herbal Poultice (level 18)", "ID_FMP_MAGIC_ITEM_1377"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Herbal Poultice (level 23)"] = new RulesElement({
    name: "Herbal Poultice (level 23)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1378",
    source: "Adventurer's Vault",
    categories: ["Herbal Poultice (level 23)", "ID_FMP_MAGIC_ITEM_1378"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Herbal Poultice (level 28)"] = new RulesElement({
    name: "Herbal Poultice (level 28)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1379",
    source: "Adventurer's Vault",
    categories: ["Herbal Poultice (level 28)", "ID_FMP_MAGIC_ITEM_1379"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Herbal Poultice (level 3)"] = new RulesElement({
    name: "Herbal Poultice (level 3)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1374",
    source: "Adventurer's Vault",
    categories: ["Herbal Poultice (level 3)", "ID_FMP_MAGIC_ITEM_1374"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Herbal Poultice (level 8)"] = new RulesElement({
    name: "Herbal Poultice (level 8)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1375",
    source: "Adventurer's Vault",
    categories: ["Herbal Poultice (level 8)", "ID_FMP_MAGIC_ITEM_1375"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Holy Gauntlets (epic tier)"] = new RulesElement({
    name: "Holy Gauntlets (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3401",
    source: "Adventurer's Vault",
    categories: ["Holy Gauntlets (epic tier)", "ID_FMP_MAGIC_ITEM_3401"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Holy Gauntlets (heroic tier)"] = new RulesElement({
    name: "Holy Gauntlets (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3399",
    source: "Adventurer's Vault",
    categories: ["Holy Gauntlets (heroic tier)", "ID_FMP_MAGIC_ITEM_3399"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Holy Gauntlets (paragon tier)"] = new RulesElement({
    name: "Holy Gauntlets (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3400",
    source: "Adventurer's Vault",
    categories: ["Holy Gauntlets (paragon tier)", "ID_FMP_MAGIC_ITEM_3400"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Holy Healer's Weapon +1"] = new RulesElement({
    name: "Holy Healer's Weapon +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2135",
    source: "Adventurer's Vault",
    categories: ["Holy Healer's Weapon +1", "ID_FMP_MAGIC_ITEM_2135"],
    rules: function(model) {
      model.statadd("Healing Word:healing", 1);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Holy Healer's Weapon +2"] = new RulesElement({
    name: "Holy Healer's Weapon +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2136",
    source: "Adventurer's Vault",
    categories: ["Holy Healer's Weapon +2", "ID_FMP_MAGIC_ITEM_2136"],
    rules: function(model) {
      model.statadd("Healing Word:healing", 2);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Holy Healer's Weapon +3"] = new RulesElement({
    name: "Holy Healer's Weapon +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2137",
    source: "Adventurer's Vault",
    categories: ["Holy Healer's Weapon +3", "ID_FMP_MAGIC_ITEM_2137"],
    rules: function(model) {
      model.statadd("Healing Word:healing", 3);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Holy Healer's Weapon +4"] = new RulesElement({
    name: "Holy Healer's Weapon +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2138",
    source: "Adventurer's Vault",
    categories: ["Holy Healer's Weapon +4", "ID_FMP_MAGIC_ITEM_2138"],
    rules: function(model) {
      model.statadd("Healing Word:healing", 4);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Holy Healer's Weapon +5"] = new RulesElement({
    name: "Holy Healer's Weapon +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2139",
    source: "Adventurer's Vault",
    categories: ["Holy Healer's Weapon +5", "ID_FMP_MAGIC_ITEM_2139"],
    rules: function(model) {
      model.statadd("Healing Word:healing", 5);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Holy Healer's Weapon +6"] = new RulesElement({
    name: "Holy Healer's Weapon +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2140",
    source: "Adventurer's Vault",
    categories: ["Holy Healer's Weapon +6", "ID_FMP_MAGIC_ITEM_2140"],
    rules: function(model) {
      model.statadd("Healing Word:healing", 6);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Horn of Blasting (paragon tier)"] = new RulesElement({
    name: "Horn of Blasting (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3859",
    source: "Adventurer's Vault",
    categories: ["Horn of Blasting (paragon tier)", "ID_FMP_MAGIC_ITEM_3859"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Horn of Summons (heroic tier)"] = new RulesElement({
    name: "Horn of Summons (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3860",
    source: "Adventurer's Vault",
    categories: ["Horn of Summons (heroic tier)", "ID_FMP_MAGIC_ITEM_3860"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Horn of Undead Enmity (paragon tier)"] = new RulesElement({
    name: "Horn of Undead Enmity (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_9002",
    source: "Adventurer's Vault",
    categories: ["Horn of Undead Enmity (paragon tier)", "ID_FMP_MAGIC_ITEM_9002"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Horseshoes of Speed (heroic tier)"] = new RulesElement({
    name: "Horseshoes of Speed (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3974",
    source: "Adventurer's Vault",
    categories: ["Horseshoes of Speed (heroic tier)", "ID_FMP_MAGIC_ITEM_3974"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Hunter's Flint (heroic tier)"] = new RulesElement({
    name: "Hunter's Flint (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3862",
    source: "Adventurer's Vault",
    categories: ["Hunter's Flint (heroic tier)", "ID_FMP_MAGIC_ITEM_3862"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Hunter's Headband (heroic tier)"] = new RulesElement({
    name: "Hunter's Headband (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3484",
    source: "Adventurer's Vault",
    categories: ["Hunter's Headband (heroic tier)", "ID_FMP_MAGIC_ITEM_3484"],
    rules: function(model) {
      model.statadd("Dungeoneering", function() { /* when foraging */ return 5; }, "item");
      model.statadd("Nature", function() { /* when foraging */ return 5; }, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Hypnotic Shield (paragon tier)"] = new RulesElement({
    name: "Hypnotic Shield (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3233",
    source: "Adventurer's Vault",
    categories: ["Hypnotic Shield (paragon tier)", "ID_FMP_MAGIC_ITEM_3233"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Illithid Robes +3"] = new RulesElement({
    name: "Illithid Robes +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1615",
    source: "Adventurer's Vault",
    categories: ["Illithid Robes +3", "ID_FMP_MAGIC_ITEM_1615"],
    rules: function(model) {
      model.statadd("resist:psychic", 10, "resist");
      model.statadd("Armor Class", 3, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 3);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Illithid Robes +4"] = new RulesElement({
    name: "Illithid Robes +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1616",
    source: "Adventurer's Vault",
    categories: ["Illithid Robes +4", "ID_FMP_MAGIC_ITEM_1616"],
    rules: function(model) {
      model.statadd("resist:psychic", 10, "resist");
      model.statadd("Armor Class", 4, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 4);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Illithid Robes +5"] = new RulesElement({
    name: "Illithid Robes +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1617",
    source: "Adventurer's Vault",
    categories: ["Illithid Robes +5", "ID_FMP_MAGIC_ITEM_1617"],
    rules: function(model) {
      model.statadd("resist:psychic", 15, "resist");
      model.statadd("Armor Class", 5, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 5);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Illithid Robes +6"] = new RulesElement({
    name: "Illithid Robes +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1618",
    source: "Adventurer's Vault",
    categories: ["Illithid Robes +6", "ID_FMP_MAGIC_ITEM_1618"],
    rules: function(model) {
      model.statadd("resist:psychic", 15, "resist");
      model.statadd("Armor Class", 6, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 6);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Immovable Shaft (paragon tier)"] = new RulesElement({
    name: "Immovable Shaft (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3863",
    source: "Adventurer's Vault",
    categories: ["Immovable Shaft (paragon tier)", "ID_FMP_MAGIC_ITEM_3863"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Immunizing Armor +1"] = new RulesElement({
    name: "Immunizing Armor +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1619",
    source: "Adventurer's Vault",
    categories: ["Immunizing Armor +1", "ID_FMP_MAGIC_ITEM_1619"],
    rules: function(model) {
      model.statadd("Armor Class", 1, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 1);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Immunizing Armor +2"] = new RulesElement({
    name: "Immunizing Armor +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1620",
    source: "Adventurer's Vault",
    categories: ["Immunizing Armor +2", "ID_FMP_MAGIC_ITEM_1620"],
    rules: function(model) {
      model.statadd("Armor Class", 2, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 2);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Immunizing Armor +3"] = new RulesElement({
    name: "Immunizing Armor +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1621",
    source: "Adventurer's Vault",
    categories: ["Immunizing Armor +3", "ID_FMP_MAGIC_ITEM_1621"],
    rules: function(model) {
      model.statadd("Armor Class", 3, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 3);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Immunizing Armor +4"] = new RulesElement({
    name: "Immunizing Armor +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1622",
    source: "Adventurer's Vault",
    categories: ["Immunizing Armor +4", "ID_FMP_MAGIC_ITEM_1622"],
    rules: function(model) {
      model.statadd("Armor Class", 4, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 4);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Immunizing Armor +5"] = new RulesElement({
    name: "Immunizing Armor +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1623",
    source: "Adventurer's Vault",
    categories: ["Immunizing Armor +5", "ID_FMP_MAGIC_ITEM_1623"],
    rules: function(model) {
      model.statadd("Armor Class", 5, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 5);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Immunizing Armor +6"] = new RulesElement({
    name: "Immunizing Armor +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1624",
    source: "Adventurer's Vault",
    categories: ["Immunizing Armor +6", "ID_FMP_MAGIC_ITEM_1624"],
    rules: function(model) {
      model.statadd("Armor Class", 6, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 6);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Impaling Weapon +4"] = new RulesElement({
    name: "Impaling Weapon +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2141",
    source: "Adventurer's Vault",
    categories: ["Impaling Weapon +4", "ID_FMP_MAGIC_ITEM_2141"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Impaling Weapon +5"] = new RulesElement({
    name: "Impaling Weapon +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2142",
    source: "Adventurer's Vault",
    categories: ["Impaling Weapon +5", "ID_FMP_MAGIC_ITEM_2142"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Impaling Weapon +6"] = new RulesElement({
    name: "Impaling Weapon +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2143",
    source: "Adventurer's Vault",
    categories: ["Impaling Weapon +6", "ID_FMP_MAGIC_ITEM_2143"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Impenetrable Barding (epic tier)"] = new RulesElement({
    name: "Impenetrable Barding (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3977",
    source: "Adventurer's Vault",
    categories: ["Impenetrable Barding (epic tier)", "ID_FMP_MAGIC_ITEM_3977"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Impenetrable Barding (heroic tier)"] = new RulesElement({
    name: "Impenetrable Barding (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3975",
    source: "Adventurer's Vault",
    categories: ["Impenetrable Barding (heroic tier)", "ID_FMP_MAGIC_ITEM_3975"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Impenetrable Barding (paragon tier)"] = new RulesElement({
    name: "Impenetrable Barding (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3976",
    source: "Adventurer's Vault",
    categories: ["Impenetrable Barding (paragon tier)", "ID_FMP_MAGIC_ITEM_3976"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Imposter's Armor +2"] = new RulesElement({
    name: "Imposter's Armor +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1625",
    source: "Adventurer's Vault",
    categories: ["Imposter's Armor +2", "ID_FMP_MAGIC_ITEM_1625"],
    rules: function(model) {
      model.statadd("Armor Class", 2, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 2);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Imposter's Armor +3"] = new RulesElement({
    name: "Imposter's Armor +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1626",
    source: "Adventurer's Vault",
    categories: ["Imposter's Armor +3", "ID_FMP_MAGIC_ITEM_1626"],
    rules: function(model) {
      model.statadd("Armor Class", 3, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 3);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Imposter's Armor +4"] = new RulesElement({
    name: "Imposter's Armor +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1627",
    source: "Adventurer's Vault",
    categories: ["Imposter's Armor +4", "ID_FMP_MAGIC_ITEM_1627"],
    rules: function(model) {
      model.statadd("Armor Class", 4, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 4);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Imposter's Armor +5"] = new RulesElement({
    name: "Imposter's Armor +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1628",
    source: "Adventurer's Vault",
    categories: ["Imposter's Armor +5", "ID_FMP_MAGIC_ITEM_1628"],
    rules: function(model) {
      model.statadd("Armor Class", 5, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 5);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Imposter's Armor +6"] = new RulesElement({
    name: "Imposter's Armor +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1629",
    source: "Adventurer's Vault",
    categories: ["Imposter's Armor +6", "ID_FMP_MAGIC_ITEM_1629"],
    rules: function(model) {
      model.statadd("Armor Class", 6, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 6);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Inescapable Weapon +1"] = new RulesElement({
    name: "Inescapable Weapon +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2144",
    source: "Adventurer's Vault",
    categories: ["Inescapable Weapon +1", "ID_FMP_MAGIC_ITEM_2144"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Inescapable Weapon +2"] = new RulesElement({
    name: "Inescapable Weapon +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2145",
    source: "Adventurer's Vault",
    categories: ["Inescapable Weapon +2", "ID_FMP_MAGIC_ITEM_2145"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Inescapable Weapon +3"] = new RulesElement({
    name: "Inescapable Weapon +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2146",
    source: "Adventurer's Vault",
    categories: ["Inescapable Weapon +3", "ID_FMP_MAGIC_ITEM_2146"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Inescapable Weapon +4"] = new RulesElement({
    name: "Inescapable Weapon +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2147",
    source: "Adventurer's Vault",
    categories: ["Inescapable Weapon +4", "ID_FMP_MAGIC_ITEM_2147"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Inescapable Weapon +5"] = new RulesElement({
    name: "Inescapable Weapon +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2148",
    source: "Adventurer's Vault",
    categories: ["Inescapable Weapon +5", "ID_FMP_MAGIC_ITEM_2148"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Inescapable Weapon +6"] = new RulesElement({
    name: "Inescapable Weapon +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2149",
    source: "Adventurer's Vault",
    categories: ["Inescapable Weapon +6", "ID_FMP_MAGIC_ITEM_2149"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Inquisitor's Helm (paragon tier)"] = new RulesElement({
    name: "Inquisitor's Helm (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3485",
    source: "Adventurer's Vault",
    categories: ["Inquisitor's Helm (paragon tier)", "ID_FMP_MAGIC_ITEM_3485"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Inspiring Weapon +1"] = new RulesElement({
    name: "Inspiring Weapon +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2150",
    source: "Adventurer's Vault",
    categories: ["Inspiring Weapon +1", "ID_FMP_MAGIC_ITEM_2150"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Inspiring Weapon +2"] = new RulesElement({
    name: "Inspiring Weapon +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2151",
    source: "Adventurer's Vault",
    categories: ["Inspiring Weapon +2", "ID_FMP_MAGIC_ITEM_2151"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Inspiring Weapon +3"] = new RulesElement({
    name: "Inspiring Weapon +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2152",
    source: "Adventurer's Vault",
    categories: ["Inspiring Weapon +3", "ID_FMP_MAGIC_ITEM_2152"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Inspiring Weapon +4"] = new RulesElement({
    name: "Inspiring Weapon +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2153",
    source: "Adventurer's Vault",
    categories: ["Inspiring Weapon +4", "ID_FMP_MAGIC_ITEM_2153"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Inspiring Weapon +5"] = new RulesElement({
    name: "Inspiring Weapon +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2154",
    source: "Adventurer's Vault",
    categories: ["Inspiring Weapon +5", "ID_FMP_MAGIC_ITEM_2154"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Inspiring Weapon +6"] = new RulesElement({
    name: "Inspiring Weapon +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2155",
    source: "Adventurer's Vault",
    categories: ["Inspiring Weapon +6", "ID_FMP_MAGIC_ITEM_2155"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Instant Campsite (heroic tier)"] = new RulesElement({
    name: "Instant Campsite (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3864",
    source: "Adventurer's Vault",
    categories: ["Instant Campsite (heroic tier)", "ID_FMP_MAGIC_ITEM_3864"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Invulnerable Case (paragon tier)"] = new RulesElement({
    name: "Invulnerable Case (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3865",
    source: "Adventurer's Vault",
    categories: ["Invulnerable Case (paragon tier)", "ID_FMP_MAGIC_ITEM_3865"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Ioun Stone of Perfect Language (epic tier)"] = new RulesElement({
    name: "Ioun Stone of Perfect Language (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3486",
    source: "Adventurer's Vault",
    categories: ["Ioun Stone of Perfect Language (epic tier)", "ID_FMP_MAGIC_ITEM_3486"],
    rules: function(model) {
      model.statadd("Bluff Misc", 5, "item");
      model.statadd("Diplomacy Misc", 5, "item");
      model.statadd("Intimidate Misc", 5, "item");
      model.statadd("Streetwise Misc", 5, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Ioun Stone of Regeneration (epic tier)"] = new RulesElement({
    name: "Ioun Stone of Regeneration (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3487",
    source: "Adventurer's Vault",
    categories: ["Ioun Stone of Regeneration (epic tier)", "ID_FMP_MAGIC_ITEM_3487"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Ioun Stone of Steadfastness (epic tier)"] = new RulesElement({
    name: "Ioun Stone of Steadfastness (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3488",
    source: "Adventurer's Vault",
    categories: ["Ioun Stone of Steadfastness (epic tier)", "ID_FMP_MAGIC_ITEM_3488"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Ioun Stone of Sustenance (epic tier)"] = new RulesElement({
    name: "Ioun Stone of Sustenance (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3489",
    source: "Adventurer's Vault",
    categories: ["Ioun Stone of Sustenance (epic tier)", "ID_FMP_MAGIC_ITEM_3489"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Iron Armbands of Power (epic tier)"] = new RulesElement({
    name: "Iron Armbands of Power (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3236",
    source: "Adventurer's Vault",
    categories: ["Iron Armbands of Power (epic tier)", "ID_FMP_MAGIC_ITEM_3236"],
    rules: function(model) {
      model.statadd("melee:damage", 6, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Iron Armbands of Power (heroic tier)"] = new RulesElement({
    name: "Iron Armbands of Power (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3234",
    source: "Adventurer's Vault",
    categories: ["Iron Armbands of Power (heroic tier)", "ID_FMP_MAGIC_ITEM_3234"],
    rules: function(model) {
      model.statadd("melee:damage", 2, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Iron Armbands of Power (paragon tier)"] = new RulesElement({
    name: "Iron Armbands of Power (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3235",
    source: "Adventurer's Vault",
    categories: ["Iron Armbands of Power (paragon tier)", "ID_FMP_MAGIC_ITEM_3235"],
    rules: function(model) {
      model.statadd("melee:damage", 4, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Irrefutable Armor +2"] = new RulesElement({
    name: "Irrefutable Armor +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1630",
    source: "Adventurer's Vault",
    categories: ["Irrefutable Armor +2", "ID_FMP_MAGIC_ITEM_1630"],
    rules: function(model) {
      model.statadd("Armor Class", 2, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 2);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Irrefutable Armor +3"] = new RulesElement({
    name: "Irrefutable Armor +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1631",
    source: "Adventurer's Vault",
    categories: ["Irrefutable Armor +3", "ID_FMP_MAGIC_ITEM_1631"],
    rules: function(model) {
      model.statadd("Armor Class", 3, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 3);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Irrefutable Armor +4"] = new RulesElement({
    name: "Irrefutable Armor +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1632",
    source: "Adventurer's Vault",
    categories: ["Irrefutable Armor +4", "ID_FMP_MAGIC_ITEM_1632"],
    rules: function(model) {
      model.statadd("Armor Class", 4, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 4);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Irrefutable Armor +5"] = new RulesElement({
    name: "Irrefutable Armor +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1633",
    source: "Adventurer's Vault",
    categories: ["Irrefutable Armor +5", "ID_FMP_MAGIC_ITEM_1633"],
    rules: function(model) {
      model.statadd("Armor Class", 5, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 5);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Irrefutable Armor +6"] = new RulesElement({
    name: "Irrefutable Armor +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1634",
    source: "Adventurer's Vault",
    categories: ["Irrefutable Armor +6", "ID_FMP_MAGIC_ITEM_1634"],
    rules: function(model) {
      model.statadd("Armor Class", 6, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 6);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Ivory Goat of Travail (paragon tier)"] = new RulesElement({
    name: "Ivory Goat of Travail (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3911",
    source: "Adventurer's Vault",
    categories: ["Ivory Goat of Travail (paragon tier)", "ID_FMP_MAGIC_ITEM_3911"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Jade Macetail (heroic tier)"] = new RulesElement({
    name: "Jade Macetail (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3912",
    source: "Adventurer's Vault",
    categories: ["Jade Macetail (heroic tier)", "ID_FMP_MAGIC_ITEM_3912"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Jagged Weapon +3"] = new RulesElement({
    name: "Jagged Weapon +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2156",
    source: "Adventurer's Vault",
    categories: ["Jagged Weapon +3", "ID_FMP_MAGIC_ITEM_2156"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Jagged Weapon +4"] = new RulesElement({
    name: "Jagged Weapon +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2157",
    source: "Adventurer's Vault",
    categories: ["Jagged Weapon +4", "ID_FMP_MAGIC_ITEM_2157"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Jagged Weapon +5"] = new RulesElement({
    name: "Jagged Weapon +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2158",
    source: "Adventurer's Vault",
    categories: ["Jagged Weapon +5", "ID_FMP_MAGIC_ITEM_2158"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Jagged Weapon +6"] = new RulesElement({
    name: "Jagged Weapon +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2159",
    source: "Adventurer's Vault",
    categories: ["Jagged Weapon +6", "ID_FMP_MAGIC_ITEM_2159"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Jar of Steam (heroic tier)"] = new RulesElement({
    name: "Jar of Steam (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3866",
    source: "Adventurer's Vault",
    categories: ["Jar of Steam (heroic tier)", "ID_FMP_MAGIC_ITEM_3866"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Jarring Weapon +4"] = new RulesElement({
    name: "Jarring Weapon +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2160",
    source: "Adventurer's Vault",
    categories: ["Jarring Weapon +4", "ID_FMP_MAGIC_ITEM_2160"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Jarring Weapon +5"] = new RulesElement({
    name: "Jarring Weapon +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2161",
    source: "Adventurer's Vault",
    categories: ["Jarring Weapon +5", "ID_FMP_MAGIC_ITEM_2161"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Jarring Weapon +6"] = new RulesElement({
    name: "Jarring Weapon +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2162",
    source: "Adventurer's Vault",
    categories: ["Jarring Weapon +6", "ID_FMP_MAGIC_ITEM_2162"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Jester Shoes (heroic tier)"] = new RulesElement({
    name: "Jester Shoes (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3339",
    source: "Adventurer's Vault",
    categories: ["Jester Shoes (heroic tier)", "ID_FMP_MAGIC_ITEM_3339"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Jolt Flask (level 10)"] = new RulesElement({
    name: "Jolt Flask (level 10)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1380",
    source: "Adventurer's Vault",
    categories: ["Jolt Flask (level 10)", "ID_FMP_MAGIC_ITEM_1380"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Jolt Flask (level 15)"] = new RulesElement({
    name: "Jolt Flask (level 15)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1381",
    source: "Adventurer's Vault",
    categories: ["Jolt Flask (level 15)", "ID_FMP_MAGIC_ITEM_1381"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Jolt Flask (level 20)"] = new RulesElement({
    name: "Jolt Flask (level 20)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1382",
    source: "Adventurer's Vault",
    categories: ["Jolt Flask (level 20)", "ID_FMP_MAGIC_ITEM_1382"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Jolt Flask (level 25)"] = new RulesElement({
    name: "Jolt Flask (level 25)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1383",
    source: "Adventurer's Vault",
    categories: ["Jolt Flask (level 25)", "ID_FMP_MAGIC_ITEM_1383"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Jolt Flask (level 30)"] = new RulesElement({
    name: "Jolt Flask (level 30)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1384",
    source: "Adventurer's Vault",
    categories: ["Jolt Flask (level 30)", "ID_FMP_MAGIC_ITEM_1384"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Jousting Shield (epic tier)"] = new RulesElement({
    name: "Jousting Shield (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3239",
    source: "Adventurer's Vault",
    categories: ["Jousting Shield (epic tier)", "ID_FMP_MAGIC_ITEM_3239"],
    rules: function(model) {
      model.statadd("Jousting Shield (epic tier)", 15, "Jousting Shield (epic tier)");
      model.statadd("Resist:against opportunity attacks you provoke from charging", function() { return model.stat("Jousting Shield (epic tier)"); }, "resist");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Jousting Shield (heroic tier)"] = new RulesElement({
    name: "Jousting Shield (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3237",
    source: "Adventurer's Vault",
    categories: ["Jousting Shield (heroic tier)", "ID_FMP_MAGIC_ITEM_3237"],
    rules: function(model) {
      model.statadd("Jousting Shield (heroic tier)", 5, "Jousting Shield (heroic tier)");
      model.statadd("Resist:against opportunity attacks you provoke from charging", function() { return model.stat("Jousting Shield (heroic tier)"); }, "resist");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Jousting Shield (paragon tier)"] = new RulesElement({
    name: "Jousting Shield (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3238",
    source: "Adventurer's Vault",
    categories: ["Jousting Shield (paragon tier)", "ID_FMP_MAGIC_ITEM_3238"],
    rules: function(model) {
      model.statadd("Jousting Shield (paragon tier)", 10, "Jousting Shield (paragon tier)");
      model.statadd("Resist:against opportunity attacks you provoke from charging", function() { return model.stat("Jousting Shield (paragon tier)"); }, "resist");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Knifethrower's Gloves (heroic tier)"] = new RulesElement({
    name: "Knifethrower's Gloves (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3402",
    source: "Adventurer's Vault",
    categories: ["Knifethrower's Gloves (heroic tier)", "ID_FMP_MAGIC_ITEM_3402"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Kruthik Potion (heroic tier)"] = new RulesElement({
    name: "Kruthik Potion (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3924",
    source: "Adventurer's Vault",
    categories: ["Kruthik Potion (heroic tier)", "ID_FMP_MAGIC_ITEM_3924"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Lamp of Discerning (heroic tier)"] = new RulesElement({
    name: "Lamp of Discerning (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3867",
    source: "Adventurer's Vault",
    categories: ["Lamp of Discerning (heroic tier)", "ID_FMP_MAGIC_ITEM_3867"],
    rules: function(model) {
      model.statadd("Insight Misc", 1, "Power");
      model.statadd("Perception Misc", 1, "Power");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Lancing Gloves (heroic tier)"] = new RulesElement({
    name: "Lancing Gloves (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3403",
    source: "Adventurer's Vault",
    categories: ["Lancing Gloves (heroic tier)", "ID_FMP_MAGIC_ITEM_3403"],
    rules: function(model) {
      model.statadd("melee:damage", function() { /* while mounted */ return 2; });
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Lantern of Revelation (paragon tier)"] = new RulesElement({
    name: "Lantern of Revelation (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3868",
    source: "Adventurer's Vault",
    categories: ["Lantern of Revelation (paragon tier)", "ID_FMP_MAGIC_ITEM_3868"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Laughing Death Armor +2"] = new RulesElement({
    name: "Laughing Death Armor +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1635",
    source: "Adventurer's Vault",
    categories: ["Laughing Death Armor +2", "ID_FMP_MAGIC_ITEM_1635"],
    rules: function(model) {
      model.statadd("resist:necrotic", 5, "resist");
      model.statadd("Armor Class", 2, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 2);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Laughing Death Armor +3"] = new RulesElement({
    name: "Laughing Death Armor +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1636",
    source: "Adventurer's Vault",
    categories: ["Laughing Death Armor +3", "ID_FMP_MAGIC_ITEM_1636"],
    rules: function(model) {
      model.statadd("resist:necrotic", 10, "resist");
      model.statadd("Armor Class", 3, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 3);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Laughing Death Armor +4"] = new RulesElement({
    name: "Laughing Death Armor +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1637",
    source: "Adventurer's Vault",
    categories: ["Laughing Death Armor +4", "ID_FMP_MAGIC_ITEM_1637"],
    rules: function(model) {
      model.statadd("resist:necrotic", 10, "resist");
      model.statadd("Armor Class", 4, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 4);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Laughing Death Armor +5"] = new RulesElement({
    name: "Laughing Death Armor +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1638",
    source: "Adventurer's Vault",
    categories: ["Laughing Death Armor +5", "ID_FMP_MAGIC_ITEM_1638"],
    rules: function(model) {
      model.statadd("resist:necrotic", 15, "resist");
      model.statadd("Armor Class", 5, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 5);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Laughing Death Armor +6"] = new RulesElement({
    name: "Laughing Death Armor +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1639",
    source: "Adventurer's Vault",
    categories: ["Laughing Death Armor +6", "ID_FMP_MAGIC_ITEM_1639"],
    rules: function(model) {
      model.statadd("resist:necrotic", 15, "resist");
      model.statadd("Armor Class", 6, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 6);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Laurel Circlet (epic tier)"] = new RulesElement({
    name: "Laurel Circlet (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3492",
    source: "Adventurer's Vault",
    categories: ["Laurel Circlet (epic tier)", "ID_FMP_MAGIC_ITEM_3492"],
    rules: function(model) {
      model.statadd("Diplomacy Misc", 6, "item");
      model.statadd("Insight Misc", 6, "item");
      model.statadd("charm:attack", 1, "item");
      model.statadd("illusion:attack", 1, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Laurel Circlet (heroic tier)"] = new RulesElement({
    name: "Laurel Circlet (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3490",
    source: "Adventurer's Vault",
    categories: ["Laurel Circlet (heroic tier)", "ID_FMP_MAGIC_ITEM_3490"],
    rules: function(model) {
      model.statadd("Diplomacy Misc", 2, "item");
      model.statadd("Insight Misc", 2, "item");
      model.statadd("charm:attack", 1, "item");
      model.statadd("illusion:attack", 1, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Laurel Circlet (paragon tier)"] = new RulesElement({
    name: "Laurel Circlet (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3491",
    source: "Adventurer's Vault",
    categories: ["Laurel Circlet (paragon tier)", "ID_FMP_MAGIC_ITEM_3491"],
    rules: function(model) {
      model.statadd("Diplomacy Misc", 4, "item");
      model.statadd("Insight Misc", 4, "item");
      model.statadd("charm:attack", 1, "item");
      model.statadd("illusion:attack", 1, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Legendary Weapon +5"] = new RulesElement({
    name: "Legendary Weapon +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2163",
    source: "Adventurer's Vault",
    categories: ["Legendary Weapon +5", "ID_FMP_MAGIC_ITEM_2163"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Legendary Weapon +6"] = new RulesElement({
    name: "Legendary Weapon +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2164",
    source: "Adventurer's Vault",
    categories: ["Legendary Weapon +6", "ID_FMP_MAGIC_ITEM_2164"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Lens of Descernment (heroic tier)"] = new RulesElement({
    name: "Lens of Descernment (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3869",
    source: "Adventurer's Vault",
    categories: ["Lens of Descernment (heroic tier)", "ID_FMP_MAGIC_ITEM_3869"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Lens of Reading (heroic tier)"] = new RulesElement({
    name: "Lens of Reading (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3870",
    source: "Adventurer's Vault",
    categories: ["Lens of Reading (heroic tier)", "ID_FMP_MAGIC_ITEM_3870"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Liar's Trinket +3"] = new RulesElement({
    name: "Liar's Trinket +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3666",
    source: "Adventurer's Vault",
    categories: ["Liar's Trinket +3", "ID_FMP_MAGIC_ITEM_3666"],
    rules: function(model) {
      model.statadd("Bluff Misc", 3, "item");
      model.statadd("Fortitude Defense", 3, "Enhancement");
      model.statadd("Reflex Defense", 3, "Enhancement");
      model.statadd("Will Defense", 3, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Liar's Trinket +4"] = new RulesElement({
    name: "Liar's Trinket +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3667",
    source: "Adventurer's Vault",
    categories: ["Liar's Trinket +4", "ID_FMP_MAGIC_ITEM_3667"],
    rules: function(model) {
      model.statadd("Bluff Misc", 4, "item");
      model.statadd("Fortitude Defense", 4, "Enhancement");
      model.statadd("Reflex Defense", 4, "Enhancement");
      model.statadd("Will Defense", 4, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Liar's Trinket +5"] = new RulesElement({
    name: "Liar's Trinket +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3668",
    source: "Adventurer's Vault",
    categories: ["Liar's Trinket +5", "ID_FMP_MAGIC_ITEM_3668"],
    rules: function(model) {
      model.statadd("Bluff Misc", 5, "item");
      model.statadd("Fortitude Defense", 5, "Enhancement");
      model.statadd("Reflex Defense", 5, "Enhancement");
      model.statadd("Will Defense", 5, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Liar's Trinket +6"] = new RulesElement({
    name: "Liar's Trinket +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3669",
    source: "Adventurer's Vault",
    categories: ["Liar's Trinket +6", "ID_FMP_MAGIC_ITEM_3669"],
    rules: function(model) {
      model.statadd("Bluff Misc", 6, "item");
      model.statadd("Fortitude Defense", 6, "Enhancement");
      model.statadd("Reflex Defense", 6, "Enhancement");
      model.statadd("Will Defense", 6, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Life Charm +5"] = new RulesElement({
    name: "Life Charm +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3670",
    source: "Adventurer's Vault",
    categories: ["Life Charm +5", "ID_FMP_MAGIC_ITEM_3670"],
    rules: function(model) {
      model.statadd("Fortitude Defense", 5, "Enhancement");
      model.statadd("Reflex Defense", 5, "Enhancement");
      model.statadd("Will Defense", 5, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Life Charm +6"] = new RulesElement({
    name: "Life Charm +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3671",
    source: "Adventurer's Vault",
    categories: ["Life Charm +6", "ID_FMP_MAGIC_ITEM_3671"],
    rules: function(model) {
      model.statadd("Fortitude Defense", 6, "Enhancement");
      model.statadd("Reflex Defense", 6, "Enhancement");
      model.statadd("Will Defense", 6, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Life Shroud (heroic tier)"] = new RulesElement({
    name: "Life Shroud (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_4039",
    source: "Adventurer's Vault",
    categories: ["Life Shroud (heroic tier)", "ID_FMP_MAGIC_ITEM_4039"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Lifegiving Armor +1"] = new RulesElement({
    name: "Lifegiving Armor +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1640",
    source: "Adventurer's Vault",
    categories: ["Lifegiving Armor +1", "ID_FMP_MAGIC_ITEM_1640"],
    rules: function(model) {
      model.statadd("resist:necrotic", 5, "resist");
      model.statadd("Armor Class", 1, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 1);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Lifegiving Armor +2"] = new RulesElement({
    name: "Lifegiving Armor +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1641",
    source: "Adventurer's Vault",
    categories: ["Lifegiving Armor +2", "ID_FMP_MAGIC_ITEM_1641"],
    rules: function(model) {
      model.statadd("resist:necrotic", 5, "resist");
      model.statadd("Armor Class", 2, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 2);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Lifegiving Armor +3"] = new RulesElement({
    name: "Lifegiving Armor +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1642",
    source: "Adventurer's Vault",
    categories: ["Lifegiving Armor +3", "ID_FMP_MAGIC_ITEM_1642"],
    rules: function(model) {
      model.statadd("resist:necrotic", 10, "resist");
      model.statadd("Armor Class", 3, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 3);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Lifegiving Armor +4"] = new RulesElement({
    name: "Lifegiving Armor +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1643",
    source: "Adventurer's Vault",
    categories: ["Lifegiving Armor +4", "ID_FMP_MAGIC_ITEM_1643"],
    rules: function(model) {
      model.statadd("resist:necrotic", 10, "resist");
      model.statadd("Armor Class", 4, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 4);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Lifegiving Armor +5"] = new RulesElement({
    name: "Lifegiving Armor +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1644",
    source: "Adventurer's Vault",
    categories: ["Lifegiving Armor +5", "ID_FMP_MAGIC_ITEM_1644"],
    rules: function(model) {
      model.statadd("resist:necrotic", 15, "resist");
      model.statadd("Armor Class", 5, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 5);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Lifegiving Armor +6"] = new RulesElement({
    name: "Lifegiving Armor +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1645",
    source: "Adventurer's Vault",
    categories: ["Lifegiving Armor +6", "ID_FMP_MAGIC_ITEM_1645"],
    rules: function(model) {
      model.statadd("resist:necrotic", 15, "resist");
      model.statadd("Armor Class", 6, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 6);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Lifesapper Rod +2"] = new RulesElement({
    name: "Lifesapper Rod +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2799",
    source: "Adventurer's Vault",
    categories: ["Lifesapper Rod +2", "ID_FMP_MAGIC_ITEM_2799"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Lifesapper Rod +3"] = new RulesElement({
    name: "Lifesapper Rod +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2800",
    source: "Adventurer's Vault",
    categories: ["Lifesapper Rod +3", "ID_FMP_MAGIC_ITEM_2800"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Lifesapper Rod +4"] = new RulesElement({
    name: "Lifesapper Rod +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2801",
    source: "Adventurer's Vault",
    categories: ["Lifesapper Rod +4", "ID_FMP_MAGIC_ITEM_2801"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Lifesapper Rod +5"] = new RulesElement({
    name: "Lifesapper Rod +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2802",
    source: "Adventurer's Vault",
    categories: ["Lifesapper Rod +5", "ID_FMP_MAGIC_ITEM_2802"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Lifesapper Rod +6"] = new RulesElement({
    name: "Lifesapper Rod +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2803",
    source: "Adventurer's Vault",
    categories: ["Lifesapper Rod +6", "ID_FMP_MAGIC_ITEM_2803"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Lightning Reflex Gloves (paragon tier)"] = new RulesElement({
    name: "Lightning Reflex Gloves (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3404",
    source: "Adventurer's Vault",
    categories: ["Lightning Reflex Gloves (paragon tier)", "ID_FMP_MAGIC_ITEM_3404"],
    rules: function(model) {
      model.statadd("attack rolls", function() { /* to opportunity attacks */ return 2; }, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Lightstep Slippers (epic tier)"] = new RulesElement({
    name: "Lightstep Slippers (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3340",
    source: "Adventurer's Vault",
    categories: ["Lightstep Slippers (epic tier)", "ID_FMP_MAGIC_ITEM_3340"],
    rules: function(model) {
      model.statadd("Stealth Misc", 5, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Loamweave Armor +2"] = new RulesElement({
    name: "Loamweave Armor +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1646",
    source: "Adventurer's Vault",
    categories: ["Loamweave Armor +2", "ID_FMP_MAGIC_ITEM_1646"],
    rules: function(model) {
      model.statadd("Armor Class", 2, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 2);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Loamweave Armor +3"] = new RulesElement({
    name: "Loamweave Armor +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1647",
    source: "Adventurer's Vault",
    categories: ["Loamweave Armor +3", "ID_FMP_MAGIC_ITEM_1647"],
    rules: function(model) {
      model.statadd("Armor Class", 3, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 3);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Loamweave Armor +4"] = new RulesElement({
    name: "Loamweave Armor +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1648",
    source: "Adventurer's Vault",
    categories: ["Loamweave Armor +4", "ID_FMP_MAGIC_ITEM_1648"],
    rules: function(model) {
      model.statadd("Armor Class", 4, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 4);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Loamweave Armor +5"] = new RulesElement({
    name: "Loamweave Armor +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1649",
    source: "Adventurer's Vault",
    categories: ["Loamweave Armor +5", "ID_FMP_MAGIC_ITEM_1649"],
    rules: function(model) {
      model.statadd("Armor Class", 5, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 5);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Loamweave Armor +6"] = new RulesElement({
    name: "Loamweave Armor +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1650",
    source: "Adventurer's Vault",
    categories: ["Loamweave Armor +6", "ID_FMP_MAGIC_ITEM_1650"],
    rules: function(model) {
      model.statadd("Armor Class", 6, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 6);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Lockburst Chalk (level 14)"] = new RulesElement({
    name: "Lockburst Chalk (level 14)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1387",
    source: "Adventurer's Vault",
    categories: ["Lockburst Chalk (level 14)", "ID_FMP_MAGIC_ITEM_1387"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Lockburst Chalk (level 19)"] = new RulesElement({
    name: "Lockburst Chalk (level 19)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1388",
    source: "Adventurer's Vault",
    categories: ["Lockburst Chalk (level 19)", "ID_FMP_MAGIC_ITEM_1388"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Lockburst Chalk (level 24)"] = new RulesElement({
    name: "Lockburst Chalk (level 24)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1389",
    source: "Adventurer's Vault",
    categories: ["Lockburst Chalk (level 24)", "ID_FMP_MAGIC_ITEM_1389"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Lockburst Chalk (level 29)"] = new RulesElement({
    name: "Lockburst Chalk (level 29)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1390",
    source: "Adventurer's Vault",
    categories: ["Lockburst Chalk (level 29)", "ID_FMP_MAGIC_ITEM_1390"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Lockburst Chalk (level 4)"] = new RulesElement({
    name: "Lockburst Chalk (level 4)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1385",
    source: "Adventurer's Vault",
    categories: ["Lockburst Chalk (level 4)", "ID_FMP_MAGIC_ITEM_1385"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Lockburst Chalk (level 9)"] = new RulesElement({
    name: "Lockburst Chalk (level 9)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1386",
    source: "Adventurer's Vault",
    categories: ["Lockburst Chalk (level 9)", "ID_FMP_MAGIC_ITEM_1386"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Longshot Gloves (epic tier)"] = new RulesElement({
    name: "Longshot Gloves (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3406",
    source: "Adventurer's Vault",
    categories: ["Longshot Gloves (epic tier)", "ID_FMP_MAGIC_ITEM_3406"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Longshot Gloves (paragon tier)"] = new RulesElement({
    name: "Longshot Gloves (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3405",
    source: "Adventurer's Vault",
    categories: ["Longshot Gloves (paragon tier)", "ID_FMP_MAGIC_ITEM_3405"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Luckbender Gloves (heroic tier)"] = new RulesElement({
    name: "Luckbender Gloves (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3407",
    source: "Adventurer's Vault",
    categories: ["Luckbender Gloves (heroic tier)", "ID_FMP_MAGIC_ITEM_3407"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Luckbender Gloves (paragon tier)"] = new RulesElement({
    name: "Luckbender Gloves (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3408",
    source: "Adventurer's Vault",
    categories: ["Luckbender Gloves (paragon tier)", "ID_FMP_MAGIC_ITEM_3408"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Luckblade +1"] = new RulesElement({
    name: "Luckblade +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2165",
    source: "Adventurer's Vault",
    categories: ["Luckblade +1", "ID_FMP_MAGIC_ITEM_2165"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Luckblade +2"] = new RulesElement({
    name: "Luckblade +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2166",
    source: "Adventurer's Vault",
    categories: ["Luckblade +2", "ID_FMP_MAGIC_ITEM_2166"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Luckblade +3"] = new RulesElement({
    name: "Luckblade +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2167",
    source: "Adventurer's Vault",
    categories: ["Luckblade +3", "ID_FMP_MAGIC_ITEM_2167"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Luckblade +4"] = new RulesElement({
    name: "Luckblade +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2168",
    source: "Adventurer's Vault",
    categories: ["Luckblade +4", "ID_FMP_MAGIC_ITEM_2168"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Luckblade +5"] = new RulesElement({
    name: "Luckblade +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2169",
    source: "Adventurer's Vault",
    categories: ["Luckblade +5", "ID_FMP_MAGIC_ITEM_2169"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Luckblade +6"] = new RulesElement({
    name: "Luckblade +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2170",
    source: "Adventurer's Vault",
    categories: ["Luckblade +6", "ID_FMP_MAGIC_ITEM_2170"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Lucklender +4"] = new RulesElement({
    name: "Lucklender +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2171",
    source: "Adventurer's Vault",
    categories: ["Lucklender +4", "ID_FMP_MAGIC_ITEM_2171"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Lucklender +5"] = new RulesElement({
    name: "Lucklender +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2172",
    source: "Adventurer's Vault",
    categories: ["Lucklender +5", "ID_FMP_MAGIC_ITEM_2172"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Lucklender +6"] = new RulesElement({
    name: "Lucklender +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2173",
    source: "Adventurer's Vault",
    categories: ["Lucklender +6", "ID_FMP_MAGIC_ITEM_2173"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Lullaby Weapon +1"] = new RulesElement({
    name: "Lullaby Weapon +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2174",
    source: "Adventurer's Vault",
    categories: ["Lullaby Weapon +1", "ID_FMP_MAGIC_ITEM_2174"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Lullaby Weapon +2"] = new RulesElement({
    name: "Lullaby Weapon +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2175",
    source: "Adventurer's Vault",
    categories: ["Lullaby Weapon +2", "ID_FMP_MAGIC_ITEM_2175"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Lullaby Weapon +3"] = new RulesElement({
    name: "Lullaby Weapon +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2176",
    source: "Adventurer's Vault",
    categories: ["Lullaby Weapon +3", "ID_FMP_MAGIC_ITEM_2176"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Lullaby Weapon +4"] = new RulesElement({
    name: "Lullaby Weapon +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2177",
    source: "Adventurer's Vault",
    categories: ["Lullaby Weapon +4", "ID_FMP_MAGIC_ITEM_2177"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Lullaby Weapon +5"] = new RulesElement({
    name: "Lullaby Weapon +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2178",
    source: "Adventurer's Vault",
    categories: ["Lullaby Weapon +5", "ID_FMP_MAGIC_ITEM_2178"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Lullaby Weapon +6"] = new RulesElement({
    name: "Lullaby Weapon +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2179",
    source: "Adventurer's Vault",
    categories: ["Lullaby Weapon +6", "ID_FMP_MAGIC_ITEM_2179"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Luminary Ring (epic tier)"] = new RulesElement({
    name: "Luminary Ring (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3732",
    source: "Adventurer's Vault",
    categories: ["Luminary Ring (epic tier)", "ID_FMP_MAGIC_ITEM_3732"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Mage's Weapon +1"] = new RulesElement({
    name: "Mage's Weapon +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2185",
    source: "Adventurer's Vault",
    categories: ["Mage's Weapon +1", "ID_FMP_MAGIC_ITEM_2185"],
    rules: function(model) {
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Mage's Weapon +2"] = new RulesElement({
    name: "Mage's Weapon +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2186",
    source: "Adventurer's Vault",
    categories: ["Mage's Weapon +2", "ID_FMP_MAGIC_ITEM_2186"],
    rules: function(model) {
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Mage's Weapon +3"] = new RulesElement({
    name: "Mage's Weapon +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2187",
    source: "Adventurer's Vault",
    categories: ["Mage's Weapon +3", "ID_FMP_MAGIC_ITEM_2187"],
    rules: function(model) {
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Mage's Weapon +4"] = new RulesElement({
    name: "Mage's Weapon +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2188",
    source: "Adventurer's Vault",
    categories: ["Mage's Weapon +4", "ID_FMP_MAGIC_ITEM_2188"],
    rules: function(model) {
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Mage's Weapon +5"] = new RulesElement({
    name: "Mage's Weapon +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2189",
    source: "Adventurer's Vault",
    categories: ["Mage's Weapon +5", "ID_FMP_MAGIC_ITEM_2189"],
    rules: function(model) {
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Mage's Weapon +6"] = new RulesElement({
    name: "Mage's Weapon +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2190",
    source: "Adventurer's Vault",
    categories: ["Mage's Weapon +6", "ID_FMP_MAGIC_ITEM_2190"],
    rules: function(model) {
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Magician's Ring (paragon tier)"] = new RulesElement({
    name: "Magician's Ring (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3733",
    source: "Adventurer's Vault",
    categories: ["Magician's Ring (paragon tier)", "ID_FMP_MAGIC_ITEM_3733"],
    rules: function(model) {
      model.grant(elements.id["ID_FMP_POWER_1217"]);
      // unsupported rule: cbimporter.Rules.ModifyRule
      model.grant(elements.id["ID_FMP_POWER_1930"]);
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Manticore Shield (epic tier)"] = new RulesElement({
    name: "Manticore Shield (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3242",
    source: "Adventurer's Vault",
    categories: ["Manticore Shield (epic tier)", "ID_FMP_MAGIC_ITEM_3242"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Manticore Shield (heroic tier)"] = new RulesElement({
    name: "Manticore Shield (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3240",
    source: "Adventurer's Vault",
    categories: ["Manticore Shield (heroic tier)", "ID_FMP_MAGIC_ITEM_3240"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Manticore Shield (paragon tier)"] = new RulesElement({
    name: "Manticore Shield (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3241",
    source: "Adventurer's Vault",
    categories: ["Manticore Shield (paragon tier)", "ID_FMP_MAGIC_ITEM_3241"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Map of Orienteering (heroic tier)"] = new RulesElement({
    name: "Map of Orienteering (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3871",
    source: "Adventurer's Vault",
    categories: ["Map of Orienteering (heroic tier)", "ID_FMP_MAGIC_ITEM_3871"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Marble Elephant (heroic tier)"] = new RulesElement({
    name: "Marble Elephant (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3913",
    source: "Adventurer's Vault",
    categories: ["Marble Elephant (heroic tier)", "ID_FMP_MAGIC_ITEM_3913"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Martyr's Armor +1"] = new RulesElement({
    name: "Martyr's Armor +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1651",
    source: "Adventurer's Vault",
    categories: ["Martyr's Armor +1", "ID_FMP_MAGIC_ITEM_1651"],
    rules: function(model) {
      model.statadd("Armor Class", 1, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 1);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Martyr's Armor +2"] = new RulesElement({
    name: "Martyr's Armor +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1652",
    source: "Adventurer's Vault",
    categories: ["Martyr's Armor +2", "ID_FMP_MAGIC_ITEM_1652"],
    rules: function(model) {
      model.statadd("Armor Class", 2, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 2);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Martyr's Armor +3"] = new RulesElement({
    name: "Martyr's Armor +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1653",
    source: "Adventurer's Vault",
    categories: ["Martyr's Armor +3", "ID_FMP_MAGIC_ITEM_1653"],
    rules: function(model) {
      model.statadd("Armor Class", 3, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 3);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Martyr's Armor +4"] = new RulesElement({
    name: "Martyr's Armor +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1654",
    source: "Adventurer's Vault",
    categories: ["Martyr's Armor +4", "ID_FMP_MAGIC_ITEM_1654"],
    rules: function(model) {
      model.statadd("Armor Class", 4, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 4);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Martyr's Armor +5"] = new RulesElement({
    name: "Martyr's Armor +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1655",
    source: "Adventurer's Vault",
    categories: ["Martyr's Armor +5", "ID_FMP_MAGIC_ITEM_1655"],
    rules: function(model) {
      model.statadd("Armor Class", 5, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 5);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Martyr's Armor +6"] = new RulesElement({
    name: "Martyr's Armor +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1656",
    source: "Adventurer's Vault",
    categories: ["Martyr's Armor +6", "ID_FMP_MAGIC_ITEM_1656"],
    rules: function(model) {
      model.statadd("Armor Class", 6, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 6);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Martyr's Saddle (heroic tier)"] = new RulesElement({
    name: "Martyr's Saddle (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3978",
    source: "Adventurer's Vault",
    categories: ["Martyr's Saddle (heroic tier)", "ID_FMP_MAGIC_ITEM_3978"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Mask of Melora +2"] = new RulesElement({
    name: "Mask of Melora +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2511",
    source: "Adventurer's Vault",
    categories: ["Mask of Melora +2", "ID_FMP_MAGIC_ITEM_2511"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Mask of Melora +3"] = new RulesElement({
    name: "Mask of Melora +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2512",
    source: "Adventurer's Vault",
    categories: ["Mask of Melora +3", "ID_FMP_MAGIC_ITEM_2512"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Mask of Melora +4"] = new RulesElement({
    name: "Mask of Melora +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2513",
    source: "Adventurer's Vault",
    categories: ["Mask of Melora +4", "ID_FMP_MAGIC_ITEM_2513"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Mask of Melora +5"] = new RulesElement({
    name: "Mask of Melora +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2514",
    source: "Adventurer's Vault",
    categories: ["Mask of Melora +5", "ID_FMP_MAGIC_ITEM_2514"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Mask of Melora +6"] = new RulesElement({
    name: "Mask of Melora +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2515",
    source: "Adventurer's Vault",
    categories: ["Mask of Melora +6", "ID_FMP_MAGIC_ITEM_2515"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Mask of Slithering (paragon tier)"] = new RulesElement({
    name: "Mask of Slithering (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3493",
    source: "Adventurer's Vault",
    categories: ["Mask of Slithering (paragon tier)", "ID_FMP_MAGIC_ITEM_3493"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Mask of Terror (paragon tier)"] = new RulesElement({
    name: "Mask of Terror (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3494",
    source: "Adventurer's Vault",
    categories: ["Mask of Terror (paragon tier)", "ID_FMP_MAGIC_ITEM_3494"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Master's Wand of Cloud of Daggers +1"] = new RulesElement({
    name: "Master's Wand of Cloud of Daggers +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3057",
    source: "Adventurer's Vault",
    categories: ["Master's Wand of Cloud of Daggers +1", "ID_FMP_MAGIC_ITEM_3057"],
    rules: function(model) {
      model.grant(elements.id["ID_FMP_POWER_1164"]);
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Master's Wand of Cloud of Daggers +2"] = new RulesElement({
    name: "Master's Wand of Cloud of Daggers +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3058",
    source: "Adventurer's Vault",
    categories: ["Master's Wand of Cloud of Daggers +2", "ID_FMP_MAGIC_ITEM_3058"],
    rules: function(model) {
      model.grant(elements.id["ID_FMP_POWER_1164"]);
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Master's Wand of Cloud of Daggers +3"] = new RulesElement({
    name: "Master's Wand of Cloud of Daggers +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3059",
    source: "Adventurer's Vault",
    categories: ["Master's Wand of Cloud of Daggers +3", "ID_FMP_MAGIC_ITEM_3059"],
    rules: function(model) {
      model.grant(elements.id["ID_FMP_POWER_1164"]);
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Master's Wand of Cloud of Daggers +4"] = new RulesElement({
    name: "Master's Wand of Cloud of Daggers +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3060",
    source: "Adventurer's Vault",
    categories: ["Master's Wand of Cloud of Daggers +4", "ID_FMP_MAGIC_ITEM_3060"],
    rules: function(model) {
      model.grant(elements.id["ID_FMP_POWER_1164"]);
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Master's Wand of Cloud of Daggers +5"] = new RulesElement({
    name: "Master's Wand of Cloud of Daggers +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3061",
    source: "Adventurer's Vault",
    categories: ["Master's Wand of Cloud of Daggers +5", "ID_FMP_MAGIC_ITEM_3061"],
    rules: function(model) {
      model.grant(elements.id["ID_FMP_POWER_1164"]);
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Master's Wand of Cloud of Daggers +6"] = new RulesElement({
    name: "Master's Wand of Cloud of Daggers +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3062",
    source: "Adventurer's Vault",
    categories: ["Master's Wand of Cloud of Daggers +6", "ID_FMP_MAGIC_ITEM_3062"],
    rules: function(model) {
      model.grant(elements.id["ID_FMP_POWER_1164"]);
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Master's Wand of Dire Radiance +1"] = new RulesElement({
    name: "Master's Wand of Dire Radiance +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3063",
    source: "Adventurer's Vault",
    categories: ["Master's Wand of Dire Radiance +1", "ID_FMP_MAGIC_ITEM_3063"],
    rules: function(model) {
      model.grant(elements.id["ID_FMP_POWER_1457"]);
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Master's Wand of Dire Radiance +2"] = new RulesElement({
    name: "Master's Wand of Dire Radiance +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3064",
    source: "Adventurer's Vault",
    categories: ["Master's Wand of Dire Radiance +2", "ID_FMP_MAGIC_ITEM_3064"],
    rules: function(model) {
      model.grant(elements.id["ID_FMP_POWER_1457"]);
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Master's Wand of Dire Radiance +3"] = new RulesElement({
    name: "Master's Wand of Dire Radiance +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3065",
    source: "Adventurer's Vault",
    categories: ["Master's Wand of Dire Radiance +3", "ID_FMP_MAGIC_ITEM_3065"],
    rules: function(model) {
      model.grant(elements.id["ID_FMP_POWER_1457"]);
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Master's Wand of Dire Radiance +4"] = new RulesElement({
    name: "Master's Wand of Dire Radiance +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3066",
    source: "Adventurer's Vault",
    categories: ["Master's Wand of Dire Radiance +4", "ID_FMP_MAGIC_ITEM_3066"],
    rules: function(model) {
      model.grant(elements.id["ID_FMP_POWER_1457"]);
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Master's Wand of Dire Radiance +5"] = new RulesElement({
    name: "Master's Wand of Dire Radiance +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3067",
    source: "Adventurer's Vault",
    categories: ["Master's Wand of Dire Radiance +5", "ID_FMP_MAGIC_ITEM_3067"],
    rules: function(model) {
      model.grant(elements.id["ID_FMP_POWER_1457"]);
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Master's Wand of Dire Radiance +6"] = new RulesElement({
    name: "Master's Wand of Dire Radiance +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3068",
    source: "Adventurer's Vault",
    categories: ["Master's Wand of Dire Radiance +6", "ID_FMP_MAGIC_ITEM_3068"],
    rules: function(model) {
      model.grant(elements.id["ID_FMP_POWER_1457"]);
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Master's Wand of Eldritch Blast +1"] = new RulesElement({
    name: "Master's Wand of Eldritch Blast +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3069",
    source: "Adventurer's Vault",
    categories: ["Master's Wand of Eldritch Blast +1", "ID_FMP_MAGIC_ITEM_3069"],
    rules: function(model) {
      model.statadd("eldritch blast:damage", 1, "item");
      model.grant(elements.id["ID_FMP_POWER_1333"]);
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Master's Wand of Eldritch Blast +2"] = new RulesElement({
    name: "Master's Wand of Eldritch Blast +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3070",
    source: "Adventurer's Vault",
    categories: ["Master's Wand of Eldritch Blast +2", "ID_FMP_MAGIC_ITEM_3070"],
    rules: function(model) {
      model.statadd("eldritch blast:damage", 1, "item");
      model.grant(elements.id["ID_FMP_POWER_1333"]);
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Master's Wand of Eldritch Blast +3"] = new RulesElement({
    name: "Master's Wand of Eldritch Blast +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3071",
    source: "Adventurer's Vault",
    categories: ["Master's Wand of Eldritch Blast +3", "ID_FMP_MAGIC_ITEM_3071"],
    rules: function(model) {
      model.statadd("eldritch blast:damage", 2, "item");
      model.grant(elements.id["ID_FMP_POWER_1333"]);
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Master's Wand of Eldritch Blast +4"] = new RulesElement({
    name: "Master's Wand of Eldritch Blast +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3072",
    source: "Adventurer's Vault",
    categories: ["Master's Wand of Eldritch Blast +4", "ID_FMP_MAGIC_ITEM_3072"],
    rules: function(model) {
      model.statadd("eldritch blast:damage", 2, "item");
      model.grant(elements.id["ID_FMP_POWER_1333"]);
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Master's Wand of Eldritch Blast +5"] = new RulesElement({
    name: "Master's Wand of Eldritch Blast +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3073",
    source: "Adventurer's Vault",
    categories: ["Master's Wand of Eldritch Blast +5", "ID_FMP_MAGIC_ITEM_3073"],
    rules: function(model) {
      model.statadd("eldritch blast:damage", 3, "item");
      model.grant(elements.id["ID_FMP_POWER_1333"]);
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Master's Wand of Eldritch Blast +6"] = new RulesElement({
    name: "Master's Wand of Eldritch Blast +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3074",
    source: "Adventurer's Vault",
    categories: ["Master's Wand of Eldritch Blast +6", "ID_FMP_MAGIC_ITEM_3074"],
    rules: function(model) {
      model.statadd("eldritch blast:damage", 3, "item");
      model.grant(elements.id["ID_FMP_POWER_1333"]);
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Master's Wand of Eyebite +1"] = new RulesElement({
    name: "Master's Wand of Eyebite +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3075",
    source: "Adventurer's Vault",
    categories: ["Master's Wand of Eyebite +1", "ID_FMP_MAGIC_ITEM_3075"],
    rules: function(model) {
      model.grant(elements.id["ID_FMP_POWER_1456"]);
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Master's Wand of Eyebite +2"] = new RulesElement({
    name: "Master's Wand of Eyebite +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3076",
    source: "Adventurer's Vault",
    categories: ["Master's Wand of Eyebite +2", "ID_FMP_MAGIC_ITEM_3076"],
    rules: function(model) {
      model.grant(elements.id["ID_FMP_POWER_1456"]);
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Master's Wand of Eyebite +3"] = new RulesElement({
    name: "Master's Wand of Eyebite +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3077",
    source: "Adventurer's Vault",
    categories: ["Master's Wand of Eyebite +3", "ID_FMP_MAGIC_ITEM_3077"],
    rules: function(model) {
      model.grant(elements.id["ID_FMP_POWER_1456"]);
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Master's Wand of Eyebite +4"] = new RulesElement({
    name: "Master's Wand of Eyebite +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3078",
    source: "Adventurer's Vault",
    categories: ["Master's Wand of Eyebite +4", "ID_FMP_MAGIC_ITEM_3078"],
    rules: function(model) {
      model.grant(elements.id["ID_FMP_POWER_1456"]);
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Master's Wand of Eyebite +5"] = new RulesElement({
    name: "Master's Wand of Eyebite +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3079",
    source: "Adventurer's Vault",
    categories: ["Master's Wand of Eyebite +5", "ID_FMP_MAGIC_ITEM_3079"],
    rules: function(model) {
      model.grant(elements.id["ID_FMP_POWER_1456"]);
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Master's Wand of Eyebite +6"] = new RulesElement({
    name: "Master's Wand of Eyebite +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3080",
    source: "Adventurer's Vault",
    categories: ["Master's Wand of Eyebite +6", "ID_FMP_MAGIC_ITEM_3080"],
    rules: function(model) {
      model.grant(elements.id["ID_FMP_POWER_1456"]);
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Master's Wand of Hellish Rebuke +1"] = new RulesElement({
    name: "Master's Wand of Hellish Rebuke +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3081",
    source: "Adventurer's Vault",
    categories: ["Master's Wand of Hellish Rebuke +1", "ID_FMP_MAGIC_ITEM_3081"],
    rules: function(model) {
      model.grant(elements.id["ID_FMP_POWER_1458"]);
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Master's Wand of Hellish Rebuke +2"] = new RulesElement({
    name: "Master's Wand of Hellish Rebuke +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3082",
    source: "Adventurer's Vault",
    categories: ["Master's Wand of Hellish Rebuke +2", "ID_FMP_MAGIC_ITEM_3082"],
    rules: function(model) {
      model.grant(elements.id["ID_FMP_POWER_1458"]);
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Master's Wand of Hellish Rebuke +3"] = new RulesElement({
    name: "Master's Wand of Hellish Rebuke +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3083",
    source: "Adventurer's Vault",
    categories: ["Master's Wand of Hellish Rebuke +3", "ID_FMP_MAGIC_ITEM_3083"],
    rules: function(model) {
      model.grant(elements.id["ID_FMP_POWER_1458"]);
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Master's Wand of Hellish Rebuke +4"] = new RulesElement({
    name: "Master's Wand of Hellish Rebuke +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3084",
    source: "Adventurer's Vault",
    categories: ["Master's Wand of Hellish Rebuke +4", "ID_FMP_MAGIC_ITEM_3084"],
    rules: function(model) {
      model.grant(elements.id["ID_FMP_POWER_1458"]);
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Master's Wand of Hellish Rebuke +5"] = new RulesElement({
    name: "Master's Wand of Hellish Rebuke +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3085",
    source: "Adventurer's Vault",
    categories: ["Master's Wand of Hellish Rebuke +5", "ID_FMP_MAGIC_ITEM_3085"],
    rules: function(model) {
      model.grant(elements.id["ID_FMP_POWER_1458"]);
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Master's Wand of Hellish Rebuke +6"] = new RulesElement({
    name: "Master's Wand of Hellish Rebuke +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3086",
    source: "Adventurer's Vault",
    categories: ["Master's Wand of Hellish Rebuke +6", "ID_FMP_MAGIC_ITEM_3086"],
    rules: function(model) {
      model.grant(elements.id["ID_FMP_POWER_1458"]);
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Master's Wand of Magic Missile +1"] = new RulesElement({
    name: "Master's Wand of Magic Missile +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3087",
    source: "Adventurer's Vault",
    categories: ["Master's Wand of Magic Missile +1", "ID_FMP_MAGIC_ITEM_3087"],
    rules: function(model) {
      // unsupported rule: cbimporter.Rules.ModifyRule
      model.grant(elements.id["ID_FMP_POWER_463"]);
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Master's Wand of Magic Missile +2"] = new RulesElement({
    name: "Master's Wand of Magic Missile +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3088",
    source: "Adventurer's Vault",
    categories: ["Master's Wand of Magic Missile +2", "ID_FMP_MAGIC_ITEM_3088"],
    rules: function(model) {
      // unsupported rule: cbimporter.Rules.ModifyRule
      model.grant(elements.id["ID_FMP_POWER_463"]);
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Master's Wand of Magic Missile +3"] = new RulesElement({
    name: "Master's Wand of Magic Missile +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3089",
    source: "Adventurer's Vault",
    categories: ["Master's Wand of Magic Missile +3", "ID_FMP_MAGIC_ITEM_3089"],
    rules: function(model) {
      // unsupported rule: cbimporter.Rules.ModifyRule
      model.grant(elements.id["ID_FMP_POWER_463"]);
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Master's Wand of Magic Missile +4"] = new RulesElement({
    name: "Master's Wand of Magic Missile +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3090",
    source: "Adventurer's Vault",
    categories: ["Master's Wand of Magic Missile +4", "ID_FMP_MAGIC_ITEM_3090"],
    rules: function(model) {
      // unsupported rule: cbimporter.Rules.ModifyRule
      model.grant(elements.id["ID_FMP_POWER_463"]);
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Master's Wand of Magic Missile +5"] = new RulesElement({
    name: "Master's Wand of Magic Missile +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3091",
    source: "Adventurer's Vault",
    categories: ["Master's Wand of Magic Missile +5", "ID_FMP_MAGIC_ITEM_3091"],
    rules: function(model) {
      // unsupported rule: cbimporter.Rules.ModifyRule
      model.grant(elements.id["ID_FMP_POWER_463"]);
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Master's Wand of Magic Missile +6"] = new RulesElement({
    name: "Master's Wand of Magic Missile +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3092",
    source: "Adventurer's Vault",
    categories: ["Master's Wand of Magic Missile +6", "ID_FMP_MAGIC_ITEM_3092"],
    rules: function(model) {
      // unsupported rule: cbimporter.Rules.ModifyRule
      model.grant(elements.id["ID_FMP_POWER_463"]);
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Master's Wand of Ray of Frost +1"] = new RulesElement({
    name: "Master's Wand of Ray of Frost +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3093",
    source: "Adventurer's Vault",
    categories: ["Master's Wand of Ray of Frost +1", "ID_FMP_MAGIC_ITEM_3093"],
    rules: function(model) {
      model.grant(elements.id["ID_FMP_POWER_1167"]);
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Master's Wand of Ray of Frost +2"] = new RulesElement({
    name: "Master's Wand of Ray of Frost +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3094",
    source: "Adventurer's Vault",
    categories: ["Master's Wand of Ray of Frost +2", "ID_FMP_MAGIC_ITEM_3094"],
    rules: function(model) {
      model.grant(elements.id["ID_FMP_POWER_1167"]);
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Master's Wand of Ray of Frost +3"] = new RulesElement({
    name: "Master's Wand of Ray of Frost +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3095",
    source: "Adventurer's Vault",
    categories: ["Master's Wand of Ray of Frost +3", "ID_FMP_MAGIC_ITEM_3095"],
    rules: function(model) {
      model.grant(elements.id["ID_FMP_POWER_1167"]);
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Master's Wand of Ray of Frost +4"] = new RulesElement({
    name: "Master's Wand of Ray of Frost +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3096",
    source: "Adventurer's Vault",
    categories: ["Master's Wand of Ray of Frost +4", "ID_FMP_MAGIC_ITEM_3096"],
    rules: function(model) {
      model.grant(elements.id["ID_FMP_POWER_1167"]);
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Master's Wand of Ray of Frost +5"] = new RulesElement({
    name: "Master's Wand of Ray of Frost +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3097",
    source: "Adventurer's Vault",
    categories: ["Master's Wand of Ray of Frost +5", "ID_FMP_MAGIC_ITEM_3097"],
    rules: function(model) {
      model.grant(elements.id["ID_FMP_POWER_1167"]);
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Master's Wand of Ray of Frost +6"] = new RulesElement({
    name: "Master's Wand of Ray of Frost +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3098",
    source: "Adventurer's Vault",
    categories: ["Master's Wand of Ray of Frost +6", "ID_FMP_MAGIC_ITEM_3098"],
    rules: function(model) {
      model.grant(elements.id["ID_FMP_POWER_1167"]);
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Master's Wand of Scorching Burst +1"] = new RulesElement({
    name: "Master's Wand of Scorching Burst +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3099",
    source: "Adventurer's Vault",
    categories: ["Master's Wand of Scorching Burst +1", "ID_FMP_MAGIC_ITEM_3099"],
    rules: function(model) {
      model.grant(elements.id["ID_FMP_POWER_1166"]);
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Master's Wand of Scorching Burst +2"] = new RulesElement({
    name: "Master's Wand of Scorching Burst +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3100",
    source: "Adventurer's Vault",
    categories: ["Master's Wand of Scorching Burst +2", "ID_FMP_MAGIC_ITEM_3100"],
    rules: function(model) {
      model.grant(elements.id["ID_FMP_POWER_1166"]);
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Master's Wand of Scorching Burst +3"] = new RulesElement({
    name: "Master's Wand of Scorching Burst +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3101",
    source: "Adventurer's Vault",
    categories: ["Master's Wand of Scorching Burst +3", "ID_FMP_MAGIC_ITEM_3101"],
    rules: function(model) {
      model.grant(elements.id["ID_FMP_POWER_1166"]);
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Master's Wand of Scorching Burst +4"] = new RulesElement({
    name: "Master's Wand of Scorching Burst +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3102",
    source: "Adventurer's Vault",
    categories: ["Master's Wand of Scorching Burst +4", "ID_FMP_MAGIC_ITEM_3102"],
    rules: function(model) {
      model.grant(elements.id["ID_FMP_POWER_1166"]);
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Master's Wand of Scorching Burst +5"] = new RulesElement({
    name: "Master's Wand of Scorching Burst +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3103",
    source: "Adventurer's Vault",
    categories: ["Master's Wand of Scorching Burst +5", "ID_FMP_MAGIC_ITEM_3103"],
    rules: function(model) {
      model.grant(elements.id["ID_FMP_POWER_1166"]);
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Master's Wand of Scorching Burst +6"] = new RulesElement({
    name: "Master's Wand of Scorching Burst +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3104",
    source: "Adventurer's Vault",
    categories: ["Master's Wand of Scorching Burst +6", "ID_FMP_MAGIC_ITEM_3104"],
    rules: function(model) {
      model.grant(elements.id["ID_FMP_POWER_1166"]);
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Master's Wand of Thunderwave +1"] = new RulesElement({
    name: "Master's Wand of Thunderwave +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3105",
    source: "Adventurer's Vault",
    categories: ["Master's Wand of Thunderwave +1", "ID_FMP_MAGIC_ITEM_3105"],
    rules: function(model) {
      model.grant(elements.id["ID_FMP_POWER_1169"]);
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Master's Wand of Thunderwave +2"] = new RulesElement({
    name: "Master's Wand of Thunderwave +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3106",
    source: "Adventurer's Vault",
    categories: ["Master's Wand of Thunderwave +2", "ID_FMP_MAGIC_ITEM_3106"],
    rules: function(model) {
      model.grant(elements.id["ID_FMP_POWER_1169"]);
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Master's Wand of Thunderwave +3"] = new RulesElement({
    name: "Master's Wand of Thunderwave +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3107",
    source: "Adventurer's Vault",
    categories: ["Master's Wand of Thunderwave +3", "ID_FMP_MAGIC_ITEM_3107"],
    rules: function(model) {
      model.grant(elements.id["ID_FMP_POWER_1169"]);
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Master's Wand of Thunderwave +4"] = new RulesElement({
    name: "Master's Wand of Thunderwave +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3108",
    source: "Adventurer's Vault",
    categories: ["Master's Wand of Thunderwave +4", "ID_FMP_MAGIC_ITEM_3108"],
    rules: function(model) {
      model.grant(elements.id["ID_FMP_POWER_1169"]);
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Master's Wand of Thunderwave +5"] = new RulesElement({
    name: "Master's Wand of Thunderwave +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3109",
    source: "Adventurer's Vault",
    categories: ["Master's Wand of Thunderwave +5", "ID_FMP_MAGIC_ITEM_3109"],
    rules: function(model) {
      model.grant(elements.id["ID_FMP_POWER_1169"]);
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Master's Wand of Thunderwave +6"] = new RulesElement({
    name: "Master's Wand of Thunderwave +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3110",
    source: "Adventurer's Vault",
    categories: ["Master's Wand of Thunderwave +6", "ID_FMP_MAGIC_ITEM_3110"],
    rules: function(model) {
      model.grant(elements.id["ID_FMP_POWER_1169"]);
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Mauling Weapon +2"] = new RulesElement({
    name: "Mauling Weapon +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2191",
    source: "Adventurer's Vault",
    categories: ["Mauling Weapon +2", "ID_FMP_MAGIC_ITEM_2191"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Mauling Weapon +3"] = new RulesElement({
    name: "Mauling Weapon +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2192",
    source: "Adventurer's Vault",
    categories: ["Mauling Weapon +3", "ID_FMP_MAGIC_ITEM_2192"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Mauling Weapon +4"] = new RulesElement({
    name: "Mauling Weapon +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2193",
    source: "Adventurer's Vault",
    categories: ["Mauling Weapon +4", "ID_FMP_MAGIC_ITEM_2193"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Mauling Weapon +5"] = new RulesElement({
    name: "Mauling Weapon +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2194",
    source: "Adventurer's Vault",
    categories: ["Mauling Weapon +5", "ID_FMP_MAGIC_ITEM_2194"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Mauling Weapon +6"] = new RulesElement({
    name: "Mauling Weapon +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2195",
    source: "Adventurer's Vault",
    categories: ["Mauling Weapon +6", "ID_FMP_MAGIC_ITEM_2195"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Medallion of Death Deferred +2"] = new RulesElement({
    name: "Medallion of Death Deferred +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3672",
    source: "Adventurer's Vault",
    categories: ["Medallion of Death Deferred +2", "ID_FMP_MAGIC_ITEM_3672"],
    rules: function(model) {
      model.statadd("Fortitude Defense", 2, "Enhancement");
      model.statadd("Reflex Defense", 2, "Enhancement");
      model.statadd("Will Defense", 2, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Medallion of Death Deferred +3"] = new RulesElement({
    name: "Medallion of Death Deferred +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3673",
    source: "Adventurer's Vault",
    categories: ["Medallion of Death Deferred +3", "ID_FMP_MAGIC_ITEM_3673"],
    rules: function(model) {
      model.statadd("Fortitude Defense", 3, "Enhancement");
      model.statadd("Reflex Defense", 3, "Enhancement");
      model.statadd("Will Defense", 3, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Medallion of Death Deferred +4"] = new RulesElement({
    name: "Medallion of Death Deferred +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3674",
    source: "Adventurer's Vault",
    categories: ["Medallion of Death Deferred +4", "ID_FMP_MAGIC_ITEM_3674"],
    rules: function(model) {
      model.statadd("Fortitude Defense", 4, "Enhancement");
      model.statadd("Reflex Defense", 4, "Enhancement");
      model.statadd("Will Defense", 4, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Medallion of Death Deferred +5"] = new RulesElement({
    name: "Medallion of Death Deferred +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3675",
    source: "Adventurer's Vault",
    categories: ["Medallion of Death Deferred +5", "ID_FMP_MAGIC_ITEM_3675"],
    rules: function(model) {
      model.statadd("Fortitude Defense", 5, "Enhancement");
      model.statadd("Reflex Defense", 5, "Enhancement");
      model.statadd("Will Defense", 5, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Medallion of Death Deferred +6"] = new RulesElement({
    name: "Medallion of Death Deferred +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3676",
    source: "Adventurer's Vault",
    categories: ["Medallion of Death Deferred +6", "ID_FMP_MAGIC_ITEM_3676"],
    rules: function(model) {
      model.statadd("Fortitude Defense", 6, "Enhancement");
      model.statadd("Reflex Defense", 6, "Enhancement");
      model.statadd("Will Defense", 6, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Medic's Weapon +1"] = new RulesElement({
    name: "Medic's Weapon +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2196",
    source: "Adventurer's Vault",
    categories: ["Medic's Weapon +1", "ID_FMP_MAGIC_ITEM_2196"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Medic's Weapon +2"] = new RulesElement({
    name: "Medic's Weapon +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2197",
    source: "Adventurer's Vault",
    categories: ["Medic's Weapon +2", "ID_FMP_MAGIC_ITEM_2197"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Medic's Weapon +3"] = new RulesElement({
    name: "Medic's Weapon +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2198",
    source: "Adventurer's Vault",
    categories: ["Medic's Weapon +3", "ID_FMP_MAGIC_ITEM_2198"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Medic's Weapon +4"] = new RulesElement({
    name: "Medic's Weapon +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2199",
    source: "Adventurer's Vault",
    categories: ["Medic's Weapon +4", "ID_FMP_MAGIC_ITEM_2199"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Medic's Weapon +5"] = new RulesElement({
    name: "Medic's Weapon +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2200",
    source: "Adventurer's Vault",
    categories: ["Medic's Weapon +5", "ID_FMP_MAGIC_ITEM_2200"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Medic's Weapon +6"] = new RulesElement({
    name: "Medic's Weapon +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2201",
    source: "Adventurer's Vault",
    categories: ["Medic's Weapon +6", "ID_FMP_MAGIC_ITEM_2201"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Meliorating Armor +1"] = new RulesElement({
    name: "Meliorating Armor +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1657",
    source: "Adventurer's Vault",
    categories: ["Meliorating Armor +1", "ID_FMP_MAGIC_ITEM_1657"],
    rules: function(model) {
      model.statadd("Armor Class", 1, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 1);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Meliorating Armor +2"] = new RulesElement({
    name: "Meliorating Armor +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1658",
    source: "Adventurer's Vault",
    categories: ["Meliorating Armor +2", "ID_FMP_MAGIC_ITEM_1658"],
    rules: function(model) {
      model.statadd("Armor Class", 2, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 2);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Meliorating Armor +3"] = new RulesElement({
    name: "Meliorating Armor +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1659",
    source: "Adventurer's Vault",
    categories: ["Meliorating Armor +3", "ID_FMP_MAGIC_ITEM_1659"],
    rules: function(model) {
      model.statadd("Armor Class", 3, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 3);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Meliorating Armor +4"] = new RulesElement({
    name: "Meliorating Armor +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1660",
    source: "Adventurer's Vault",
    categories: ["Meliorating Armor +4", "ID_FMP_MAGIC_ITEM_1660"],
    rules: function(model) {
      model.statadd("Armor Class", 4, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 4);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Meliorating Armor +5"] = new RulesElement({
    name: "Meliorating Armor +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1661",
    source: "Adventurer's Vault",
    categories: ["Meliorating Armor +5", "ID_FMP_MAGIC_ITEM_1661"],
    rules: function(model) {
      model.statadd("Armor Class", 5, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 5);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Meliorating Armor +6"] = new RulesElement({
    name: "Meliorating Armor +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1662",
    source: "Adventurer's Vault",
    categories: ["Meliorating Armor +6", "ID_FMP_MAGIC_ITEM_1662"],
    rules: function(model) {
      model.statadd("Armor Class", 6, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 6);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Mercurial Rod +2"] = new RulesElement({
    name: "Mercurial Rod +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2804",
    source: "Adventurer's Vault",
    categories: ["Mercurial Rod +2", "ID_FMP_MAGIC_ITEM_2804"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Mercurial Rod +3"] = new RulesElement({
    name: "Mercurial Rod +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2805",
    source: "Adventurer's Vault",
    categories: ["Mercurial Rod +3", "ID_FMP_MAGIC_ITEM_2805"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Mercurial Rod +4"] = new RulesElement({
    name: "Mercurial Rod +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2806",
    source: "Adventurer's Vault",
    categories: ["Mercurial Rod +4", "ID_FMP_MAGIC_ITEM_2806"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Mercurial Rod +5"] = new RulesElement({
    name: "Mercurial Rod +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2807",
    source: "Adventurer's Vault",
    categories: ["Mercurial Rod +5", "ID_FMP_MAGIC_ITEM_2807"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Mercurial Rod +6"] = new RulesElement({
    name: "Mercurial Rod +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2808",
    source: "Adventurer's Vault",
    categories: ["Mercurial Rod +6", "ID_FMP_MAGIC_ITEM_2808"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Mind Dust (epic tier)"] = new RulesElement({
    name: "Mind Dust (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_4075",
    source: "Adventurer's Vault",
    categories: ["Mind Dust (epic tier)", "ID_FMP_MAGIC_ITEM_4075"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Mind Dust (paragon tier)"] = new RulesElement({
    name: "Mind Dust (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_4074",
    source: "Adventurer's Vault",
    categories: ["Mind Dust (paragon tier)", "ID_FMP_MAGIC_ITEM_4074"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Mindiron Vambraces (epic tier)"] = new RulesElement({
    name: "Mindiron Vambraces (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3245",
    source: "Adventurer's Vault",
    categories: ["Mindiron Vambraces (epic tier)", "ID_FMP_MAGIC_ITEM_3245"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Mindiron Vambraces (heroic tier)"] = new RulesElement({
    name: "Mindiron Vambraces (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3243",
    source: "Adventurer's Vault",
    categories: ["Mindiron Vambraces (heroic tier)", "ID_FMP_MAGIC_ITEM_3243"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Mindiron Vambraces (paragon tier)"] = new RulesElement({
    name: "Mindiron Vambraces (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3244",
    source: "Adventurer's Vault",
    categories: ["Mindiron Vambraces (paragon tier)", "ID_FMP_MAGIC_ITEM_3244"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Mindiron Weapon +3"] = new RulesElement({
    name: "Mindiron Weapon +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2202",
    source: "Adventurer's Vault",
    categories: ["Mindiron Weapon +3", "ID_FMP_MAGIC_ITEM_2202"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Mindiron Weapon +4"] = new RulesElement({
    name: "Mindiron Weapon +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2203",
    source: "Adventurer's Vault",
    categories: ["Mindiron Weapon +4", "ID_FMP_MAGIC_ITEM_2203"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Mindiron Weapon +5"] = new RulesElement({
    name: "Mindiron Weapon +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2204",
    source: "Adventurer's Vault",
    categories: ["Mindiron Weapon +5", "ID_FMP_MAGIC_ITEM_2204"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Mindiron Weapon +6"] = new RulesElement({
    name: "Mindiron Weapon +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2205",
    source: "Adventurer's Vault",
    categories: ["Mindiron Weapon +6", "ID_FMP_MAGIC_ITEM_2205"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Mirror of Opposition (paragon tier)"] = new RulesElement({
    name: "Mirror of Opposition (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3872",
    source: "Adventurer's Vault",
    categories: ["Mirror of Opposition (paragon tier)", "ID_FMP_MAGIC_ITEM_3872"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Mirrored Caparison (heroic tier)"] = new RulesElement({
    name: "Mirrored Caparison (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3979",
    source: "Adventurer's Vault",
    categories: ["Mirrored Caparison (heroic tier)", "ID_FMP_MAGIC_ITEM_3979"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Mirrorsheen Coat +2"] = new RulesElement({
    name: "Mirrorsheen Coat +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1663",
    source: "Adventurer's Vault",
    categories: ["Mirrorsheen Coat +2", "ID_FMP_MAGIC_ITEM_1663"],
    rules: function(model) {
      model.statadd("AC", function() { /* against radiant and gaze attacks */ return 2; }, "item");
      model.statadd("Fortitude Defense", function() { /* against radiant and gaze attacks */ return 2; }, "item");
      model.statadd("Reflex Defense", function() { /* against radiant and gaze attacks */ return 2; }, "item");
      model.statadd("Will Defense", function() { /* against radiant and gaze attacks */ return 2; }, "item");
      model.statadd("Armor Class", 2, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 2);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Mirrorsheen Coat +3"] = new RulesElement({
    name: "Mirrorsheen Coat +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1664",
    source: "Adventurer's Vault",
    categories: ["Mirrorsheen Coat +3", "ID_FMP_MAGIC_ITEM_1664"],
    rules: function(model) {
      model.statadd("AC", function() { /* against radiant and gaze attacks */ return 2; }, "item");
      model.statadd("Fortitude Defense", function() { /* against radiant and gaze attacks */ return 2; }, "item");
      model.statadd("Reflex Defense", function() { /* against radiant and gaze attacks */ return 2; }, "item");
      model.statadd("Will Defense", function() { /* against radiant and gaze attacks */ return 2; }, "item");
      model.statadd("Armor Class", 3, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 3);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Mirrorsheen Coat +4"] = new RulesElement({
    name: "Mirrorsheen Coat +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1665",
    source: "Adventurer's Vault",
    categories: ["Mirrorsheen Coat +4", "ID_FMP_MAGIC_ITEM_1665"],
    rules: function(model) {
      model.statadd("AC", function() { /* against radiant and gaze attacks */ return 2; }, "item");
      model.statadd("Fortitude Defense", function() { /* against radiant and gaze attacks */ return 2; }, "item");
      model.statadd("Reflex Defense", function() { /* against radiant and gaze attacks */ return 2; }, "item");
      model.statadd("Will Defense", function() { /* against radiant and gaze attacks */ return 2; }, "item");
      model.statadd("Armor Class", 4, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 4);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Mirrorsheen Coat +5"] = new RulesElement({
    name: "Mirrorsheen Coat +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1666",
    source: "Adventurer's Vault",
    categories: ["Mirrorsheen Coat +5", "ID_FMP_MAGIC_ITEM_1666"],
    rules: function(model) {
      model.statadd("AC", function() { /* against radiant and gaze attacks */ return 2; }, "item");
      model.statadd("Fortitude Defense", function() { /* against radiant and gaze attacks */ return 2; }, "item");
      model.statadd("Reflex Defense", function() { /* against radiant and gaze attacks */ return 2; }, "item");
      model.statadd("Will Defense", function() { /* against radiant and gaze attacks */ return 2; }, "item");
      model.statadd("Armor Class", 5, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 5);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Mirrorsheen Coat +6"] = new RulesElement({
    name: "Mirrorsheen Coat +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1667",
    source: "Adventurer's Vault",
    categories: ["Mirrorsheen Coat +6", "ID_FMP_MAGIC_ITEM_1667"],
    rules: function(model) {
      model.statadd("AC", function() { /* against radiant and gaze attacks */ return 2; }, "item");
      model.statadd("Fortitude Defense", function() { /* against radiant and gaze attacks */ return 2; }, "item");
      model.statadd("Reflex Defense", function() { /* against radiant and gaze attacks */ return 2; }, "item");
      model.statadd("Will Defense", function() { /* against radiant and gaze attacks */ return 2; }, "item");
      model.statadd("Armor Class", 6, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 6);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Mithral Armor +1"] = new RulesElement({
    name: "Mithral Armor +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1668",
    source: "Adventurer's Vault",
    categories: ["Mithral Armor +1", "ID_FMP_MAGIC_ITEM_1668"],
    rules: function(model) {
      model.statadd("Armor Class", 1, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 1);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Mithral Armor +2"] = new RulesElement({
    name: "Mithral Armor +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1669",
    source: "Adventurer's Vault",
    categories: ["Mithral Armor +2", "ID_FMP_MAGIC_ITEM_1669"],
    rules: function(model) {
      model.statadd("Armor Class", 2, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 2);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Mithral Armor +3"] = new RulesElement({
    name: "Mithral Armor +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1670",
    source: "Adventurer's Vault",
    categories: ["Mithral Armor +3", "ID_FMP_MAGIC_ITEM_1670"],
    rules: function(model) {
      model.statadd("Armor Class", 3, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 3);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Mithral Armor +4"] = new RulesElement({
    name: "Mithral Armor +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1671",
    source: "Adventurer's Vault",
    categories: ["Mithral Armor +4", "ID_FMP_MAGIC_ITEM_1671"],
    rules: function(model) {
      model.statadd("Armor Class", 4, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 4);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Mithral Armor +5"] = new RulesElement({
    name: "Mithral Armor +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1672",
    source: "Adventurer's Vault",
    categories: ["Mithral Armor +5", "ID_FMP_MAGIC_ITEM_1672"],
    rules: function(model) {
      model.statadd("Armor Class", 5, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 5);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Mithral Armor +6"] = new RulesElement({
    name: "Mithral Armor +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1673",
    source: "Adventurer's Vault",
    categories: ["Mithral Armor +6", "ID_FMP_MAGIC_ITEM_1673"],
    rules: function(model) {
      model.statadd("Armor Class", 6, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 6);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Mithral Shield (epic tier)"] = new RulesElement({
    name: "Mithral Shield (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3248",
    source: "Adventurer's Vault",
    categories: ["Mithral Shield (epic tier)", "ID_FMP_MAGIC_ITEM_3248"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Mithral Shield (heroic tier)"] = new RulesElement({
    name: "Mithral Shield (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3246",
    source: "Adventurer's Vault",
    categories: ["Mithral Shield (heroic tier)", "ID_FMP_MAGIC_ITEM_3246"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Mithral Shield (paragon tier)"] = new RulesElement({
    name: "Mithral Shield (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3247",
    source: "Adventurer's Vault",
    categories: ["Mithral Shield (paragon tier)", "ID_FMP_MAGIC_ITEM_3247"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Mnemonic Staff +1"] = new RulesElement({
    name: "Mnemonic Staff +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2938",
    source: "Adventurer's Vault",
    categories: ["Mnemonic Staff +1", "ID_FMP_MAGIC_ITEM_2938"],
    rules: function(model) {
      model.statadd("Arcana Misc", function() { /* to monster knowledge checks */ return 2; }, "item");
      model.statadd("Dungeoneering Misc", function() { /* to monster knowledge checks */ return 2; }, "item");
      model.statadd("Nature Misc", function() { /* to monster knowledge checks */ return 2; }, "item");
      model.statadd("Religion Misc", function() { /* to monster knowledge checks */ return 2; }, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Mnemonic Staff +2"] = new RulesElement({
    name: "Mnemonic Staff +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2939",
    source: "Adventurer's Vault",
    categories: ["Mnemonic Staff +2", "ID_FMP_MAGIC_ITEM_2939"],
    rules: function(model) {
      model.statadd("Arcana Misc", function() { /* to monster knowledge checks */ return 2; }, "item");
      model.statadd("Dungeoneering Misc", function() { /* to monster knowledge checks */ return 2; }, "item");
      model.statadd("Nature Misc", function() { /* to monster knowledge checks */ return 2; }, "item");
      model.statadd("Religion Misc", function() { /* to monster knowledge checks */ return 2; }, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Mnemonic Staff +3"] = new RulesElement({
    name: "Mnemonic Staff +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2940",
    source: "Adventurer's Vault",
    categories: ["Mnemonic Staff +3", "ID_FMP_MAGIC_ITEM_2940"],
    rules: function(model) {
      model.statadd("Arcana Misc", function() { /* to monster knowledge checks */ return 2; }, "item");
      model.statadd("Dungeoneering Misc", function() { /* to monster knowledge checks */ return 2; }, "item");
      model.statadd("Nature Misc", function() { /* to monster knowledge checks */ return 2; }, "item");
      model.statadd("Religion Misc", function() { /* to monster knowledge checks */ return 2; }, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Mnemonic Staff +4"] = new RulesElement({
    name: "Mnemonic Staff +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2941",
    source: "Adventurer's Vault",
    categories: ["Mnemonic Staff +4", "ID_FMP_MAGIC_ITEM_2941"],
    rules: function(model) {
      model.statadd("Arcana Misc", function() { /* to monster knowledge checks */ return 2; }, "item");
      model.statadd("Dungeoneering Misc", function() { /* to monster knowledge checks */ return 2; }, "item");
      model.statadd("Nature Misc", function() { /* to monster knowledge checks */ return 2; }, "item");
      model.statadd("Religion Misc", function() { /* to monster knowledge checks */ return 2; }, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Mnemonic Staff +5"] = new RulesElement({
    name: "Mnemonic Staff +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2942",
    source: "Adventurer's Vault",
    categories: ["Mnemonic Staff +5", "ID_FMP_MAGIC_ITEM_2942"],
    rules: function(model) {
      model.statadd("Arcana Misc", function() { /* to monster knowledge checks */ return 2; }, "item");
      model.statadd("Dungeoneering Misc", function() { /* to monster knowledge checks */ return 2; }, "item");
      model.statadd("Nature Misc", function() { /* to monster knowledge checks */ return 2; }, "item");
      model.statadd("Religion Misc", function() { /* to monster knowledge checks */ return 2; }, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Mnemonic Staff +6"] = new RulesElement({
    name: "Mnemonic Staff +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2943",
    source: "Adventurer's Vault",
    categories: ["Mnemonic Staff +6", "ID_FMP_MAGIC_ITEM_2943"],
    rules: function(model) {
      model.statadd("Arcana Misc", function() { /* to monster knowledge checks */ return 2; }, "item");
      model.statadd("Dungeoneering Misc", function() { /* to monster knowledge checks */ return 2; }, "item");
      model.statadd("Nature Misc", function() { /* to monster knowledge checks */ return 2; }, "item");
      model.statadd("Religion Misc", function() { /* to monster knowledge checks */ return 2; }, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Moon Disk of Sehanine +2"] = new RulesElement({
    name: "Moon Disk of Sehanine +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2516",
    source: "Adventurer's Vault",
    categories: ["Moon Disk of Sehanine +2", "ID_FMP_MAGIC_ITEM_2516"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Moon Disk of Sehanine +3"] = new RulesElement({
    name: "Moon Disk of Sehanine +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2517",
    source: "Adventurer's Vault",
    categories: ["Moon Disk of Sehanine +3", "ID_FMP_MAGIC_ITEM_2517"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Moon Disk of Sehanine +4"] = new RulesElement({
    name: "Moon Disk of Sehanine +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2518",
    source: "Adventurer's Vault",
    categories: ["Moon Disk of Sehanine +4", "ID_FMP_MAGIC_ITEM_2518"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Moon Disk of Sehanine +5"] = new RulesElement({
    name: "Moon Disk of Sehanine +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2519",
    source: "Adventurer's Vault",
    categories: ["Moon Disk of Sehanine +5", "ID_FMP_MAGIC_ITEM_2519"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Moon Disk of Sehanine +6"] = new RulesElement({
    name: "Moon Disk of Sehanine +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2520",
    source: "Adventurer's Vault",
    categories: ["Moon Disk of Sehanine +6", "ID_FMP_MAGIC_ITEM_2520"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Moonlight Lavaliere +4"] = new RulesElement({
    name: "Moonlight Lavaliere +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3677",
    source: "Adventurer's Vault,Dungeon Magazine 158",
    categories: ["Moonlight Lavaliere +4", "ID_FMP_MAGIC_ITEM_3677"],
    rules: function(model) {
      model.statadd("Fortitude Defense", 4, "Enhancement");
      model.statadd("Reflex Defense", 4, "Enhancement");
      model.statadd("Will Defense", 4, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Moonlight Lavaliere +5"] = new RulesElement({
    name: "Moonlight Lavaliere +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3678",
    source: "Adventurer's Vault",
    categories: ["Moonlight Lavaliere +5", "ID_FMP_MAGIC_ITEM_3678"],
    rules: function(model) {
      model.statadd("Fortitude Defense", 5, "Enhancement");
      model.statadd("Reflex Defense", 5, "Enhancement");
      model.statadd("Will Defense", 5, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Moonlight Lavaliere +6"] = new RulesElement({
    name: "Moonlight Lavaliere +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3679",
    source: "Adventurer's Vault",
    categories: ["Moonlight Lavaliere +6", "ID_FMP_MAGIC_ITEM_3679"],
    rules: function(model) {
      model.statadd("Fortitude Defense", 6, "Enhancement");
      model.statadd("Reflex Defense", 6, "Enhancement");
      model.statadd("Will Defense", 6, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Moradin's Indestructible Anvil +2"] = new RulesElement({
    name: "Moradin's Indestructible Anvil +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2521",
    source: "Adventurer's Vault",
    categories: ["Moradin's Indestructible Anvil +2", "ID_FMP_MAGIC_ITEM_2521"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Moradin's Indestructible Anvil +3"] = new RulesElement({
    name: "Moradin's Indestructible Anvil +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2522",
    source: "Adventurer's Vault",
    categories: ["Moradin's Indestructible Anvil +3", "ID_FMP_MAGIC_ITEM_2522"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Moradin's Indestructible Anvil +4"] = new RulesElement({
    name: "Moradin's Indestructible Anvil +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2523",
    source: "Adventurer's Vault",
    categories: ["Moradin's Indestructible Anvil +4", "ID_FMP_MAGIC_ITEM_2523"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Moradin's Indestructible Anvil +5"] = new RulesElement({
    name: "Moradin's Indestructible Anvil +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2524",
    source: "Adventurer's Vault",
    categories: ["Moradin's Indestructible Anvil +5", "ID_FMP_MAGIC_ITEM_2524"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Moradin's Indestructible Anvil +6"] = new RulesElement({
    name: "Moradin's Indestructible Anvil +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2525",
    source: "Adventurer's Vault",
    categories: ["Moradin's Indestructible Anvil +6", "ID_FMP_MAGIC_ITEM_2525"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Moradin's Weapon +4"] = new RulesElement({
    name: "Moradin's Weapon +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2206",
    source: "Adventurer's Vault",
    categories: ["Moradin's Weapon +4", "ID_FMP_MAGIC_ITEM_2206"],
    rules: function(model) {
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Moradin's Weapon +5"] = new RulesElement({
    name: "Moradin's Weapon +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2207",
    source: "Adventurer's Vault",
    categories: ["Moradin's Weapon +5", "ID_FMP_MAGIC_ITEM_2207"],
    rules: function(model) {
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Moradin's Weapon +6"] = new RulesElement({
    name: "Moradin's Weapon +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2208",
    source: "Adventurer's Vault",
    categories: ["Moradin's Weapon +6", "ID_FMP_MAGIC_ITEM_2208"],
    rules: function(model) {
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Mountain Shield (heroic tier)"] = new RulesElement({
    name: "Mountain Shield (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3249",
    source: "Adventurer's Vault",
    categories: ["Mountain Shield (heroic tier)", "ID_FMP_MAGIC_ITEM_3249"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Mountain Shield (paragon tier)"] = new RulesElement({
    name: "Mountain Shield (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3250",
    source: "Adventurer's Vault",
    categories: ["Mountain Shield (paragon tier)", "ID_FMP_MAGIC_ITEM_3250"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Muleback Harness (epic tier)"] = new RulesElement({
    name: "Muleback Harness (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3808",
    source: "Adventurer's Vault",
    categories: ["Muleback Harness (epic tier)", "ID_FMP_MAGIC_ITEM_3808"],
    rules: function(model) {
      model.statadd("StrLoadAdjust", 15);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Muleback Harness (heroic tier)"] = new RulesElement({
    name: "Muleback Harness (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3806",
    source: "Adventurer's Vault",
    categories: ["Muleback Harness (heroic tier)", "ID_FMP_MAGIC_ITEM_3806"],
    rules: function(model) {
      model.statadd("StrLoadAdjust", 5);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Muleback Harness (paragon tier)"] = new RulesElement({
    name: "Muleback Harness (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3807",
    source: "Adventurer's Vault",
    categories: ["Muleback Harness (paragon tier)", "ID_FMP_MAGIC_ITEM_3807"],
    rules: function(model) {
      model.statadd("StrLoadAdjust", 10);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Mummified Hand (epic tier)"] = new RulesElement({
    name: "Mummified Hand (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3873",
    source: "Adventurer's Vault",
    categories: ["Mummified Hand (epic tier)", "ID_FMP_MAGIC_ITEM_3873"],
    rules: function(model) {
      model.statadd("Ring Slots", 1, "Mummified Hand (epic tier)");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Nail of Sealing (heroic tier)"] = new RulesElement({
    name: "Nail of Sealing (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_4040",
    source: "Adventurer's Vault",
    categories: ["Nail of Sealing (heroic tier)", "ID_FMP_MAGIC_ITEM_4040"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Necklace of Fireballs +3"] = new RulesElement({
    name: "Necklace of Fireballs +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3680",
    source: "Adventurer's Vault",
    categories: ["Necklace of Fireballs +3", "ID_FMP_MAGIC_ITEM_3680"],
    rules: function(model) {
      model.statadd("Fortitude Defense", 3, "Enhancement");
      model.statadd("Reflex Defense", 3, "Enhancement");
      model.statadd("Will Defense", 3, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Necklace of Fireballs +4"] = new RulesElement({
    name: "Necklace of Fireballs +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3681",
    source: "Adventurer's Vault",
    categories: ["Necklace of Fireballs +4", "ID_FMP_MAGIC_ITEM_3681"],
    rules: function(model) {
      model.statadd("Fortitude Defense", 4, "Enhancement");
      model.statadd("Reflex Defense", 4, "Enhancement");
      model.statadd("Will Defense", 4, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Necklace of Fireballs +5"] = new RulesElement({
    name: "Necklace of Fireballs +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3682",
    source: "Adventurer's Vault",
    categories: ["Necklace of Fireballs +5", "ID_FMP_MAGIC_ITEM_3682"],
    rules: function(model) {
      model.statadd("Fortitude Defense", 5, "Enhancement");
      model.statadd("Reflex Defense", 5, "Enhancement");
      model.statadd("Will Defense", 5, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Necklace of Fireballs +6"] = new RulesElement({
    name: "Necklace of Fireballs +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3683",
    source: "Adventurer's Vault",
    categories: ["Necklace of Fireballs +6", "ID_FMP_MAGIC_ITEM_3683"],
    rules: function(model) {
      model.statadd("Fortitude Defense", 6, "Enhancement");
      model.statadd("Reflex Defense", 6, "Enhancement");
      model.statadd("Will Defense", 6, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Necrotic Weapon +3"] = new RulesElement({
    name: "Necrotic Weapon +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2209",
    source: "Adventurer's Vault",
    categories: ["Necrotic Weapon +3", "ID_FMP_MAGIC_ITEM_2209"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Necrotic Weapon +4"] = new RulesElement({
    name: "Necrotic Weapon +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2210",
    source: "Adventurer's Vault",
    categories: ["Necrotic Weapon +4", "ID_FMP_MAGIC_ITEM_2210"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Necrotic Weapon +5"] = new RulesElement({
    name: "Necrotic Weapon +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2211",
    source: "Adventurer's Vault",
    categories: ["Necrotic Weapon +5", "ID_FMP_MAGIC_ITEM_2211"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Necrotic Weapon +6"] = new RulesElement({
    name: "Necrotic Weapon +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2212",
    source: "Adventurer's Vault",
    categories: ["Necrotic Weapon +6", "ID_FMP_MAGIC_ITEM_2212"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Nullifying Ring (epic tier)"] = new RulesElement({
    name: "Nullifying Ring (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3734",
    source: "Adventurer's Vault",
    categories: ["Nullifying Ring (epic tier)", "ID_FMP_MAGIC_ITEM_3734"],
    rules: function(model) {
      model.statadd("Saving Throws", 3, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Oathblade +1"] = new RulesElement({
    name: "Oathblade +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2213",
    source: "Adventurer's Vault",
    categories: ["Oathblade +1", "ID_FMP_MAGIC_ITEM_2213"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Oathblade +2"] = new RulesElement({
    name: "Oathblade +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2214",
    source: "Adventurer's Vault",
    categories: ["Oathblade +2", "ID_FMP_MAGIC_ITEM_2214"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Oathblade +3"] = new RulesElement({
    name: "Oathblade +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2215",
    source: "Adventurer's Vault",
    categories: ["Oathblade +3", "ID_FMP_MAGIC_ITEM_2215"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Oathblade +4"] = new RulesElement({
    name: "Oathblade +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2216",
    source: "Adventurer's Vault",
    categories: ["Oathblade +4", "ID_FMP_MAGIC_ITEM_2216"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Oathblade +5"] = new RulesElement({
    name: "Oathblade +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2217",
    source: "Adventurer's Vault",
    categories: ["Oathblade +5", "ID_FMP_MAGIC_ITEM_2217"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Oathblade +6"] = new RulesElement({
    name: "Oathblade +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2218",
    source: "Adventurer's Vault",
    categories: ["Oathblade +6", "ID_FMP_MAGIC_ITEM_2218"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Obsidian Steed (heroic tier)"] = new RulesElement({
    name: "Obsidian Steed (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3914",
    source: "Adventurer's Vault",
    categories: ["Obsidian Steed (heroic tier)", "ID_FMP_MAGIC_ITEM_3914"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Oceanstrider Boots (paragon tier)"] = new RulesElement({
    name: "Oceanstrider Boots (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3341",
    source: "Adventurer's Vault",
    categories: ["Oceanstrider Boots (paragon tier)", "ID_FMP_MAGIC_ITEM_3341"],
    rules: function(model) {
      model.statadd("Speed", 1, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Oil of Flesh Returned (heroic tier)"] = new RulesElement({
    name: "Oil of Flesh Returned (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_4041",
    source: "Adventurer's Vault",
    categories: ["Oil of Flesh Returned (heroic tier)", "ID_FMP_MAGIC_ITEM_4041"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Onyx Dog (heroic tier)"] = new RulesElement({
    name: "Onyx Dog (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3915",
    source: "Adventurer's Vault",
    categories: ["Onyx Dog (heroic tier)", "ID_FMP_MAGIC_ITEM_3915"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Opal Ring of Remembrance (epic tier)"] = new RulesElement({
    name: "Opal Ring of Remembrance (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3735",
    source: "Adventurer's Vault",
    categories: ["Opal Ring of Remembrance (epic tier)", "ID_FMP_MAGIC_ITEM_3735"],
    rules: function(model) {
      model.statadd("intelligence:attack", 2, "item");
      model.statadd("Arcana Misc", 4, "item");
      model.statadd("History Misc", 4, "item");
      model.statadd("Religion Misc", 4, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Opportunistic Weapon +1"] = new RulesElement({
    name: "Opportunistic Weapon +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2219",
    source: "Adventurer's Vault",
    categories: ["Opportunistic Weapon +1", "ID_FMP_MAGIC_ITEM_2219"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Opportunistic Weapon +2"] = new RulesElement({
    name: "Opportunistic Weapon +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2220",
    source: "Adventurer's Vault",
    categories: ["Opportunistic Weapon +2", "ID_FMP_MAGIC_ITEM_2220"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Opportunistic Weapon +3"] = new RulesElement({
    name: "Opportunistic Weapon +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2221",
    source: "Adventurer's Vault",
    categories: ["Opportunistic Weapon +3", "ID_FMP_MAGIC_ITEM_2221"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Opportunistic Weapon +4"] = new RulesElement({
    name: "Opportunistic Weapon +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2222",
    source: "Adventurer's Vault",
    categories: ["Opportunistic Weapon +4", "ID_FMP_MAGIC_ITEM_2222"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Opportunistic Weapon +5"] = new RulesElement({
    name: "Opportunistic Weapon +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2223",
    source: "Adventurer's Vault",
    categories: ["Opportunistic Weapon +5", "ID_FMP_MAGIC_ITEM_2223"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Opportunistic Weapon +6"] = new RulesElement({
    name: "Opportunistic Weapon +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2224",
    source: "Adventurer's Vault",
    categories: ["Opportunistic Weapon +6", "ID_FMP_MAGIC_ITEM_2224"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Orb of Arcane Generosity +5"] = new RulesElement({
    name: "Orb of Arcane Generosity +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2655",
    source: "Adventurer's Vault",
    categories: ["Orb of Arcane Generosity +5", "ID_FMP_MAGIC_ITEM_2655"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Orb of Arcane Generosity +6"] = new RulesElement({
    name: "Orb of Arcane Generosity +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2656",
    source: "Adventurer's Vault",
    categories: ["Orb of Arcane Generosity +6", "ID_FMP_MAGIC_ITEM_2656"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Orb of Augmented Stasis +3"] = new RulesElement({
    name: "Orb of Augmented Stasis +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2657",
    source: "Adventurer's Vault",
    categories: ["Orb of Augmented Stasis +3", "ID_FMP_MAGIC_ITEM_2657"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Orb of Augmented Stasis +4"] = new RulesElement({
    name: "Orb of Augmented Stasis +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2658",
    source: "Adventurer's Vault",
    categories: ["Orb of Augmented Stasis +4", "ID_FMP_MAGIC_ITEM_2658"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Orb of Augmented Stasis +5"] = new RulesElement({
    name: "Orb of Augmented Stasis +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2659",
    source: "Adventurer's Vault",
    categories: ["Orb of Augmented Stasis +5", "ID_FMP_MAGIC_ITEM_2659"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Orb of Augmented Stasis +6"] = new RulesElement({
    name: "Orb of Augmented Stasis +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2660",
    source: "Adventurer's Vault",
    categories: ["Orb of Augmented Stasis +6", "ID_FMP_MAGIC_ITEM_2660"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Orb of Coercive Dementia +4"] = new RulesElement({
    name: "Orb of Coercive Dementia +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2661",
    source: "Adventurer's Vault",
    categories: ["Orb of Coercive Dementia +4", "ID_FMP_MAGIC_ITEM_2661"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Orb of Coercive Dementia +5"] = new RulesElement({
    name: "Orb of Coercive Dementia +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2662",
    source: "Adventurer's Vault",
    categories: ["Orb of Coercive Dementia +5", "ID_FMP_MAGIC_ITEM_2662"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Orb of Coercive Dementia +6"] = new RulesElement({
    name: "Orb of Coercive Dementia +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2663",
    source: "Adventurer's Vault",
    categories: ["Orb of Coercive Dementia +6", "ID_FMP_MAGIC_ITEM_2663"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Orb of Crimson Commitment +3"] = new RulesElement({
    name: "Orb of Crimson Commitment +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2664",
    source: "Adventurer's Vault",
    categories: ["Orb of Crimson Commitment +3", "ID_FMP_MAGIC_ITEM_2664"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Orb of Crimson Commitment +4"] = new RulesElement({
    name: "Orb of Crimson Commitment +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2665",
    source: "Adventurer's Vault",
    categories: ["Orb of Crimson Commitment +4", "ID_FMP_MAGIC_ITEM_2665"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Orb of Crimson Commitment +5"] = new RulesElement({
    name: "Orb of Crimson Commitment +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2666",
    source: "Adventurer's Vault",
    categories: ["Orb of Crimson Commitment +5", "ID_FMP_MAGIC_ITEM_2666"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Orb of Crimson Commitment +6"] = new RulesElement({
    name: "Orb of Crimson Commitment +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2667",
    source: "Adventurer's Vault",
    categories: ["Orb of Crimson Commitment +6", "ID_FMP_MAGIC_ITEM_2667"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Orb of Crystalline Terror +2"] = new RulesElement({
    name: "Orb of Crystalline Terror +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2668",
    source: "Adventurer's Vault",
    categories: ["Orb of Crystalline Terror +2", "ID_FMP_MAGIC_ITEM_2668"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Orb of Crystalline Terror +3"] = new RulesElement({
    name: "Orb of Crystalline Terror +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2669",
    source: "Adventurer's Vault",
    categories: ["Orb of Crystalline Terror +3", "ID_FMP_MAGIC_ITEM_2669"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Orb of Crystalline Terror +4"] = new RulesElement({
    name: "Orb of Crystalline Terror +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2670",
    source: "Adventurer's Vault",
    categories: ["Orb of Crystalline Terror +4", "ID_FMP_MAGIC_ITEM_2670"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Orb of Crystalline Terror +5"] = new RulesElement({
    name: "Orb of Crystalline Terror +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2671",
    source: "Adventurer's Vault",
    categories: ["Orb of Crystalline Terror +5", "ID_FMP_MAGIC_ITEM_2671"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Orb of Crystalline Terror +6"] = new RulesElement({
    name: "Orb of Crystalline Terror +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2672",
    source: "Adventurer's Vault",
    categories: ["Orb of Crystalline Terror +6", "ID_FMP_MAGIC_ITEM_2672"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Orb of Debillitating Languor +1"] = new RulesElement({
    name: "Orb of Debillitating Languor +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2673",
    source: "Adventurer's Vault",
    categories: ["Orb of Debillitating Languor +1", "ID_FMP_MAGIC_ITEM_2673"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Orb of Debillitating Languor +2"] = new RulesElement({
    name: "Orb of Debillitating Languor +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2674",
    source: "Adventurer's Vault",
    categories: ["Orb of Debillitating Languor +2", "ID_FMP_MAGIC_ITEM_2674"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Orb of Debillitating Languor +3"] = new RulesElement({
    name: "Orb of Debillitating Languor +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2675",
    source: "Adventurer's Vault",
    categories: ["Orb of Debillitating Languor +3", "ID_FMP_MAGIC_ITEM_2675"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Orb of Debillitating Languor +4"] = new RulesElement({
    name: "Orb of Debillitating Languor +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2676",
    source: "Adventurer's Vault",
    categories: ["Orb of Debillitating Languor +4", "ID_FMP_MAGIC_ITEM_2676"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Orb of Debillitating Languor +5"] = new RulesElement({
    name: "Orb of Debillitating Languor +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2677",
    source: "Adventurer's Vault",
    categories: ["Orb of Debillitating Languor +5", "ID_FMP_MAGIC_ITEM_2677"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Orb of Debillitating Languor +6"] = new RulesElement({
    name: "Orb of Debillitating Languor +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2678",
    source: "Adventurer's Vault",
    categories: ["Orb of Debillitating Languor +6", "ID_FMP_MAGIC_ITEM_2678"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Orb of Draconic Majesty +3"] = new RulesElement({
    name: "Orb of Draconic Majesty +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2679",
    source: "Adventurer's Vault",
    categories: ["Orb of Draconic Majesty +3", "ID_FMP_MAGIC_ITEM_2679"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Orb of Draconic Majesty +4"] = new RulesElement({
    name: "Orb of Draconic Majesty +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2680",
    source: "Adventurer's Vault",
    categories: ["Orb of Draconic Majesty +4", "ID_FMP_MAGIC_ITEM_2680"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Orb of Draconic Majesty +5"] = new RulesElement({
    name: "Orb of Draconic Majesty +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2681",
    source: "Adventurer's Vault",
    categories: ["Orb of Draconic Majesty +5", "ID_FMP_MAGIC_ITEM_2681"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Orb of Draconic Majesty +6"] = new RulesElement({
    name: "Orb of Draconic Majesty +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2682",
    source: "Adventurer's Vault",
    categories: ["Orb of Draconic Majesty +6", "ID_FMP_MAGIC_ITEM_2682"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Orb of Far Seeing +1"] = new RulesElement({
    name: "Orb of Far Seeing +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2683",
    source: "Adventurer's Vault",
    categories: ["Orb of Far Seeing +1", "ID_FMP_MAGIC_ITEM_2683"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Orb of Far Seeing +2"] = new RulesElement({
    name: "Orb of Far Seeing +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2684",
    source: "Adventurer's Vault",
    categories: ["Orb of Far Seeing +2", "ID_FMP_MAGIC_ITEM_2684"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Orb of Far Seeing +3"] = new RulesElement({
    name: "Orb of Far Seeing +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2685",
    source: "Adventurer's Vault",
    categories: ["Orb of Far Seeing +3", "ID_FMP_MAGIC_ITEM_2685"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Orb of Far Seeing +4"] = new RulesElement({
    name: "Orb of Far Seeing +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2686",
    source: "Adventurer's Vault",
    categories: ["Orb of Far Seeing +4", "ID_FMP_MAGIC_ITEM_2686"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Orb of Far Seeing +5"] = new RulesElement({
    name: "Orb of Far Seeing +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2687",
    source: "Adventurer's Vault",
    categories: ["Orb of Far Seeing +5", "ID_FMP_MAGIC_ITEM_2687"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Orb of Far Seeing +6"] = new RulesElement({
    name: "Orb of Far Seeing +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2688",
    source: "Adventurer's Vault",
    categories: ["Orb of Far Seeing +6", "ID_FMP_MAGIC_ITEM_2688"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Orb of Fickle Fate +1"] = new RulesElement({
    name: "Orb of Fickle Fate +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2689",
    source: "Adventurer's Vault",
    categories: ["Orb of Fickle Fate +1", "ID_FMP_MAGIC_ITEM_2689"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Orb of Fickle Fate +2"] = new RulesElement({
    name: "Orb of Fickle Fate +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2690",
    source: "Adventurer's Vault",
    categories: ["Orb of Fickle Fate +2", "ID_FMP_MAGIC_ITEM_2690"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Orb of Fickle Fate +3"] = new RulesElement({
    name: "Orb of Fickle Fate +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2691",
    source: "Adventurer's Vault",
    categories: ["Orb of Fickle Fate +3", "ID_FMP_MAGIC_ITEM_2691"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Orb of Fickle Fate +4"] = new RulesElement({
    name: "Orb of Fickle Fate +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2692",
    source: "Adventurer's Vault",
    categories: ["Orb of Fickle Fate +4", "ID_FMP_MAGIC_ITEM_2692"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Orb of Fickle Fate +5"] = new RulesElement({
    name: "Orb of Fickle Fate +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2693",
    source: "Adventurer's Vault",
    categories: ["Orb of Fickle Fate +5", "ID_FMP_MAGIC_ITEM_2693"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Orb of Fickle Fate +6"] = new RulesElement({
    name: "Orb of Fickle Fate +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2694",
    source: "Adventurer's Vault",
    categories: ["Orb of Fickle Fate +6", "ID_FMP_MAGIC_ITEM_2694"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Orb of Harmonic Agony +1"] = new RulesElement({
    name: "Orb of Harmonic Agony +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2695",
    source: "Adventurer's Vault",
    categories: ["Orb of Harmonic Agony +1", "ID_FMP_MAGIC_ITEM_2695"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Orb of Harmonic Agony +2"] = new RulesElement({
    name: "Orb of Harmonic Agony +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2696",
    source: "Adventurer's Vault",
    categories: ["Orb of Harmonic Agony +2", "ID_FMP_MAGIC_ITEM_2696"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Orb of Harmonic Agony +3"] = new RulesElement({
    name: "Orb of Harmonic Agony +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2697",
    source: "Adventurer's Vault",
    categories: ["Orb of Harmonic Agony +3", "ID_FMP_MAGIC_ITEM_2697"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Orb of Harmonic Agony +4"] = new RulesElement({
    name: "Orb of Harmonic Agony +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2698",
    source: "Adventurer's Vault",
    categories: ["Orb of Harmonic Agony +4", "ID_FMP_MAGIC_ITEM_2698"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Orb of Harmonic Agony +5"] = new RulesElement({
    name: "Orb of Harmonic Agony +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2699",
    source: "Adventurer's Vault",
    categories: ["Orb of Harmonic Agony +5", "ID_FMP_MAGIC_ITEM_2699"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Orb of Harmonic Agony +6"] = new RulesElement({
    name: "Orb of Harmonic Agony +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2700",
    source: "Adventurer's Vault",
    categories: ["Orb of Harmonic Agony +6", "ID_FMP_MAGIC_ITEM_2700"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Orb of Impenetrable Escape +2"] = new RulesElement({
    name: "Orb of Impenetrable Escape +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2701",
    source: "Adventurer's Vault",
    categories: ["Orb of Impenetrable Escape +2", "ID_FMP_MAGIC_ITEM_2701"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Orb of Impenetrable Escape +3"] = new RulesElement({
    name: "Orb of Impenetrable Escape +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2702",
    source: "Adventurer's Vault",
    categories: ["Orb of Impenetrable Escape +3", "ID_FMP_MAGIC_ITEM_2702"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Orb of Impenetrable Escape +4"] = new RulesElement({
    name: "Orb of Impenetrable Escape +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2703",
    source: "Adventurer's Vault",
    categories: ["Orb of Impenetrable Escape +4", "ID_FMP_MAGIC_ITEM_2703"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Orb of Impenetrable Escape +5"] = new RulesElement({
    name: "Orb of Impenetrable Escape +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2704",
    source: "Adventurer's Vault",
    categories: ["Orb of Impenetrable Escape +5", "ID_FMP_MAGIC_ITEM_2704"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Orb of Impenetrable Escape +6"] = new RulesElement({
    name: "Orb of Impenetrable Escape +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2705",
    source: "Adventurer's Vault",
    categories: ["Orb of Impenetrable Escape +6", "ID_FMP_MAGIC_ITEM_2705"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Orb of Indefatigable Concentration +3"] = new RulesElement({
    name: "Orb of Indefatigable Concentration +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2706",
    source: "Adventurer's Vault",
    categories: ["Orb of Indefatigable Concentration +3", "ID_FMP_MAGIC_ITEM_2706"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Orb of Indefatigable Concentration +4"] = new RulesElement({
    name: "Orb of Indefatigable Concentration +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2707",
    source: "Adventurer's Vault",
    categories: ["Orb of Indefatigable Concentration +4", "ID_FMP_MAGIC_ITEM_2707"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Orb of Indefatigable Concentration +5"] = new RulesElement({
    name: "Orb of Indefatigable Concentration +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2708",
    source: "Adventurer's Vault",
    categories: ["Orb of Indefatigable Concentration +5", "ID_FMP_MAGIC_ITEM_2708"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Orb of Indefatigable Concentration +6"] = new RulesElement({
    name: "Orb of Indefatigable Concentration +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2709",
    source: "Adventurer's Vault",
    categories: ["Orb of Indefatigable Concentration +6", "ID_FMP_MAGIC_ITEM_2709"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Orb of Inescapable Consequences +2"] = new RulesElement({
    name: "Orb of Inescapable Consequences +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2710",
    source: "Adventurer's Vault",
    categories: ["Orb of Inescapable Consequences +2", "ID_FMP_MAGIC_ITEM_2710"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Orb of Inescapable Consequences +3"] = new RulesElement({
    name: "Orb of Inescapable Consequences +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2711",
    source: "Adventurer's Vault",
    categories: ["Orb of Inescapable Consequences +3", "ID_FMP_MAGIC_ITEM_2711"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Orb of Inescapable Consequences +4"] = new RulesElement({
    name: "Orb of Inescapable Consequences +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2712",
    source: "Adventurer's Vault",
    categories: ["Orb of Inescapable Consequences +4", "ID_FMP_MAGIC_ITEM_2712"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Orb of Inescapable Consequences +5"] = new RulesElement({
    name: "Orb of Inescapable Consequences +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2713",
    source: "Adventurer's Vault",
    categories: ["Orb of Inescapable Consequences +5", "ID_FMP_MAGIC_ITEM_2713"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Orb of Inescapable Consequences +6"] = new RulesElement({
    name: "Orb of Inescapable Consequences +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2714",
    source: "Adventurer's Vault",
    categories: ["Orb of Inescapable Consequences +6", "ID_FMP_MAGIC_ITEM_2714"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Orb of Insurmountable Force +1"] = new RulesElement({
    name: "Orb of Insurmountable Force +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2715",
    source: "Adventurer's Vault",
    categories: ["Orb of Insurmountable Force +1", "ID_FMP_MAGIC_ITEM_2715"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Orb of Insurmountable Force +2"] = new RulesElement({
    name: "Orb of Insurmountable Force +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2716",
    source: "Adventurer's Vault",
    categories: ["Orb of Insurmountable Force +2", "ID_FMP_MAGIC_ITEM_2716"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Orb of Insurmountable Force +3"] = new RulesElement({
    name: "Orb of Insurmountable Force +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2717",
    source: "Adventurer's Vault",
    categories: ["Orb of Insurmountable Force +3", "ID_FMP_MAGIC_ITEM_2717"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Orb of Insurmountable Force +4"] = new RulesElement({
    name: "Orb of Insurmountable Force +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2718",
    source: "Adventurer's Vault",
    categories: ["Orb of Insurmountable Force +4", "ID_FMP_MAGIC_ITEM_2718"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Orb of Insurmountable Force +5"] = new RulesElement({
    name: "Orb of Insurmountable Force +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2719",
    source: "Adventurer's Vault",
    categories: ["Orb of Insurmountable Force +5", "ID_FMP_MAGIC_ITEM_2719"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Orb of Insurmountable Force +6"] = new RulesElement({
    name: "Orb of Insurmountable Force +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2720",
    source: "Adventurer's Vault",
    categories: ["Orb of Insurmountable Force +6", "ID_FMP_MAGIC_ITEM_2720"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Orb of Judicious Conjuration +1"] = new RulesElement({
    name: "Orb of Judicious Conjuration +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2721",
    source: "Adventurer's Vault",
    categories: ["Orb of Judicious Conjuration +1", "ID_FMP_MAGIC_ITEM_2721"],
    rules: function(model) {
      model.statadd("Will Defense", function() { /* when dispel magic is used against one of your conjuration powers */ return 1; });
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Orb of Judicious Conjuration +2"] = new RulesElement({
    name: "Orb of Judicious Conjuration +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2722",
    source: "Adventurer's Vault",
    categories: ["Orb of Judicious Conjuration +2", "ID_FMP_MAGIC_ITEM_2722"],
    rules: function(model) {
      model.statadd("Will Defense", function() { /* when dispel magic is used against one of your conjuration powers */ return 2; });
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Orb of Judicious Conjuration +3"] = new RulesElement({
    name: "Orb of Judicious Conjuration +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2723",
    source: "Adventurer's Vault",
    categories: ["Orb of Judicious Conjuration +3", "ID_FMP_MAGIC_ITEM_2723"],
    rules: function(model) {
      model.statadd("Will Defense", function() { /* when dispel magic is used against one of your conjuration powers */ return 3; });
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Orb of Judicious Conjuration +4"] = new RulesElement({
    name: "Orb of Judicious Conjuration +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2724",
    source: "Adventurer's Vault",
    categories: ["Orb of Judicious Conjuration +4", "ID_FMP_MAGIC_ITEM_2724"],
    rules: function(model) {
      model.statadd("Will Defense", function() { /* when dispel magic is used against one of your conjuration powers */ return 4; });
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Orb of Judicious Conjuration +5"] = new RulesElement({
    name: "Orb of Judicious Conjuration +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2725",
    source: "Adventurer's Vault",
    categories: ["Orb of Judicious Conjuration +5", "ID_FMP_MAGIC_ITEM_2725"],
    rules: function(model) {
      model.statadd("Will Defense", function() { /* when dispel magic is used against one of your conjuration powers */ return 5; });
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Orb of Judicious Conjuration +6"] = new RulesElement({
    name: "Orb of Judicious Conjuration +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2726",
    source: "Adventurer's Vault",
    categories: ["Orb of Judicious Conjuration +6", "ID_FMP_MAGIC_ITEM_2726"],
    rules: function(model) {
      model.statadd("Will Defense", function() { /* when dispel magic is used against one of your conjuration powers */ return 6; });
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Orb of Karmic Resonsance +3"] = new RulesElement({
    name: "Orb of Karmic Resonsance +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2727",
    source: "Adventurer's Vault",
    categories: ["Orb of Karmic Resonsance +3", "ID_FMP_MAGIC_ITEM_2727"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Orb of Karmic Resonsance +4"] = new RulesElement({
    name: "Orb of Karmic Resonsance +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2728",
    source: "Adventurer's Vault",
    categories: ["Orb of Karmic Resonsance +4", "ID_FMP_MAGIC_ITEM_2728"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Orb of Karmic Resonsance +5"] = new RulesElement({
    name: "Orb of Karmic Resonsance +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2729",
    source: "Adventurer's Vault",
    categories: ["Orb of Karmic Resonsance +5", "ID_FMP_MAGIC_ITEM_2729"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Orb of Karmic Resonsance +6"] = new RulesElement({
    name: "Orb of Karmic Resonsance +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2730",
    source: "Adventurer's Vault",
    categories: ["Orb of Karmic Resonsance +6", "ID_FMP_MAGIC_ITEM_2730"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Orb of Mental Dominion +2"] = new RulesElement({
    name: "Orb of Mental Dominion +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2731",
    source: "Adventurer's Vault",
    categories: ["Orb of Mental Dominion +2", "ID_FMP_MAGIC_ITEM_2731"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Orb of Mental Dominion +3"] = new RulesElement({
    name: "Orb of Mental Dominion +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2732",
    source: "Adventurer's Vault",
    categories: ["Orb of Mental Dominion +3", "ID_FMP_MAGIC_ITEM_2732"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Orb of Mental Dominion +4"] = new RulesElement({
    name: "Orb of Mental Dominion +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2733",
    source: "Adventurer's Vault",
    categories: ["Orb of Mental Dominion +4", "ID_FMP_MAGIC_ITEM_2733"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Orb of Mental Dominion +5"] = new RulesElement({
    name: "Orb of Mental Dominion +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2734",
    source: "Adventurer's Vault",
    categories: ["Orb of Mental Dominion +5", "ID_FMP_MAGIC_ITEM_2734"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Orb of Mental Dominion +6"] = new RulesElement({
    name: "Orb of Mental Dominion +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2735",
    source: "Adventurer's Vault",
    categories: ["Orb of Mental Dominion +6", "ID_FMP_MAGIC_ITEM_2735"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Orb of Mighty Retort +3"] = new RulesElement({
    name: "Orb of Mighty Retort +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2736",
    source: "Adventurer's Vault",
    categories: ["Orb of Mighty Retort +3", "ID_FMP_MAGIC_ITEM_2736"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Orb of Mighty Retort +4"] = new RulesElement({
    name: "Orb of Mighty Retort +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2737",
    source: "Adventurer's Vault",
    categories: ["Orb of Mighty Retort +4", "ID_FMP_MAGIC_ITEM_2737"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Orb of Mighty Retort +5"] = new RulesElement({
    name: "Orb of Mighty Retort +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2738",
    source: "Adventurer's Vault",
    categories: ["Orb of Mighty Retort +5", "ID_FMP_MAGIC_ITEM_2738"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Orb of Mighty Retort +6"] = new RulesElement({
    name: "Orb of Mighty Retort +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2739",
    source: "Adventurer's Vault",
    categories: ["Orb of Mighty Retort +6", "ID_FMP_MAGIC_ITEM_2739"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Orb of Revenant Magic +4"] = new RulesElement({
    name: "Orb of Revenant Magic +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2740",
    source: "Adventurer's Vault",
    categories: ["Orb of Revenant Magic +4", "ID_FMP_MAGIC_ITEM_2740"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Orb of Revenant Magic +5"] = new RulesElement({
    name: "Orb of Revenant Magic +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2741",
    source: "Adventurer's Vault",
    categories: ["Orb of Revenant Magic +5", "ID_FMP_MAGIC_ITEM_2741"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Orb of Revenant Magic +6"] = new RulesElement({
    name: "Orb of Revenant Magic +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2742",
    source: "Adventurer's Vault",
    categories: ["Orb of Revenant Magic +6", "ID_FMP_MAGIC_ITEM_2742"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Orb of Spatial Contortion +2"] = new RulesElement({
    name: "Orb of Spatial Contortion +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2743",
    source: "Adventurer's Vault",
    categories: ["Orb of Spatial Contortion +2", "ID_FMP_MAGIC_ITEM_2743"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Orb of Spatial Contortion +3"] = new RulesElement({
    name: "Orb of Spatial Contortion +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2744",
    source: "Adventurer's Vault",
    categories: ["Orb of Spatial Contortion +3", "ID_FMP_MAGIC_ITEM_2744"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Orb of Spatial Contortion +4"] = new RulesElement({
    name: "Orb of Spatial Contortion +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2745",
    source: "Adventurer's Vault",
    categories: ["Orb of Spatial Contortion +4", "ID_FMP_MAGIC_ITEM_2745"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Orb of Spatial Contortion +5"] = new RulesElement({
    name: "Orb of Spatial Contortion +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2746",
    source: "Adventurer's Vault",
    categories: ["Orb of Spatial Contortion +5", "ID_FMP_MAGIC_ITEM_2746"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Orb of Spatial Contortion +6"] = new RulesElement({
    name: "Orb of Spatial Contortion +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2747",
    source: "Adventurer's Vault",
    categories: ["Orb of Spatial Contortion +6", "ID_FMP_MAGIC_ITEM_2747"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Orb of Sudden Insanity +3"] = new RulesElement({
    name: "Orb of Sudden Insanity +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2748",
    source: "Adventurer's Vault",
    categories: ["Orb of Sudden Insanity +3", "ID_FMP_MAGIC_ITEM_2748"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Orb of Sudden Insanity +4"] = new RulesElement({
    name: "Orb of Sudden Insanity +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2749",
    source: "Adventurer's Vault",
    categories: ["Orb of Sudden Insanity +4", "ID_FMP_MAGIC_ITEM_2749"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Orb of Sudden Insanity +5"] = new RulesElement({
    name: "Orb of Sudden Insanity +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2750",
    source: "Adventurer's Vault",
    categories: ["Orb of Sudden Insanity +5", "ID_FMP_MAGIC_ITEM_2750"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Orb of Sudden Insanity +6"] = new RulesElement({
    name: "Orb of Sudden Insanity +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2751",
    source: "Adventurer's Vault",
    categories: ["Orb of Sudden Insanity +6", "ID_FMP_MAGIC_ITEM_2751"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Orb of Sweet Sanctuary +1"] = new RulesElement({
    name: "Orb of Sweet Sanctuary +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2752",
    source: "Adventurer's Vault",
    categories: ["Orb of Sweet Sanctuary +1", "ID_FMP_MAGIC_ITEM_2752"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Orb of Sweet Sanctuary +2"] = new RulesElement({
    name: "Orb of Sweet Sanctuary +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2753",
    source: "Adventurer's Vault",
    categories: ["Orb of Sweet Sanctuary +2", "ID_FMP_MAGIC_ITEM_2753"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Orb of Sweet Sanctuary +3"] = new RulesElement({
    name: "Orb of Sweet Sanctuary +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2754",
    source: "Adventurer's Vault",
    categories: ["Orb of Sweet Sanctuary +3", "ID_FMP_MAGIC_ITEM_2754"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Orb of Sweet Sanctuary +4"] = new RulesElement({
    name: "Orb of Sweet Sanctuary +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2755",
    source: "Adventurer's Vault",
    categories: ["Orb of Sweet Sanctuary +4", "ID_FMP_MAGIC_ITEM_2755"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Orb of Sweet Sanctuary +5"] = new RulesElement({
    name: "Orb of Sweet Sanctuary +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2756",
    source: "Adventurer's Vault",
    categories: ["Orb of Sweet Sanctuary +5", "ID_FMP_MAGIC_ITEM_2756"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Orb of Sweet Sanctuary +6"] = new RulesElement({
    name: "Orb of Sweet Sanctuary +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2757",
    source: "Adventurer's Vault",
    categories: ["Orb of Sweet Sanctuary +6", "ID_FMP_MAGIC_ITEM_2757"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Orb of the Usurper +5"] = new RulesElement({
    name: "Orb of the Usurper +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2758",
    source: "Adventurer's Vault",
    categories: ["Orb of the Usurper +5", "ID_FMP_MAGIC_ITEM_2758"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Orb of the Usurper +6"] = new RulesElement({
    name: "Orb of the Usurper +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2759",
    source: "Adventurer's Vault",
    categories: ["Orb of the Usurper +6", "ID_FMP_MAGIC_ITEM_2759"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Orb of Ultimate Imposition +1"] = new RulesElement({
    name: "Orb of Ultimate Imposition +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2760",
    source: "Adventurer's Vault",
    categories: ["Orb of Ultimate Imposition +1", "ID_FMP_MAGIC_ITEM_2760"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Orb of Ultimate Imposition +2"] = new RulesElement({
    name: "Orb of Ultimate Imposition +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2761",
    source: "Adventurer's Vault",
    categories: ["Orb of Ultimate Imposition +2", "ID_FMP_MAGIC_ITEM_2761"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Orb of Ultimate Imposition +3"] = new RulesElement({
    name: "Orb of Ultimate Imposition +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2762",
    source: "Adventurer's Vault",
    categories: ["Orb of Ultimate Imposition +3", "ID_FMP_MAGIC_ITEM_2762"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Orb of Ultimate Imposition +4"] = new RulesElement({
    name: "Orb of Ultimate Imposition +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2763",
    source: "Adventurer's Vault",
    categories: ["Orb of Ultimate Imposition +4", "ID_FMP_MAGIC_ITEM_2763"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Orb of Ultimate Imposition +5"] = new RulesElement({
    name: "Orb of Ultimate Imposition +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2764",
    source: "Adventurer's Vault",
    categories: ["Orb of Ultimate Imposition +5", "ID_FMP_MAGIC_ITEM_2764"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Orb of Ultimate Imposition +6"] = new RulesElement({
    name: "Orb of Ultimate Imposition +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2765",
    source: "Adventurer's Vault",
    categories: ["Orb of Ultimate Imposition +6", "ID_FMP_MAGIC_ITEM_2765"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Orb of Unintended Solitude +4"] = new RulesElement({
    name: "Orb of Unintended Solitude +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2766",
    source: "Adventurer's Vault",
    categories: ["Orb of Unintended Solitude +4", "ID_FMP_MAGIC_ITEM_2766"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Orb of Unintended Solitude +5"] = new RulesElement({
    name: "Orb of Unintended Solitude +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2767",
    source: "Adventurer's Vault",
    categories: ["Orb of Unintended Solitude +5", "ID_FMP_MAGIC_ITEM_2767"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Orb of Unintended Solitude +6"] = new RulesElement({
    name: "Orb of Unintended Solitude +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2768",
    source: "Adventurer's Vault",
    categories: ["Orb of Unintended Solitude +6", "ID_FMP_MAGIC_ITEM_2768"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Orb of Unlucky Exchanges +1"] = new RulesElement({
    name: "Orb of Unlucky Exchanges +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2769",
    source: "Adventurer's Vault",
    categories: ["Orb of Unlucky Exchanges +1", "ID_FMP_MAGIC_ITEM_2769"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Orb of Unlucky Exchanges +2"] = new RulesElement({
    name: "Orb of Unlucky Exchanges +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2770",
    source: "Adventurer's Vault",
    categories: ["Orb of Unlucky Exchanges +2", "ID_FMP_MAGIC_ITEM_2770"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Orb of Unlucky Exchanges +3"] = new RulesElement({
    name: "Orb of Unlucky Exchanges +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2771",
    source: "Adventurer's Vault",
    categories: ["Orb of Unlucky Exchanges +3", "ID_FMP_MAGIC_ITEM_2771"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Orb of Unlucky Exchanges +4"] = new RulesElement({
    name: "Orb of Unlucky Exchanges +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2772",
    source: "Adventurer's Vault",
    categories: ["Orb of Unlucky Exchanges +4", "ID_FMP_MAGIC_ITEM_2772"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Orb of Unlucky Exchanges +5"] = new RulesElement({
    name: "Orb of Unlucky Exchanges +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2773",
    source: "Adventurer's Vault",
    categories: ["Orb of Unlucky Exchanges +5", "ID_FMP_MAGIC_ITEM_2773"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Orb of Unlucky Exchanges +6"] = new RulesElement({
    name: "Orb of Unlucky Exchanges +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2774",
    source: "Adventurer's Vault",
    categories: ["Orb of Unlucky Exchanges +6", "ID_FMP_MAGIC_ITEM_2774"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Orb of Weakness Intensified +3"] = new RulesElement({
    name: "Orb of Weakness Intensified +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2775",
    source: "Adventurer's Vault",
    categories: ["Orb of Weakness Intensified +3", "ID_FMP_MAGIC_ITEM_2775"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Orb of Weakness Intensified +4"] = new RulesElement({
    name: "Orb of Weakness Intensified +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2776",
    source: "Adventurer's Vault",
    categories: ["Orb of Weakness Intensified +4", "ID_FMP_MAGIC_ITEM_2776"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Orb of Weakness Intensified +5"] = new RulesElement({
    name: "Orb of Weakness Intensified +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2777",
    source: "Adventurer's Vault",
    categories: ["Orb of Weakness Intensified +5", "ID_FMP_MAGIC_ITEM_2777"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Orb of Weakness Intensified +6"] = new RulesElement({
    name: "Orb of Weakness Intensified +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2778",
    source: "Adventurer's Vault",
    categories: ["Orb of Weakness Intensified +6", "ID_FMP_MAGIC_ITEM_2778"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Ornament of Alertness +1"] = new RulesElement({
    name: "Ornament of Alertness +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3684",
    source: "Adventurer's Vault",
    categories: ["Ornament of Alertness +1", "ID_FMP_MAGIC_ITEM_3684"],
    rules: function(model) {
      model.statadd("Perception Misc", 1, "item");
      model.statadd("Fortitude Defense", 1, "Enhancement");
      model.statadd("Reflex Defense", 1, "Enhancement");
      model.statadd("Will Defense", 1, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Ornament of Alertness +2"] = new RulesElement({
    name: "Ornament of Alertness +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3685",
    source: "Adventurer's Vault",
    categories: ["Ornament of Alertness +2", "ID_FMP_MAGIC_ITEM_3685"],
    rules: function(model) {
      model.statadd("Perception Misc", 2, "item");
      model.statadd("Fortitude Defense", 2, "Enhancement");
      model.statadd("Reflex Defense", 2, "Enhancement");
      model.statadd("Will Defense", 2, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Ornament of Alertness +3"] = new RulesElement({
    name: "Ornament of Alertness +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3686",
    source: "Adventurer's Vault",
    categories: ["Ornament of Alertness +3", "ID_FMP_MAGIC_ITEM_3686"],
    rules: function(model) {
      model.statadd("Perception Misc", 3, "item");
      model.statadd("Fortitude Defense", 3, "Enhancement");
      model.statadd("Reflex Defense", 3, "Enhancement");
      model.statadd("Will Defense", 3, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Ornament of Alertness +4"] = new RulesElement({
    name: "Ornament of Alertness +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3687",
    source: "Adventurer's Vault",
    categories: ["Ornament of Alertness +4", "ID_FMP_MAGIC_ITEM_3687"],
    rules: function(model) {
      model.statadd("Perception Misc", 4, "item");
      model.statadd("Fortitude Defense", 4, "Enhancement");
      model.statadd("Reflex Defense", 4, "Enhancement");
      model.statadd("Will Defense", 4, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Ornament of Alertness +5"] = new RulesElement({
    name: "Ornament of Alertness +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3688",
    source: "Adventurer's Vault",
    categories: ["Ornament of Alertness +5", "ID_FMP_MAGIC_ITEM_3688"],
    rules: function(model) {
      model.statadd("Perception Misc", 5, "item");
      model.statadd("Fortitude Defense", 5, "Enhancement");
      model.statadd("Reflex Defense", 5, "Enhancement");
      model.statadd("Will Defense", 5, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Ornament of Alertness +6"] = new RulesElement({
    name: "Ornament of Alertness +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3689",
    source: "Adventurer's Vault",
    categories: ["Ornament of Alertness +6", "ID_FMP_MAGIC_ITEM_3689"],
    rules: function(model) {
      model.statadd("Perception Misc", 6, "item");
      model.statadd("Fortitude Defense", 6, "Enhancement");
      model.statadd("Reflex Defense", 6, "Enhancement");
      model.statadd("Will Defense", 6, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Overreaching Weapon +5"] = new RulesElement({
    name: "Overreaching Weapon +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2225",
    source: "Adventurer's Vault",
    categories: ["Overreaching Weapon +5", "ID_FMP_MAGIC_ITEM_2225"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Overreaching Weapon +6"] = new RulesElement({
    name: "Overreaching Weapon +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2226",
    source: "Adventurer's Vault",
    categories: ["Overreaching Weapon +6", "ID_FMP_MAGIC_ITEM_2226"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Pact Hammer +1"] = new RulesElement({
    name: "Pact Hammer +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2227",
    source: "Adventurer's Vault",
    categories: ["Pact Hammer +1", "ID_FMP_MAGIC_ITEM_2227"],
    rules: function(model) {
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Pact Hammer +2"] = new RulesElement({
    name: "Pact Hammer +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2228",
    source: "Adventurer's Vault",
    categories: ["Pact Hammer +2", "ID_FMP_MAGIC_ITEM_2228"],
    rules: function(model) {
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Pact Hammer +3"] = new RulesElement({
    name: "Pact Hammer +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2229",
    source: "Adventurer's Vault",
    categories: ["Pact Hammer +3", "ID_FMP_MAGIC_ITEM_2229"],
    rules: function(model) {
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Pact Hammer +4"] = new RulesElement({
    name: "Pact Hammer +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2230",
    source: "Adventurer's Vault",
    categories: ["Pact Hammer +4", "ID_FMP_MAGIC_ITEM_2230"],
    rules: function(model) {
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Pact Hammer +5"] = new RulesElement({
    name: "Pact Hammer +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2231",
    source: "Adventurer's Vault",
    categories: ["Pact Hammer +5", "ID_FMP_MAGIC_ITEM_2231"],
    rules: function(model) {
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Pact Hammer +6"] = new RulesElement({
    name: "Pact Hammer +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2232",
    source: "Adventurer's Vault",
    categories: ["Pact Hammer +6", "ID_FMP_MAGIC_ITEM_2232"],
    rules: function(model) {
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Pact Sword +1"] = new RulesElement({
    name: "Pact Sword +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2233",
    source: "Adventurer's Vault",
    categories: ["Pact Sword +1", "ID_FMP_MAGIC_ITEM_2233"],
    rules: function(model) {
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Pact Sword +2"] = new RulesElement({
    name: "Pact Sword +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2234",
    source: "Adventurer's Vault",
    categories: ["Pact Sword +2", "ID_FMP_MAGIC_ITEM_2234"],
    rules: function(model) {
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Pact Sword +3"] = new RulesElement({
    name: "Pact Sword +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2235",
    source: "Adventurer's Vault",
    categories: ["Pact Sword +3", "ID_FMP_MAGIC_ITEM_2235"],
    rules: function(model) {
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Pact Sword +4"] = new RulesElement({
    name: "Pact Sword +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2236",
    source: "Adventurer's Vault",
    categories: ["Pact Sword +4", "ID_FMP_MAGIC_ITEM_2236"],
    rules: function(model) {
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Pact Sword +5"] = new RulesElement({
    name: "Pact Sword +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2237",
    source: "Adventurer's Vault",
    categories: ["Pact Sword +5", "ID_FMP_MAGIC_ITEM_2237"],
    rules: function(model) {
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Pact Sword +6"] = new RulesElement({
    name: "Pact Sword +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2238",
    source: "Adventurer's Vault",
    categories: ["Pact Sword +6", "ID_FMP_MAGIC_ITEM_2238"],
    rules: function(model) {
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Paired Weapon +1"] = new RulesElement({
    name: "Paired Weapon +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2239",
    source: "Adventurer's Vault",
    categories: ["Paired Weapon +1", "ID_FMP_MAGIC_ITEM_2239"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Paired Weapon +2"] = new RulesElement({
    name: "Paired Weapon +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2240",
    source: "Adventurer's Vault",
    categories: ["Paired Weapon +2", "ID_FMP_MAGIC_ITEM_2240"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Paired Weapon +3"] = new RulesElement({
    name: "Paired Weapon +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2241",
    source: "Adventurer's Vault",
    categories: ["Paired Weapon +3", "ID_FMP_MAGIC_ITEM_2241"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Paired Weapon +4"] = new RulesElement({
    name: "Paired Weapon +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2242",
    source: "Adventurer's Vault",
    categories: ["Paired Weapon +4", "ID_FMP_MAGIC_ITEM_2242"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Paired Weapon +5"] = new RulesElement({
    name: "Paired Weapon +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2243",
    source: "Adventurer's Vault",
    categories: ["Paired Weapon +5", "ID_FMP_MAGIC_ITEM_2243"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Paired Weapon +6"] = new RulesElement({
    name: "Paired Weapon +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2244",
    source: "Adventurer's Vault",
    categories: ["Paired Weapon +6", "ID_FMP_MAGIC_ITEM_2244"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Paralyzing Weapon +3"] = new RulesElement({
    name: "Paralyzing Weapon +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2245",
    source: "Adventurer's Vault",
    categories: ["Paralyzing Weapon +3", "ID_FMP_MAGIC_ITEM_2245"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Paralyzing Weapon +4"] = new RulesElement({
    name: "Paralyzing Weapon +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2246",
    source: "Adventurer's Vault",
    categories: ["Paralyzing Weapon +4", "ID_FMP_MAGIC_ITEM_2246"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Paralyzing Weapon +5"] = new RulesElement({
    name: "Paralyzing Weapon +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2247",
    source: "Adventurer's Vault",
    categories: ["Paralyzing Weapon +5", "ID_FMP_MAGIC_ITEM_2247"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Paralyzing Weapon +6"] = new RulesElement({
    name: "Paralyzing Weapon +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2248",
    source: "Adventurer's Vault",
    categories: ["Paralyzing Weapon +6", "ID_FMP_MAGIC_ITEM_2248"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Parry Gauntlets (heroic tier)"] = new RulesElement({
    name: "Parry Gauntlets (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3409",
    source: "Adventurer's Vault",
    categories: ["Parry Gauntlets (heroic tier)", "ID_FMP_MAGIC_ITEM_3409"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Parrying Weapon +1"] = new RulesElement({
    name: "Parrying Weapon +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2249",
    source: "Adventurer's Vault",
    categories: ["Parrying Weapon +1", "ID_FMP_MAGIC_ITEM_2249"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Parrying Weapon +2"] = new RulesElement({
    name: "Parrying Weapon +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2250",
    source: "Adventurer's Vault",
    categories: ["Parrying Weapon +2", "ID_FMP_MAGIC_ITEM_2250"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Parrying Weapon +3"] = new RulesElement({
    name: "Parrying Weapon +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2251",
    source: "Adventurer's Vault",
    categories: ["Parrying Weapon +3", "ID_FMP_MAGIC_ITEM_2251"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Parrying Weapon +4"] = new RulesElement({
    name: "Parrying Weapon +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2252",
    source: "Adventurer's Vault",
    categories: ["Parrying Weapon +4", "ID_FMP_MAGIC_ITEM_2252"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Parrying Weapon +5"] = new RulesElement({
    name: "Parrying Weapon +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2253",
    source: "Adventurer's Vault",
    categories: ["Parrying Weapon +5", "ID_FMP_MAGIC_ITEM_2253"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Parrying Weapon +6"] = new RulesElement({
    name: "Parrying Weapon +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2254",
    source: "Adventurer's Vault",
    categories: ["Parrying Weapon +6", "ID_FMP_MAGIC_ITEM_2254"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Peacemaker's Periapt +2"] = new RulesElement({
    name: "Peacemaker's Periapt +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3690",
    source: "Adventurer's Vault",
    categories: ["Peacemaker's Periapt +2", "ID_FMP_MAGIC_ITEM_3690"],
    rules: function(model) {
      model.statadd("Diplomacy Misc", 2, "item");
      model.statadd("Fortitude Defense", 2, "Enhancement");
      model.statadd("Reflex Defense", 2, "Enhancement");
      model.statadd("Will Defense", 2, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Peacemaker's Periapt +3"] = new RulesElement({
    name: "Peacemaker's Periapt +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3691",
    source: "Adventurer's Vault",
    categories: ["Peacemaker's Periapt +3", "ID_FMP_MAGIC_ITEM_3691"],
    rules: function(model) {
      model.statadd("Diplomacy Misc", 3, "item");
      model.statadd("Fortitude Defense", 3, "Enhancement");
      model.statadd("Reflex Defense", 3, "Enhancement");
      model.statadd("Will Defense", 3, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Peacemaker's Periapt +4"] = new RulesElement({
    name: "Peacemaker's Periapt +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3692",
    source: "Adventurer's Vault",
    categories: ["Peacemaker's Periapt +4", "ID_FMP_MAGIC_ITEM_3692"],
    rules: function(model) {
      model.statadd("Diplomacy Misc", 4, "item");
      model.statadd("Fortitude Defense", 4, "Enhancement");
      model.statadd("Reflex Defense", 4, "Enhancement");
      model.statadd("Will Defense", 4, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Peacemaker's Periapt +5"] = new RulesElement({
    name: "Peacemaker's Periapt +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3693",
    source: "Adventurer's Vault",
    categories: ["Peacemaker's Periapt +5", "ID_FMP_MAGIC_ITEM_3693"],
    rules: function(model) {
      model.statadd("Diplomacy Misc", 5, "item");
      model.statadd("Fortitude Defense", 5, "Enhancement");
      model.statadd("Reflex Defense", 5, "Enhancement");
      model.statadd("Will Defense", 5, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Peacemaker's Periapt +6"] = new RulesElement({
    name: "Peacemaker's Periapt +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3694",
    source: "Adventurer's Vault",
    categories: ["Peacemaker's Periapt +6", "ID_FMP_MAGIC_ITEM_3694"],
    rules: function(model) {
      model.statadd("Diplomacy Misc", 6, "item");
      model.statadd("Fortitude Defense", 6, "Enhancement");
      model.statadd("Reflex Defense", 6, "Enhancement");
      model.statadd("Will Defense", 6, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Pearl Sea Horse (heroic tier)"] = new RulesElement({
    name: "Pearl Sea Horse (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3916",
    source: "Adventurer's Vault",
    categories: ["Pearl Sea Horse (heroic tier)", "ID_FMP_MAGIC_ITEM_3916"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Pelaurum Armor +1"] = new RulesElement({
    name: "Pelaurum Armor +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1674",
    source: "Adventurer's Vault",
    categories: ["Pelaurum Armor +1", "ID_FMP_MAGIC_ITEM_1674"],
    rules: function(model) {
      model.statadd("resist:fire", 5, "resist");
      model.statadd("resist:radiant", 5, "resist");
      model.statadd("Armor Class", 1, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 1);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Pelaurum Armor +2"] = new RulesElement({
    name: "Pelaurum Armor +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1675",
    source: "Adventurer's Vault",
    categories: ["Pelaurum Armor +2", "ID_FMP_MAGIC_ITEM_1675"],
    rules: function(model) {
      model.statadd("resist:fire", 5, "resist");
      model.statadd("resist:radiant", 5, "resist");
      model.statadd("Armor Class", 2, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 2);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Pelaurum Armor +3"] = new RulesElement({
    name: "Pelaurum Armor +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1676",
    source: "Adventurer's Vault",
    categories: ["Pelaurum Armor +3", "ID_FMP_MAGIC_ITEM_1676"],
    rules: function(model) {
      model.statadd("resist:fire", 10, "resist");
      model.statadd("resist:radiant", 10, "resist");
      model.statadd("Armor Class", 3, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 3);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Pelaurum Armor +4"] = new RulesElement({
    name: "Pelaurum Armor +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1677",
    source: "Adventurer's Vault",
    categories: ["Pelaurum Armor +4", "ID_FMP_MAGIC_ITEM_1677"],
    rules: function(model) {
      model.statadd("resist:fire", 10, "resist");
      model.statadd("resist:radiant", 10, "resist");
      model.statadd("Armor Class", 4, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 4);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Pelaurum Armor +5"] = new RulesElement({
    name: "Pelaurum Armor +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1678",
    source: "Adventurer's Vault",
    categories: ["Pelaurum Armor +5", "ID_FMP_MAGIC_ITEM_1678"],
    rules: function(model) {
      model.statadd("resist:fire", 15, "resist");
      model.statadd("resist:radiant", 15, "resist");
      model.statadd("Armor Class", 5, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 5);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Pelaurum Armor +6"] = new RulesElement({
    name: "Pelaurum Armor +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1679",
    source: "Adventurer's Vault",
    categories: ["Pelaurum Armor +6", "ID_FMP_MAGIC_ITEM_1679"],
    rules: function(model) {
      model.statadd("resist:fire", 15, "resist");
      model.statadd("resist:radiant", 15, "resist");
      model.statadd("Armor Class", 6, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 6);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Pelaurum Shield (epic tier)"] = new RulesElement({
    name: "Pelaurum Shield (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3253",
    source: "Adventurer's Vault",
    categories: ["Pelaurum Shield (epic tier)", "ID_FMP_MAGIC_ITEM_3253"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Pelaurum Shield (heroic tier)"] = new RulesElement({
    name: "Pelaurum Shield (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3251",
    source: "Adventurer's Vault",
    categories: ["Pelaurum Shield (heroic tier)", "ID_FMP_MAGIC_ITEM_3251"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Pelaurum Shield (paragon tier)"] = new RulesElement({
    name: "Pelaurum Shield (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3252",
    source: "Adventurer's Vault",
    categories: ["Pelaurum Shield (paragon tier)", "ID_FMP_MAGIC_ITEM_3252"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Periapt of Recovery +2"] = new RulesElement({
    name: "Periapt of Recovery +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3695",
    source: "Adventurer's Vault",
    categories: ["Periapt of Recovery +2", "ID_FMP_MAGIC_ITEM_3695"],
    rules: function(model) {
      model.statadd("Death Saving Throws", 2, "item");
      model.statadd("Fortitude Defense", 2, "Enhancement");
      model.statadd("Reflex Defense", 2, "Enhancement");
      model.statadd("Will Defense", 2, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Periapt of Recovery +3"] = new RulesElement({
    name: "Periapt of Recovery +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3696",
    source: "Adventurer's Vault",
    categories: ["Periapt of Recovery +3", "ID_FMP_MAGIC_ITEM_3696"],
    rules: function(model) {
      model.statadd("Death Saving Throws", 2, "item");
      model.statadd("Fortitude Defense", 3, "Enhancement");
      model.statadd("Reflex Defense", 3, "Enhancement");
      model.statadd("Will Defense", 3, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Periapt of Recovery +4"] = new RulesElement({
    name: "Periapt of Recovery +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3697",
    source: "Adventurer's Vault",
    categories: ["Periapt of Recovery +4", "ID_FMP_MAGIC_ITEM_3697"],
    rules: function(model) {
      model.statadd("Death Saving Throws", 2, "item");
      model.statadd("Fortitude Defense", 4, "Enhancement");
      model.statadd("Reflex Defense", 4, "Enhancement");
      model.statadd("Will Defense", 4, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Periapt of Recovery +5"] = new RulesElement({
    name: "Periapt of Recovery +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3698",
    source: "Adventurer's Vault",
    categories: ["Periapt of Recovery +5", "ID_FMP_MAGIC_ITEM_3698"],
    rules: function(model) {
      model.statadd("Death Saving Throws", 2, "item");
      model.statadd("Fortitude Defense", 5, "Enhancement");
      model.statadd("Reflex Defense", 5, "Enhancement");
      model.statadd("Will Defense", 5, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Periapt of Recovery +6"] = new RulesElement({
    name: "Periapt of Recovery +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3699",
    source: "Adventurer's Vault",
    categories: ["Periapt of Recovery +6", "ID_FMP_MAGIC_ITEM_3699"],
    rules: function(model) {
      model.statadd("Death Saving Throws", 2, "item");
      model.statadd("Fortitude Defense", 6, "Enhancement");
      model.statadd("Reflex Defense", 6, "Enhancement");
      model.statadd("Will Defense", 6, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Phantom Chaussures (paragon tier)"] = new RulesElement({
    name: "Phantom Chaussures (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3342",
    source: "Adventurer's Vault",
    categories: ["Phantom Chaussures (paragon tier)", "ID_FMP_MAGIC_ITEM_3342"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Phantom Soldier (heroic tier)"] = new RulesElement({
    name: "Phantom Soldier (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3874",
    source: "Adventurer's Vault",
    categories: ["Phantom Soldier (heroic tier)", "ID_FMP_MAGIC_ITEM_3874"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Phrenic Crown (epic tier)"] = new RulesElement({
    name: "Phrenic Crown (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3497",
    source: "Adventurer's Vault",
    categories: ["Phrenic Crown (epic tier)", "ID_FMP_MAGIC_ITEM_3497"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Phrenic Crown (heroic tier)"] = new RulesElement({
    name: "Phrenic Crown (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3495",
    source: "Adventurer's Vault",
    categories: ["Phrenic Crown (heroic tier)", "ID_FMP_MAGIC_ITEM_3495"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Phrenic Crown (paragon tier)"] = new RulesElement({
    name: "Phrenic Crown (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3496",
    source: "Adventurer's Vault",
    categories: ["Phrenic Crown (paragon tier)", "ID_FMP_MAGIC_ITEM_3496"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Phylactery of Divinity (heroic tier)"] = new RulesElement({
    name: "Phylactery of Divinity (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3498",
    source: "Adventurer's Vault",
    categories: ["Phylactery of Divinity (heroic tier)", "ID_FMP_MAGIC_ITEM_3498"],
    rules: function(model) {
      model.statadd("Heal Misc", 2, "item");
      model.statadd("Religion Misc", 2, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Piercing Weapon +2"] = new RulesElement({
    name: "Piercing Weapon +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2255",
    source: "Adventurer's Vault",
    categories: ["Piercing Weapon +2", "ID_FMP_MAGIC_ITEM_2255"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Piercing Weapon +3"] = new RulesElement({
    name: "Piercing Weapon +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2256",
    source: "Adventurer's Vault",
    categories: ["Piercing Weapon +3", "ID_FMP_MAGIC_ITEM_2256"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Piercing Weapon +4"] = new RulesElement({
    name: "Piercing Weapon +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2257",
    source: "Adventurer's Vault",
    categories: ["Piercing Weapon +4", "ID_FMP_MAGIC_ITEM_2257"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Piercing Weapon +5"] = new RulesElement({
    name: "Piercing Weapon +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2258",
    source: "Adventurer's Vault",
    categories: ["Piercing Weapon +5", "ID_FMP_MAGIC_ITEM_2258"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Piercing Weapon +6"] = new RulesElement({
    name: "Piercing Weapon +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2259",
    source: "Adventurer's Vault",
    categories: ["Piercing Weapon +6", "ID_FMP_MAGIC_ITEM_2259"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Pinning Weapon +1"] = new RulesElement({
    name: "Pinning Weapon +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2260",
    source: "Adventurer's Vault",
    categories: ["Pinning Weapon +1", "ID_FMP_MAGIC_ITEM_2260"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Pinning Weapon +2"] = new RulesElement({
    name: "Pinning Weapon +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2261",
    source: "Adventurer's Vault",
    categories: ["Pinning Weapon +2", "ID_FMP_MAGIC_ITEM_2261"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Pinning Weapon +3"] = new RulesElement({
    name: "Pinning Weapon +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2262",
    source: "Adventurer's Vault",
    categories: ["Pinning Weapon +3", "ID_FMP_MAGIC_ITEM_2262"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Pinning Weapon +4"] = new RulesElement({
    name: "Pinning Weapon +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2263",
    source: "Adventurer's Vault",
    categories: ["Pinning Weapon +4", "ID_FMP_MAGIC_ITEM_2263"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Pinning Weapon +5"] = new RulesElement({
    name: "Pinning Weapon +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2264",
    source: "Adventurer's Vault",
    categories: ["Pinning Weapon +5", "ID_FMP_MAGIC_ITEM_2264"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Pinning Weapon +6"] = new RulesElement({
    name: "Pinning Weapon +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2265",
    source: "Adventurer's Vault",
    categories: ["Pinning Weapon +6", "ID_FMP_MAGIC_ITEM_2265"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Point Blank Weapon +1"] = new RulesElement({
    name: "Point Blank Weapon +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2266",
    source: "Adventurer's Vault",
    categories: ["Point Blank Weapon +1", "ID_FMP_MAGIC_ITEM_2266"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Point Blank Weapon +2"] = new RulesElement({
    name: "Point Blank Weapon +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2267",
    source: "Adventurer's Vault",
    categories: ["Point Blank Weapon +2", "ID_FMP_MAGIC_ITEM_2267"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Point Blank Weapon +3"] = new RulesElement({
    name: "Point Blank Weapon +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2268",
    source: "Adventurer's Vault",
    categories: ["Point Blank Weapon +3", "ID_FMP_MAGIC_ITEM_2268"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Point Blank Weapon +4"] = new RulesElement({
    name: "Point Blank Weapon +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2269",
    source: "Adventurer's Vault",
    categories: ["Point Blank Weapon +4", "ID_FMP_MAGIC_ITEM_2269"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Point Blank Weapon +5"] = new RulesElement({
    name: "Point Blank Weapon +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2270",
    source: "Adventurer's Vault",
    categories: ["Point Blank Weapon +5", "ID_FMP_MAGIC_ITEM_2270"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Point Blank Weapon +6"] = new RulesElement({
    name: "Point Blank Weapon +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2271",
    source: "Adventurer's Vault",
    categories: ["Point Blank Weapon +6", "ID_FMP_MAGIC_ITEM_2271"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Poisoned Weapon +1"] = new RulesElement({
    name: "Poisoned Weapon +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2272",
    source: "Adventurer's Vault",
    categories: ["Poisoned Weapon +1", "ID_FMP_MAGIC_ITEM_2272"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Poisoned Weapon +2"] = new RulesElement({
    name: "Poisoned Weapon +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2273",
    source: "Adventurer's Vault",
    categories: ["Poisoned Weapon +2", "ID_FMP_MAGIC_ITEM_2273"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Poisoned Weapon +3"] = new RulesElement({
    name: "Poisoned Weapon +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2274",
    source: "Adventurer's Vault",
    categories: ["Poisoned Weapon +3", "ID_FMP_MAGIC_ITEM_2274"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Poisoned Weapon +4"] = new RulesElement({
    name: "Poisoned Weapon +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2275",
    source: "Adventurer's Vault",
    categories: ["Poisoned Weapon +4", "ID_FMP_MAGIC_ITEM_2275"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Poisoned Weapon +5"] = new RulesElement({
    name: "Poisoned Weapon +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2276",
    source: "Adventurer's Vault",
    categories: ["Poisoned Weapon +5", "ID_FMP_MAGIC_ITEM_2276"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Poisoned Weapon +6"] = new RulesElement({
    name: "Poisoned Weapon +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2277",
    source: "Adventurer's Vault",
    categories: ["Poisoned Weapon +6", "ID_FMP_MAGIC_ITEM_2277"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Polyglot Gem (heroic tier)"] = new RulesElement({
    name: "Polyglot Gem (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3875",
    source: "Adventurer's Vault",
    categories: ["Polyglot Gem (heroic tier)", "ID_FMP_MAGIC_ITEM_3875"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Potion of Clarity (level 10)"] = new RulesElement({
    name: "Potion of Clarity (level 10)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3926",
    source: "Adventurer's Vault",
    categories: ["Potion of Clarity (level 10)", "ID_FMP_MAGIC_ITEM_3926"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Potion of Clarity (level 15)"] = new RulesElement({
    name: "Potion of Clarity (level 15)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3927",
    source: "Adventurer's Vault",
    categories: ["Potion of Clarity (level 15)", "ID_FMP_MAGIC_ITEM_3927"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Potion of Clarity (level 20)"] = new RulesElement({
    name: "Potion of Clarity (level 20)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3928",
    source: "Adventurer's Vault",
    categories: ["Potion of Clarity (level 20)", "ID_FMP_MAGIC_ITEM_3928"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Potion of Clarity (level 25)"] = new RulesElement({
    name: "Potion of Clarity (level 25)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3929",
    source: "Adventurer's Vault",
    categories: ["Potion of Clarity (level 25)", "ID_FMP_MAGIC_ITEM_3929"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Potion of Clarity (level 30)"] = new RulesElement({
    name: "Potion of Clarity (level 30)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3930",
    source: "Adventurer's Vault",
    categories: ["Potion of Clarity (level 30)", "ID_FMP_MAGIC_ITEM_3930"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Potion of Clarity (level 5)"] = new RulesElement({
    name: "Potion of Clarity (level 5)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3925",
    source: "Adventurer's Vault",
    categories: ["Potion of Clarity (level 5)", "ID_FMP_MAGIC_ITEM_3925"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Potion of Lifeshield (epic tier)"] = new RulesElement({
    name: "Potion of Lifeshield (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3933",
    source: "Adventurer's Vault",
    categories: ["Potion of Lifeshield (epic tier)", "ID_FMP_MAGIC_ITEM_3933"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Potion of Lifeshield (heroic tier)"] = new RulesElement({
    name: "Potion of Lifeshield (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3931",
    source: "Adventurer's Vault",
    categories: ["Potion of Lifeshield (heroic tier)", "ID_FMP_MAGIC_ITEM_3931"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Potion of Lifeshield (paragon tier)"] = new RulesElement({
    name: "Potion of Lifeshield (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3932",
    source: "Adventurer's Vault",
    categories: ["Potion of Lifeshield (paragon tier)", "ID_FMP_MAGIC_ITEM_3932"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Potion of Mimicry (epic tier)"] = new RulesElement({
    name: "Potion of Mimicry (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3936",
    source: "Adventurer's Vault",
    categories: ["Potion of Mimicry (epic tier)", "ID_FMP_MAGIC_ITEM_3936"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Potion of Mimicry (heroic tier)"] = new RulesElement({
    name: "Potion of Mimicry (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3934",
    source: "Adventurer's Vault",
    categories: ["Potion of Mimicry (heroic tier)", "ID_FMP_MAGIC_ITEM_3934"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Potion of Mimicry (paragon tier)"] = new RulesElement({
    name: "Potion of Mimicry (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3935",
    source: "Adventurer's Vault",
    categories: ["Potion of Mimicry (paragon tier)", "ID_FMP_MAGIC_ITEM_3935"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Potion of Regeneration (epic tier)"] = new RulesElement({
    name: "Potion of Regeneration (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3939",
    source: "Adventurer's Vault",
    categories: ["Potion of Regeneration (epic tier)", "ID_FMP_MAGIC_ITEM_3939"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Potion of Regeneration (heroic tier)"] = new RulesElement({
    name: "Potion of Regeneration (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3937",
    source: "Adventurer's Vault",
    categories: ["Potion of Regeneration (heroic tier)", "ID_FMP_MAGIC_ITEM_3937"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Potion of Regeneration (paragon tier)"] = new RulesElement({
    name: "Potion of Regeneration (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3938",
    source: "Adventurer's Vault",
    categories: ["Potion of Regeneration (paragon tier)", "ID_FMP_MAGIC_ITEM_3938"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Potion of Resistance (epic tier)"] = new RulesElement({
    name: "Potion of Resistance (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3942",
    source: "Adventurer's Vault",
    categories: ["Potion of Resistance (epic tier)", "ID_FMP_MAGIC_ITEM_3942"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Potion of Resistance (heroic tier)"] = new RulesElement({
    name: "Potion of Resistance (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3940",
    source: "Adventurer's Vault",
    categories: ["Potion of Resistance (heroic tier)", "ID_FMP_MAGIC_ITEM_3940"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Potion of Resistance (paragon tier)"] = new RulesElement({
    name: "Potion of Resistance (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3941",
    source: "Adventurer's Vault",
    categories: ["Potion of Resistance (paragon tier)", "ID_FMP_MAGIC_ITEM_3941"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Potion of Spirit (level 10)"] = new RulesElement({
    name: "Potion of Spirit (level 10)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3944",
    source: "Adventurer's Vault",
    categories: ["Potion of Spirit (level 10)", "ID_FMP_MAGIC_ITEM_3944"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Potion of Spirit (level 15)"] = new RulesElement({
    name: "Potion of Spirit (level 15)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3945",
    source: "Adventurer's Vault",
    categories: ["Potion of Spirit (level 15)", "ID_FMP_MAGIC_ITEM_3945"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Potion of Spirit (level 20)"] = new RulesElement({
    name: "Potion of Spirit (level 20)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3946",
    source: "Adventurer's Vault",
    categories: ["Potion of Spirit (level 20)", "ID_FMP_MAGIC_ITEM_3946"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Potion of Spirit (level 25)"] = new RulesElement({
    name: "Potion of Spirit (level 25)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3947",
    source: "Adventurer's Vault",
    categories: ["Potion of Spirit (level 25)", "ID_FMP_MAGIC_ITEM_3947"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Potion of Spirit (level 30)"] = new RulesElement({
    name: "Potion of Spirit (level 30)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3948",
    source: "Adventurer's Vault",
    categories: ["Potion of Spirit (level 30)", "ID_FMP_MAGIC_ITEM_3948"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Potion of Spirit (level 5)"] = new RulesElement({
    name: "Potion of Spirit (level 5)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3943",
    source: "Adventurer's Vault",
    categories: ["Potion of Spirit (level 5)", "ID_FMP_MAGIC_ITEM_3943"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Potion of Stormshield (epic tier)"] = new RulesElement({
    name: "Potion of Stormshield (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3951",
    source: "Adventurer's Vault",
    categories: ["Potion of Stormshield (epic tier)", "ID_FMP_MAGIC_ITEM_3951"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Potion of Stormshield (heroic tier)"] = new RulesElement({
    name: "Potion of Stormshield (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3949",
    source: "Adventurer's Vault",
    categories: ["Potion of Stormshield (heroic tier)", "ID_FMP_MAGIC_ITEM_3949"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Potion of Stormshield (paragon tier)"] = new RulesElement({
    name: "Potion of Stormshield (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3950",
    source: "Adventurer's Vault",
    categories: ["Potion of Stormshield (paragon tier)", "ID_FMP_MAGIC_ITEM_3950"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Potion of Vigor (epic tier)"] = new RulesElement({
    name: "Potion of Vigor (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3954",
    source: "Adventurer's Vault",
    categories: ["Potion of Vigor (epic tier)", "ID_FMP_MAGIC_ITEM_3954"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Potion of Vigor (heroic tier)"] = new RulesElement({
    name: "Potion of Vigor (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3952",
    source: "Adventurer's Vault",
    categories: ["Potion of Vigor (heroic tier)", "ID_FMP_MAGIC_ITEM_3952"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Potion of Vigor (paragon tier)"] = new RulesElement({
    name: "Potion of Vigor (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3953",
    source: "Adventurer's Vault",
    categories: ["Potion of Vigor (paragon tier)", "ID_FMP_MAGIC_ITEM_3953"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Pouch of Frozen Passage (heroic tier)"] = new RulesElement({
    name: "Pouch of Frozen Passage (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3876",
    source: "Adventurer's Vault",
    categories: ["Pouch of Frozen Passage (heroic tier)", "ID_FMP_MAGIC_ITEM_3876"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Pouch of Platinum (heroic tier)"] = new RulesElement({
    name: "Pouch of Platinum (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3877",
    source: "Adventurer's Vault",
    categories: ["Pouch of Platinum (heroic tier)", "ID_FMP_MAGIC_ITEM_3877"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Pouches of Shared Acquisition (paragon tier)"] = new RulesElement({
    name: "Pouches of Shared Acquisition (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3878",
    source: "Adventurer's Vault",
    categories: ["Pouches of Shared Acquisition (paragon tier)", "ID_FMP_MAGIC_ITEM_3878"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Power Jewel (heroic tier)"] = new RulesElement({
    name: "Power Jewel (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3879",
    source: "Adventurer's Vault",
    categories: ["Power Jewel (heroic tier)", "ID_FMP_MAGIC_ITEM_3879"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Precise Wand of Color Spray +2"] = new RulesElement({
    name: "Precise Wand of Color Spray +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3111",
    source: "Adventurer's Vault",
    categories: ["Precise Wand of Color Spray +2", "ID_FMP_MAGIC_ITEM_3111"],
    rules: function(model) {
      model.statadd("color spray:attack(Precise Wand of Color Spray +2)", 1, "item");
      model.grant(elements.id["ID_FMP_POWER_173"]);
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Precise Wand of Color Spray +3"] = new RulesElement({
    name: "Precise Wand of Color Spray +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3112",
    source: "Adventurer's Vault",
    categories: ["Precise Wand of Color Spray +3", "ID_FMP_MAGIC_ITEM_3112"],
    rules: function(model) {
      model.statadd("color spray:attack(Precise Wand of Color Spray +3)", 1, "item");
      model.grant(elements.id["ID_FMP_POWER_173"]);
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Precise Wand of Color Spray +4"] = new RulesElement({
    name: "Precise Wand of Color Spray +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3113",
    source: "Adventurer's Vault",
    categories: ["Precise Wand of Color Spray +4", "ID_FMP_MAGIC_ITEM_3113"],
    rules: function(model) {
      model.statadd("color spray:attack(Precise Wand of Color Spray +4)", 1, "item");
      model.grant(elements.id["ID_FMP_POWER_173"]);
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Precise Wand of Color Spray +5"] = new RulesElement({
    name: "Precise Wand of Color Spray +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3114",
    source: "Adventurer's Vault",
    categories: ["Precise Wand of Color Spray +5", "ID_FMP_MAGIC_ITEM_3114"],
    rules: function(model) {
      model.statadd("color spray:attack(Precise Wand of Color Spray +5)", 1, "item");
      model.grant(elements.id["ID_FMP_POWER_173"]);
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Precise Wand of Color Spray +6"] = new RulesElement({
    name: "Precise Wand of Color Spray +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3115",
    source: "Adventurer's Vault",
    categories: ["Precise Wand of Color Spray +6", "ID_FMP_MAGIC_ITEM_3115"],
    rules: function(model) {
      model.statadd("color spray:attack(Precise Wand of Color Spray +6)", 1, "item");
      model.grant(elements.id["ID_FMP_POWER_173"]);
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Predatory Weapon +3"] = new RulesElement({
    name: "Predatory Weapon +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2278",
    source: "Adventurer's Vault",
    categories: ["Predatory Weapon +3", "ID_FMP_MAGIC_ITEM_2278"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Predatory Weapon +4"] = new RulesElement({
    name: "Predatory Weapon +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2279",
    source: "Adventurer's Vault",
    categories: ["Predatory Weapon +4", "ID_FMP_MAGIC_ITEM_2279"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Predatory Weapon +5"] = new RulesElement({
    name: "Predatory Weapon +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2280",
    source: "Adventurer's Vault",
    categories: ["Predatory Weapon +5", "ID_FMP_MAGIC_ITEM_2280"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Predatory Weapon +6"] = new RulesElement({
    name: "Predatory Weapon +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2281",
    source: "Adventurer's Vault",
    categories: ["Predatory Weapon +6", "ID_FMP_MAGIC_ITEM_2281"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Premonition Ring (paragon tier)"] = new RulesElement({
    name: "Premonition Ring (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3736",
    source: "Adventurer's Vault",
    categories: ["Premonition Ring (paragon tier)", "ID_FMP_MAGIC_ITEM_3736"],
    rules: function(model) {
      model.statadd("Initiative Misc", 2, "item");
      model.statadd("Passive Perception", 2, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Prime Shot Weapon +1"] = new RulesElement({
    name: "Prime Shot Weapon +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2282",
    source: "Adventurer's Vault",
    categories: ["Prime Shot Weapon +1", "ID_FMP_MAGIC_ITEM_2282"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Prime Shot Weapon +2"] = new RulesElement({
    name: "Prime Shot Weapon +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2283",
    source: "Adventurer's Vault",
    categories: ["Prime Shot Weapon +2", "ID_FMP_MAGIC_ITEM_2283"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Prime Shot Weapon +3"] = new RulesElement({
    name: "Prime Shot Weapon +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2284",
    source: "Adventurer's Vault",
    categories: ["Prime Shot Weapon +3", "ID_FMP_MAGIC_ITEM_2284"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Prime Shot Weapon +4"] = new RulesElement({
    name: "Prime Shot Weapon +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2285",
    source: "Adventurer's Vault",
    categories: ["Prime Shot Weapon +4", "ID_FMP_MAGIC_ITEM_2285"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Prime Shot Weapon +5"] = new RulesElement({
    name: "Prime Shot Weapon +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2286",
    source: "Adventurer's Vault",
    categories: ["Prime Shot Weapon +5", "ID_FMP_MAGIC_ITEM_2286"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Prime Shot Weapon +6"] = new RulesElement({
    name: "Prime Shot Weapon +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2287",
    source: "Adventurer's Vault",
    categories: ["Prime Shot Weapon +6", "ID_FMP_MAGIC_ITEM_2287"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Prismatic Robe +4"] = new RulesElement({
    name: "Prismatic Robe +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1680",
    source: "Adventurer's Vault",
    categories: ["Prismatic Robe +4", "ID_FMP_MAGIC_ITEM_1680"],
    rules: function(model) {
      model.statadd("Armor Class", 4, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 4);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Prismatic Robe +5"] = new RulesElement({
    name: "Prismatic Robe +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1681",
    source: "Adventurer's Vault",
    categories: ["Prismatic Robe +5", "ID_FMP_MAGIC_ITEM_1681"],
    rules: function(model) {
      model.statadd("Armor Class", 5, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 5);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Prismatic Robe +6"] = new RulesElement({
    name: "Prismatic Robe +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1682",
    source: "Adventurer's Vault",
    categories: ["Prismatic Robe +6", "ID_FMP_MAGIC_ITEM_1682"],
    rules: function(model) {
      model.statadd("Armor Class", 6, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 6);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Quick Weapon +1"] = new RulesElement({
    name: "Quick Weapon +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2288",
    source: "Adventurer's Vault",
    categories: ["Quick Weapon +1", "ID_FMP_MAGIC_ITEM_2288"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Quick Weapon +2"] = new RulesElement({
    name: "Quick Weapon +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2289",
    source: "Adventurer's Vault",
    categories: ["Quick Weapon +2", "ID_FMP_MAGIC_ITEM_2289"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Quick Weapon +3"] = new RulesElement({
    name: "Quick Weapon +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2290",
    source: "Adventurer's Vault",
    categories: ["Quick Weapon +3", "ID_FMP_MAGIC_ITEM_2290"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Quick Weapon +4"] = new RulesElement({
    name: "Quick Weapon +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2291",
    source: "Adventurer's Vault",
    categories: ["Quick Weapon +4", "ID_FMP_MAGIC_ITEM_2291"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Quick Weapon +5"] = new RulesElement({
    name: "Quick Weapon +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2292",
    source: "Adventurer's Vault",
    categories: ["Quick Weapon +5", "ID_FMP_MAGIC_ITEM_2292"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Quick Weapon +6"] = new RulesElement({
    name: "Quick Weapon +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2293",
    source: "Adventurer's Vault",
    categories: ["Quick Weapon +6", "ID_FMP_MAGIC_ITEM_2293"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Quickcurse Rod +1"] = new RulesElement({
    name: "Quickcurse Rod +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2809",
    source: "Adventurer's Vault",
    categories: ["Quickcurse Rod +1", "ID_FMP_MAGIC_ITEM_2809"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Quickcurse Rod +2"] = new RulesElement({
    name: "Quickcurse Rod +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2810",
    source: "Adventurer's Vault",
    categories: ["Quickcurse Rod +2", "ID_FMP_MAGIC_ITEM_2810"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Quickcurse Rod +3"] = new RulesElement({
    name: "Quickcurse Rod +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2811",
    source: "Adventurer's Vault",
    categories: ["Quickcurse Rod +3", "ID_FMP_MAGIC_ITEM_2811"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Quickcurse Rod +4"] = new RulesElement({
    name: "Quickcurse Rod +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2812",
    source: "Adventurer's Vault",
    categories: ["Quickcurse Rod +4", "ID_FMP_MAGIC_ITEM_2812"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Quickcurse Rod +5"] = new RulesElement({
    name: "Quickcurse Rod +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2813",
    source: "Adventurer's Vault",
    categories: ["Quickcurse Rod +5", "ID_FMP_MAGIC_ITEM_2813"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Quickcurse Rod +6"] = new RulesElement({
    name: "Quickcurse Rod +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2814",
    source: "Adventurer's Vault",
    categories: ["Quickcurse Rod +6", "ID_FMP_MAGIC_ITEM_2814"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Quickening Diadem (epic tier)"] = new RulesElement({
    name: "Quickening Diadem (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_9118",
    source: "Adventurer's Vault",
    categories: ["Quickening Diadem (epic tier)", "ID_FMP_MAGIC_ITEM_9118"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Quickening Staff +3"] = new RulesElement({
    name: "Quickening Staff +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2944",
    source: "Adventurer's Vault",
    categories: ["Quickening Staff +3", "ID_FMP_MAGIC_ITEM_2944"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Quickening Staff +4"] = new RulesElement({
    name: "Quickening Staff +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2945",
    source: "Adventurer's Vault",
    categories: ["Quickening Staff +4", "ID_FMP_MAGIC_ITEM_2945"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Quickening Staff +5"] = new RulesElement({
    name: "Quickening Staff +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2946",
    source: "Adventurer's Vault",
    categories: ["Quickening Staff +5", "ID_FMP_MAGIC_ITEM_2946"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Quickening Staff +6"] = new RulesElement({
    name: "Quickening Staff +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2947",
    source: "Adventurer's Vault",
    categories: ["Quickening Staff +6", "ID_FMP_MAGIC_ITEM_2947"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Quickhit Braces (epic tier)"] = new RulesElement({
    name: "Quickhit Braces (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3256",
    source: "Adventurer's Vault",
    categories: ["Quickhit Braces (epic tier)", "ID_FMP_MAGIC_ITEM_3256"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Quickhit Braces (heroic tier)"] = new RulesElement({
    name: "Quickhit Braces (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3254",
    source: "Adventurer's Vault",
    categories: ["Quickhit Braces (heroic tier)", "ID_FMP_MAGIC_ITEM_3254"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Quickhit Braces (paragon tier)"] = new RulesElement({
    name: "Quickhit Braces (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3255",
    source: "Adventurer's Vault",
    categories: ["Quickhit Braces (paragon tier)", "ID_FMP_MAGIC_ITEM_3255"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Quickling Boots (heroic tier)"] = new RulesElement({
    name: "Quickling Boots (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3343",
    source: "Adventurer's Vault",
    categories: ["Quickling Boots (heroic tier)", "ID_FMP_MAGIC_ITEM_3343"],
    rules: function(model) {
      model.statadd("Acrobatics Misc", 2, "item");
      model.statadd("Athletics Misc", 2, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Radiant Weapon +3"] = new RulesElement({
    name: "Radiant Weapon +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2294",
    source: "Adventurer's Vault",
    categories: ["Radiant Weapon +3", "ID_FMP_MAGIC_ITEM_2294"],
    rules: function(model) {
      model.statadd("damage rolls", function() { /* when this weapon is used to deal radiant damage */ return 3; }, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Radiant Weapon +4"] = new RulesElement({
    name: "Radiant Weapon +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2295",
    source: "Adventurer's Vault",
    categories: ["Radiant Weapon +4", "ID_FMP_MAGIC_ITEM_2295"],
    rules: function(model) {
      model.statadd("damage rolls", function() { /* when this weapon is used to deal radiant damage */ return 4; }, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Radiant Weapon +5"] = new RulesElement({
    name: "Radiant Weapon +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2296",
    source: "Adventurer's Vault",
    categories: ["Radiant Weapon +5", "ID_FMP_MAGIC_ITEM_2296"],
    rules: function(model) {
      model.statadd("damage rolls", function() { /* when this weapon is used to deal radiant damage */ return 5; }, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Radiant Weapon +6"] = new RulesElement({
    name: "Radiant Weapon +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2297",
    source: "Adventurer's Vault",
    categories: ["Radiant Weapon +6", "ID_FMP_MAGIC_ITEM_2297"],
    rules: function(model) {
      model.statadd("damage rolls", function() { /* when this weapon is used to deal radiant damage */ return 6; }, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Rapidstrike Bracers (paragon tier)"] = new RulesElement({
    name: "Rapidstrike Bracers (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3257",
    source: "Adventurer's Vault",
    categories: ["Rapidstrike Bracers (paragon tier)", "ID_FMP_MAGIC_ITEM_3257"],
    rules: function(model) {
      model.statadd("Initiative Misc", 2, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Rat Form Armor +2"] = new RulesElement({
    name: "Rat Form Armor +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1683",
    source: "Adventurer's Vault",
    categories: ["Rat Form Armor +2", "ID_FMP_MAGIC_ITEM_1683"],
    rules: function(model) {
      model.statadd("Armor Class", 2, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 2);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Rat Form Armor +3"] = new RulesElement({
    name: "Rat Form Armor +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_8438",
    source: "Adventurer's Vault",
    categories: ["Rat Form Armor +3", "ID_FMP_MAGIC_ITEM_8438"],
    rules: function(model) {
      model.statadd("Armor Class", 3, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 3);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Rat Form Armor +4"] = new RulesElement({
    name: "Rat Form Armor +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_8439",
    source: "Adventurer's Vault",
    categories: ["Rat Form Armor +4", "ID_FMP_MAGIC_ITEM_8439"],
    rules: function(model) {
      model.statadd("Armor Class", 4, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 4);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Rat Form Armor +5"] = new RulesElement({
    name: "Rat Form Armor +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_8440",
    source: "Adventurer's Vault",
    categories: ["Rat Form Armor +5", "ID_FMP_MAGIC_ITEM_8440"],
    rules: function(model) {
      model.statadd("Armor Class", 5, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 5);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Rat Form Armor +6"] = new RulesElement({
    name: "Rat Form Armor +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_8441",
    source: "Adventurer's Vault",
    categories: ["Rat Form Armor +6", "ID_FMP_MAGIC_ITEM_8441"],
    rules: function(model) {
      model.statadd("Armor Class", 6, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 6);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Razor Bracers (epic tier)"] = new RulesElement({
    name: "Razor Bracers (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3260",
    source: "Adventurer's Vault",
    categories: ["Razor Bracers (epic tier)", "ID_FMP_MAGIC_ITEM_3260"],
    rules: function(model) {
      model.statadd("Athletics Misc", function() { /* to escape a grab */ return 2; }, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Razor Bracers (heroic tier)"] = new RulesElement({
    name: "Razor Bracers (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3258",
    source: "Adventurer's Vault",
    categories: ["Razor Bracers (heroic tier)", "ID_FMP_MAGIC_ITEM_3258"],
    rules: function(model) {
      model.statadd("Athletics Misc", function() { /* to escape a grab */ return 2; }, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Razor Bracers (paragon tier)"] = new RulesElement({
    name: "Razor Bracers (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3259",
    source: "Adventurer's Vault",
    categories: ["Razor Bracers (paragon tier)", "ID_FMP_MAGIC_ITEM_3259"],
    rules: function(model) {
      model.statadd("Athletics Misc", function() { /* to escape a grab */ return 2; }, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Razor Shield (epic tier)"] = new RulesElement({
    name: "Razor Shield (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_51",
    source: "Adventurer's Vault",
    categories: ["Razor Shield (epic tier)", "ID_FMP_MAGIC_ITEM_51"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Razor Shield (heroic tier)"] = new RulesElement({
    name: "Razor Shield (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_49",
    source: "Adventurer's Vault",
    categories: ["Razor Shield (heroic tier)", "ID_FMP_MAGIC_ITEM_49"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Razor Shield (paragon tier)"] = new RulesElement({
    name: "Razor Shield (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_50",
    source: "Adventurer's Vault",
    categories: ["Razor Shield (paragon tier)", "ID_FMP_MAGIC_ITEM_50"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Reading Spectacles (heroic tier)"] = new RulesElement({
    name: "Reading Spectacles (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3500",
    source: "Adventurer's Vault",
    categories: ["Reading Spectacles (heroic tier)", "ID_FMP_MAGIC_ITEM_3500"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Reality Cord (paragon tier)"] = new RulesElement({
    name: "Reality Cord (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3809",
    source: "Adventurer's Vault",
    categories: ["Reality Cord (paragon tier)", "ID_FMP_MAGIC_ITEM_3809"],
    rules: function(model) {
      model.statadd("damage rolls", function() { /* against aberrant creatures */ return 1; }, "item");
      model.statadd("Fortitude Defense", function() { /* against aberrant creatures */ return 1; }, "item");
      model.statadd("Will Defense", function() { /* against aberrant creatures */ return 1; }, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Recalling Harness (epic tier)"] = new RulesElement({
    name: "Recalling Harness (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3966",
    source: "Adventurer's Vault",
    categories: ["Recalling Harness (epic tier)", "ID_FMP_MAGIC_ITEM_3966"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Recalling Harness (heroic tier)"] = new RulesElement({
    name: "Recalling Harness (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3964",
    source: "Adventurer's Vault",
    categories: ["Recalling Harness (heroic tier)", "ID_FMP_MAGIC_ITEM_3964"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Recalling Harness (paragon tier)"] = new RulesElement({
    name: "Recalling Harness (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3965",
    source: "Adventurer's Vault",
    categories: ["Recalling Harness (paragon tier)", "ID_FMP_MAGIC_ITEM_3965"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Reckless Weapon +1"] = new RulesElement({
    name: "Reckless Weapon +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2298",
    source: "Adventurer's Vault",
    categories: ["Reckless Weapon +1", "ID_FMP_MAGIC_ITEM_2298"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Reckless Weapon +2"] = new RulesElement({
    name: "Reckless Weapon +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2299",
    source: "Adventurer's Vault",
    categories: ["Reckless Weapon +2", "ID_FMP_MAGIC_ITEM_2299"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Reckless Weapon +3"] = new RulesElement({
    name: "Reckless Weapon +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2300",
    source: "Adventurer's Vault",
    categories: ["Reckless Weapon +3", "ID_FMP_MAGIC_ITEM_2300"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Reckless Weapon +4"] = new RulesElement({
    name: "Reckless Weapon +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2301",
    source: "Adventurer's Vault",
    categories: ["Reckless Weapon +4", "ID_FMP_MAGIC_ITEM_2301"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Reckless Weapon +5"] = new RulesElement({
    name: "Reckless Weapon +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2302",
    source: "Adventurer's Vault",
    categories: ["Reckless Weapon +5", "ID_FMP_MAGIC_ITEM_2302"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Reckless Weapon +6"] = new RulesElement({
    name: "Reckless Weapon +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2303",
    source: "Adventurer's Vault",
    categories: ["Reckless Weapon +6", "ID_FMP_MAGIC_ITEM_2303"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Recoil Shield (heroic tier)"] = new RulesElement({
    name: "Recoil Shield (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3261",
    source: "Adventurer's Vault",
    categories: ["Recoil Shield (heroic tier)", "ID_FMP_MAGIC_ITEM_3261"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Reflective Shield (epic tier)"] = new RulesElement({
    name: "Reflective Shield (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3262",
    source: "Adventurer's Vault",
    categories: ["Reflective Shield (epic tier)", "ID_FMP_MAGIC_ITEM_3262"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Reflexive Armor +1"] = new RulesElement({
    name: "Reflexive Armor +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1684",
    source: "Adventurer's Vault",
    categories: ["Reflexive Armor +1", "ID_FMP_MAGIC_ITEM_1684"],
    rules: function(model) {
      model.statadd("Armor Class", 1, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 1);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Reflexive Armor +2"] = new RulesElement({
    name: "Reflexive Armor +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1685",
    source: "Adventurer's Vault",
    categories: ["Reflexive Armor +2", "ID_FMP_MAGIC_ITEM_1685"],
    rules: function(model) {
      model.statadd("Armor Class", 2, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 2);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Reflexive Armor +3"] = new RulesElement({
    name: "Reflexive Armor +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1686",
    source: "Adventurer's Vault",
    categories: ["Reflexive Armor +3", "ID_FMP_MAGIC_ITEM_1686"],
    rules: function(model) {
      model.statadd("Armor Class", 3, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 3);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Reflexive Armor +4"] = new RulesElement({
    name: "Reflexive Armor +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1687",
    source: "Adventurer's Vault",
    categories: ["Reflexive Armor +4", "ID_FMP_MAGIC_ITEM_1687"],
    rules: function(model) {
      model.statadd("Armor Class", 4, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 4);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Reflexive Armor +5"] = new RulesElement({
    name: "Reflexive Armor +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1688",
    source: "Adventurer's Vault",
    categories: ["Reflexive Armor +5", "ID_FMP_MAGIC_ITEM_1688"],
    rules: function(model) {
      model.statadd("Armor Class", 5, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 5);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Reflexive Armor +6"] = new RulesElement({
    name: "Reflexive Armor +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1689",
    source: "Adventurer's Vault",
    categories: ["Reflexive Armor +6", "ID_FMP_MAGIC_ITEM_1689"],
    rules: function(model) {
      model.statadd("Armor Class", 6, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 6);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Reinforcing Armor +1"] = new RulesElement({
    name: "Reinforcing Armor +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1690",
    source: "Adventurer's Vault",
    categories: ["Reinforcing Armor +1", "ID_FMP_MAGIC_ITEM_1690"],
    rules: function(model) {
      model.statadd("Armor Class", 1, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 1);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Reinforcing Armor +2"] = new RulesElement({
    name: "Reinforcing Armor +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1691",
    source: "Adventurer's Vault",
    categories: ["Reinforcing Armor +2", "ID_FMP_MAGIC_ITEM_1691"],
    rules: function(model) {
      model.statadd("Armor Class", 2, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 2);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Reinforcing Armor +3"] = new RulesElement({
    name: "Reinforcing Armor +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1692",
    source: "Adventurer's Vault",
    categories: ["Reinforcing Armor +3", "ID_FMP_MAGIC_ITEM_1692"],
    rules: function(model) {
      model.statadd("Armor Class", 3, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 3);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Reinforcing Armor +4"] = new RulesElement({
    name: "Reinforcing Armor +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1693",
    source: "Adventurer's Vault",
    categories: ["Reinforcing Armor +4", "ID_FMP_MAGIC_ITEM_1693"],
    rules: function(model) {
      model.statadd("Armor Class", 4, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 4);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Reinforcing Armor +5"] = new RulesElement({
    name: "Reinforcing Armor +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1694",
    source: "Adventurer's Vault",
    categories: ["Reinforcing Armor +5", "ID_FMP_MAGIC_ITEM_1694"],
    rules: function(model) {
      model.statadd("Armor Class", 5, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 5);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Reinforcing Armor +6"] = new RulesElement({
    name: "Reinforcing Armor +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1695",
    source: "Adventurer's Vault",
    categories: ["Reinforcing Armor +6", "ID_FMP_MAGIC_ITEM_1695"],
    rules: function(model) {
      model.statadd("Armor Class", 6, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 6);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Reinforcing Belt (heroic tier)"] = new RulesElement({
    name: "Reinforcing Belt (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3810",
    source: "Adventurer's Vault",
    categories: ["Reinforcing Belt (heroic tier)", "ID_FMP_MAGIC_ITEM_3810"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Reliable Staff +3"] = new RulesElement({
    name: "Reliable Staff +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2948",
    source: "Adventurer's Vault",
    categories: ["Reliable Staff +3", "ID_FMP_MAGIC_ITEM_2948"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Reliable Staff +4"] = new RulesElement({
    name: "Reliable Staff +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2949",
    source: "Adventurer's Vault",
    categories: ["Reliable Staff +4", "ID_FMP_MAGIC_ITEM_2949"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Reliable Staff +5"] = new RulesElement({
    name: "Reliable Staff +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2950",
    source: "Adventurer's Vault",
    categories: ["Reliable Staff +5", "ID_FMP_MAGIC_ITEM_2950"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Reliable Staff +6"] = new RulesElement({
    name: "Reliable Staff +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2951",
    source: "Adventurer's Vault",
    categories: ["Reliable Staff +6", "ID_FMP_MAGIC_ITEM_2951"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Rending Weapon +1"] = new RulesElement({
    name: "Rending Weapon +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2304",
    source: "Adventurer's Vault",
    categories: ["Rending Weapon +1", "ID_FMP_MAGIC_ITEM_2304"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Rending Weapon +2"] = new RulesElement({
    name: "Rending Weapon +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2305",
    source: "Adventurer's Vault",
    categories: ["Rending Weapon +2", "ID_FMP_MAGIC_ITEM_2305"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Rending Weapon +3"] = new RulesElement({
    name: "Rending Weapon +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2306",
    source: "Adventurer's Vault",
    categories: ["Rending Weapon +3", "ID_FMP_MAGIC_ITEM_2306"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Rending Weapon +4"] = new RulesElement({
    name: "Rending Weapon +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2307",
    source: "Adventurer's Vault",
    categories: ["Rending Weapon +4", "ID_FMP_MAGIC_ITEM_2307"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Rending Weapon +5"] = new RulesElement({
    name: "Rending Weapon +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2308",
    source: "Adventurer's Vault",
    categories: ["Rending Weapon +5", "ID_FMP_MAGIC_ITEM_2308"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Rending Weapon +6"] = new RulesElement({
    name: "Rending Weapon +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2309",
    source: "Adventurer's Vault",
    categories: ["Rending Weapon +6", "ID_FMP_MAGIC_ITEM_2309"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Reproachful weapon +1"] = new RulesElement({
    name: "Reproachful weapon +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2310",
    source: "Adventurer's Vault",
    categories: ["Reproachful weapon +1", "ID_FMP_MAGIC_ITEM_2310"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Reproachful weapon +2"] = new RulesElement({
    name: "Reproachful weapon +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2311",
    source: "Adventurer's Vault",
    categories: ["Reproachful weapon +2", "ID_FMP_MAGIC_ITEM_2311"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Reproachful weapon +3"] = new RulesElement({
    name: "Reproachful weapon +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2312",
    source: "Adventurer's Vault",
    categories: ["Reproachful weapon +3", "ID_FMP_MAGIC_ITEM_2312"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Reproachful weapon +4"] = new RulesElement({
    name: "Reproachful weapon +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2313",
    source: "Adventurer's Vault",
    categories: ["Reproachful weapon +4", "ID_FMP_MAGIC_ITEM_2313"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Reproachful weapon +5"] = new RulesElement({
    name: "Reproachful weapon +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2314",
    source: "Adventurer's Vault",
    categories: ["Reproachful weapon +5", "ID_FMP_MAGIC_ITEM_2314"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Reproachful weapon +6"] = new RulesElement({
    name: "Reproachful weapon +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2315",
    source: "Adventurer's Vault",
    categories: ["Reproachful weapon +6", "ID_FMP_MAGIC_ITEM_2315"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Repulsion Armor +1"] = new RulesElement({
    name: "Repulsion Armor +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1696",
    source: "Adventurer's Vault",
    categories: ["Repulsion Armor +1", "ID_FMP_MAGIC_ITEM_1696"],
    rules: function(model) {
      model.statadd("Armor Class", 1, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 1);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Repulsion Armor +2"] = new RulesElement({
    name: "Repulsion Armor +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1701",
    source: "Adventurer's Vault",
    categories: ["Repulsion Armor +2", "ID_FMP_MAGIC_ITEM_1701"],
    rules: function(model) {
      model.statadd("Armor Class", 2, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 2);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Repulsion Armor +3"] = new RulesElement({
    name: "Repulsion Armor +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1702",
    source: "Adventurer's Vault",
    categories: ["Repulsion Armor +3", "ID_FMP_MAGIC_ITEM_1702"],
    rules: function(model) {
      model.statadd("Armor Class", 3, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 3);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Repulsion Armor +4"] = new RulesElement({
    name: "Repulsion Armor +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1703",
    source: "Adventurer's Vault",
    categories: ["Repulsion Armor +4", "ID_FMP_MAGIC_ITEM_1703"],
    rules: function(model) {
      model.statadd("Armor Class", 4, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 4);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Repulsion Armor +5"] = new RulesElement({
    name: "Repulsion Armor +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1704",
    source: "Adventurer's Vault",
    categories: ["Repulsion Armor +5", "ID_FMP_MAGIC_ITEM_1704"],
    rules: function(model) {
      model.statadd("Armor Class", 5, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 5);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Repulsion Armor +6"] = new RulesElement({
    name: "Repulsion Armor +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1705",
    source: "Adventurer's Vault",
    categories: ["Repulsion Armor +6", "ID_FMP_MAGIC_ITEM_1705"],
    rules: function(model) {
      model.statadd("Armor Class", 6, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 6);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Resilience Amulet +2"] = new RulesElement({
    name: "Resilience Amulet +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3700",
    source: "Adventurer's Vault",
    categories: ["Resilience Amulet +2", "ID_FMP_MAGIC_ITEM_3700"],
    rules: function(model) {
      model.statadd("Fortitude Defense", 2, "Enhancement");
      model.statadd("Reflex Defense", 2, "Enhancement");
      model.statadd("Will Defense", 2, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Resilience Amulet +3"] = new RulesElement({
    name: "Resilience Amulet +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3701",
    source: "Adventurer's Vault",
    categories: ["Resilience Amulet +3", "ID_FMP_MAGIC_ITEM_3701"],
    rules: function(model) {
      model.statadd("Fortitude Defense", 3, "Enhancement");
      model.statadd("Reflex Defense", 3, "Enhancement");
      model.statadd("Will Defense", 3, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Resilience Amulet +4"] = new RulesElement({
    name: "Resilience Amulet +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3702",
    source: "Adventurer's Vault",
    categories: ["Resilience Amulet +4", "ID_FMP_MAGIC_ITEM_3702"],
    rules: function(model) {
      model.statadd("Fortitude Defense", 4, "Enhancement");
      model.statadd("Reflex Defense", 4, "Enhancement");
      model.statadd("Will Defense", 4, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Resilience Amulet +5"] = new RulesElement({
    name: "Resilience Amulet +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3703",
    source: "Adventurer's Vault",
    categories: ["Resilience Amulet +5", "ID_FMP_MAGIC_ITEM_3703"],
    rules: function(model) {
      model.statadd("Fortitude Defense", 5, "Enhancement");
      model.statadd("Reflex Defense", 5, "Enhancement");
      model.statadd("Will Defense", 5, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Resilience Amulet +6"] = new RulesElement({
    name: "Resilience Amulet +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3704",
    source: "Adventurer's Vault",
    categories: ["Resilience Amulet +6", "ID_FMP_MAGIC_ITEM_3704"],
    rules: function(model) {
      model.statadd("Fortitude Defense", 6, "Enhancement");
      model.statadd("Reflex Defense", 6, "Enhancement");
      model.statadd("Will Defense", 6, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Restful Bedroll (heroic tier)"] = new RulesElement({
    name: "Restful Bedroll (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3880",
    source: "Adventurer's Vault",
    categories: ["Restful Bedroll (heroic tier)", "ID_FMP_MAGIC_ITEM_3880"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Retribution Weapon +2"] = new RulesElement({
    name: "Retribution Weapon +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2316",
    source: "Adventurer's Vault",
    categories: ["Retribution Weapon +2", "ID_FMP_MAGIC_ITEM_2316"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Retribution Weapon +3"] = new RulesElement({
    name: "Retribution Weapon +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2317",
    source: "Adventurer's Vault",
    categories: ["Retribution Weapon +3", "ID_FMP_MAGIC_ITEM_2317"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Retribution Weapon +4"] = new RulesElement({
    name: "Retribution Weapon +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2318",
    source: "Adventurer's Vault",
    categories: ["Retribution Weapon +4", "ID_FMP_MAGIC_ITEM_2318"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Retribution Weapon +5"] = new RulesElement({
    name: "Retribution Weapon +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2319",
    source: "Adventurer's Vault",
    categories: ["Retribution Weapon +5", "ID_FMP_MAGIC_ITEM_2319"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Retribution Weapon +6"] = new RulesElement({
    name: "Retribution Weapon +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2320",
    source: "Adventurer's Vault",
    categories: ["Retribution Weapon +6", "ID_FMP_MAGIC_ITEM_2320"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Ricochet Shield (paragon tier)"] = new RulesElement({
    name: "Ricochet Shield (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3263",
    source: "Adventurer's Vault",
    categories: ["Ricochet Shield (paragon tier)", "ID_FMP_MAGIC_ITEM_3263"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Ricochet Weapon +3"] = new RulesElement({
    name: "Ricochet Weapon +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2321",
    source: "Adventurer's Vault",
    categories: ["Ricochet Weapon +3", "ID_FMP_MAGIC_ITEM_2321"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Ricochet Weapon +4"] = new RulesElement({
    name: "Ricochet Weapon +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2322",
    source: "Adventurer's Vault",
    categories: ["Ricochet Weapon +4", "ID_FMP_MAGIC_ITEM_2322"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Ricochet Weapon +5"] = new RulesElement({
    name: "Ricochet Weapon +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2323",
    source: "Adventurer's Vault",
    categories: ["Ricochet Weapon +5", "ID_FMP_MAGIC_ITEM_2323"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Ricochet Weapon +6"] = new RulesElement({
    name: "Ricochet Weapon +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2324",
    source: "Adventurer's Vault",
    categories: ["Ricochet Weapon +6", "ID_FMP_MAGIC_ITEM_2324"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Righteous Armor +2"] = new RulesElement({
    name: "Righteous Armor +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1706",
    source: "Adventurer's Vault",
    categories: ["Righteous Armor +2", "ID_FMP_MAGIC_ITEM_1706"],
    rules: function(model) {
      model.statadd("Armor Class", 2, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 2);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Righteous Armor +3"] = new RulesElement({
    name: "Righteous Armor +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1707",
    source: "Adventurer's Vault",
    categories: ["Righteous Armor +3", "ID_FMP_MAGIC_ITEM_1707"],
    rules: function(model) {
      model.statadd("Armor Class", 3, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 3);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Righteous Armor +4"] = new RulesElement({
    name: "Righteous Armor +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1708",
    source: "Adventurer's Vault",
    categories: ["Righteous Armor +4", "ID_FMP_MAGIC_ITEM_1708"],
    rules: function(model) {
      model.statadd("Armor Class", 4, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 4);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Righteous Armor +5"] = new RulesElement({
    name: "Righteous Armor +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1709",
    source: "Adventurer's Vault",
    categories: ["Righteous Armor +5", "ID_FMP_MAGIC_ITEM_1709"],
    rules: function(model) {
      model.statadd("Armor Class", 5, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 5);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Righteous Armor +6"] = new RulesElement({
    name: "Righteous Armor +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1710",
    source: "Adventurer's Vault",
    categories: ["Righteous Armor +6", "ID_FMP_MAGIC_ITEM_1710"],
    rules: function(model) {
      model.statadd("Armor Class", 6, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 6);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Righteous Weapon +2"] = new RulesElement({
    name: "Righteous Weapon +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2325",
    source: "Adventurer's Vault",
    categories: ["Righteous Weapon +2", "ID_FMP_MAGIC_ITEM_2325"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Righteous Weapon +3"] = new RulesElement({
    name: "Righteous Weapon +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2326",
    source: "Adventurer's Vault",
    categories: ["Righteous Weapon +3", "ID_FMP_MAGIC_ITEM_2326"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Righteous Weapon +4"] = new RulesElement({
    name: "Righteous Weapon +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2327",
    source: "Adventurer's Vault",
    categories: ["Righteous Weapon +4", "ID_FMP_MAGIC_ITEM_2327"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Righteous Weapon +5"] = new RulesElement({
    name: "Righteous Weapon +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2328",
    source: "Adventurer's Vault",
    categories: ["Righteous Weapon +5", "ID_FMP_MAGIC_ITEM_2328"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Righteous Weapon +6"] = new RulesElement({
    name: "Righteous Weapon +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2329",
    source: "Adventurer's Vault",
    categories: ["Righteous Weapon +6", "ID_FMP_MAGIC_ITEM_2329"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Ring of Adaptation (epic tier)"] = new RulesElement({
    name: "Ring of Adaptation (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3737",
    source: "Adventurer's Vault",
    categories: ["Ring of Adaptation (epic tier)", "ID_FMP_MAGIC_ITEM_3737"],
    rules: function(model) {
      model.statadd("Endurance Misc", function() { /* to endure extreme weather */ return 5; }, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Ring of Aquatic Ability (paragon tier)"] = new RulesElement({
    name: "Ring of Aquatic Ability (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3738",
    source: "Adventurer's Vault",
    categories: ["Ring of Aquatic Ability (paragon tier)", "ID_FMP_MAGIC_ITEM_3738"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Ring of Arcane Information (paragon tier)"] = new RulesElement({
    name: "Ring of Arcane Information (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3739",
    source: "Adventurer's Vault",
    categories: ["Ring of Arcane Information (paragon tier)", "ID_FMP_MAGIC_ITEM_3739"],
    rules: function(model) {
      model.statadd("Arcana Misc", function() { /* to detect magic */ return 5; }, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Ring of Brotherhood (paragon tier)"] = new RulesElement({
    name: "Ring of Brotherhood (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3740",
    source: "Adventurer's Vault",
    categories: ["Ring of Brotherhood (paragon tier)", "ID_FMP_MAGIC_ITEM_3740"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Ring of Calling (paragon tier)"] = new RulesElement({
    name: "Ring of Calling (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3741",
    source: "Adventurer's Vault",
    categories: ["Ring of Calling (paragon tier)", "ID_FMP_MAGIC_ITEM_3741"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Ring of Dread (paragon tier)"] = new RulesElement({
    name: "Ring of Dread (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3742",
    source: "Adventurer's Vault",
    categories: ["Ring of Dread (paragon tier)", "ID_FMP_MAGIC_ITEM_3742"],
    rules: function(model) {
      model.statadd("Intimidate Misc", 2, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Ring of Feather Fall (paragon tier)"] = new RulesElement({
    name: "Ring of Feather Fall (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3743",
    source: "Adventurer's Vault",
    categories: ["Ring of Feather Fall (paragon tier)", "ID_FMP_MAGIC_ITEM_3743"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Ring of Fey Travel (epic tier)"] = new RulesElement({
    name: "Ring of Fey Travel (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3744",
    source: "Adventurer's Vault",
    categories: ["Ring of Fey Travel (epic tier)", "ID_FMP_MAGIC_ITEM_3744"],
    rules: function(model) {
      model.statadd("Speed", function() { 
        if (!(model.wearing('Armor', ['heavy']))) {
          return 1;
        } else return 0;
       }, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Ring of Fireblazing (paragon tier)"] = new RulesElement({
    name: "Ring of Fireblazing (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3745",
    source: "Adventurer's Vault",
    categories: ["Ring of Fireblazing (paragon tier)", "ID_FMP_MAGIC_ITEM_3745"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Ring of Forgeful Touch (paragon tier)"] = new RulesElement({
    name: "Ring of Forgeful Touch (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3746",
    source: "Adventurer's Vault",
    categories: ["Ring of Forgeful Touch (paragon tier)", "ID_FMP_MAGIC_ITEM_3746"],
    rules: function(model) {
      model.statadd("Bluff Misc", 1, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Ring of Heroic Insight (epic tier)"] = new RulesElement({
    name: "Ring of Heroic Insight (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3747",
    source: "Adventurer's Vault",
    categories: ["Ring of Heroic Insight (epic tier)", "ID_FMP_MAGIC_ITEM_3747"],
    rules: function(model) {
      model.statadd("Insight Misc", 3, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Ring of Perfect Grip (paragon tier)"] = new RulesElement({
    name: "Ring of Perfect Grip (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3748",
    source: "Adventurer's Vault",
    categories: ["Ring of Perfect Grip (paragon tier)", "ID_FMP_MAGIC_ITEM_3748"],
    rules: function(model) {
      model.statadd("Saving Throws", function() { /* to catch yourself from falling */ return 5; }, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Ring of Personal Gravity (paragon tier)"] = new RulesElement({
    name: "Ring of Personal Gravity (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3749",
    source: "Adventurer's Vault",
    categories: ["Ring of Personal Gravity (paragon tier)", "ID_FMP_MAGIC_ITEM_3749"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Ring of Ramming (paragon tier)"] = new RulesElement({
    name: "Ring of Ramming (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3750",
    source: "Adventurer's Vault",
    categories: ["Ring of Ramming (paragon tier)", "ID_FMP_MAGIC_ITEM_3750"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Ring of Retreat (paragon tier)"] = new RulesElement({
    name: "Ring of Retreat (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3751",
    source: "Adventurer's Vault",
    categories: ["Ring of Retreat (paragon tier)", "ID_FMP_MAGIC_ITEM_3751"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Ring of Shadow Guard (paragon tier)"] = new RulesElement({
    name: "Ring of Shadow Guard (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3752",
    source: "Adventurer's Vault",
    categories: ["Ring of Shadow Guard (paragon tier)", "ID_FMP_MAGIC_ITEM_3752"],
    rules: function(model) {
      model.statadd("Ring of Shadow Guard (paragon tier)", 10, "Ring of Shadow Guard (paragon tier)");
      model.statadd("Resist:cold and resist 10 necrotic", function() { return model.stat("Ring of Shadow Guard (paragon tier)"); }, "resist");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Ring of Shadow Travel (paragon tier)"] = new RulesElement({
    name: "Ring of Shadow Travel (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3753",
    source: "Adventurer's Vault",
    categories: ["Ring of Shadow Travel (paragon tier)", "ID_FMP_MAGIC_ITEM_3753"],
    rules: function(model) {
      model.statadd("Stealth Misc", 2, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Ring of Spell Storing (paragon tier)"] = new RulesElement({
    name: "Ring of Spell Storing (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3754",
    source: "Adventurer's Vault",
    categories: ["Ring of Spell Storing (paragon tier)", "ID_FMP_MAGIC_ITEM_3754"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Ring of Spell Storing, Greater (epic tier)"] = new RulesElement({
    name: "Ring of Spell Storing, Greater (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3755",
    source: "Adventurer's Vault",
    categories: ["Ring of Spell Storing, Greater (epic tier)", "ID_FMP_MAGIC_ITEM_3755"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Ring of Tenacious Will (epic tier)"] = new RulesElement({
    name: "Ring of Tenacious Will (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3756",
    source: "Adventurer's Vault",
    categories: ["Ring of Tenacious Will (epic tier)", "ID_FMP_MAGIC_ITEM_3756"],
    rules: function(model) {
      model.statadd("Healing Surges", function() { return -abilitymod(model.stat("Constitution")); });
      model.statadd("Healing Surges", function() { return abilitymod(model.stat("Charisma")); });
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Ring of the Dragonborn Emperor (paragon tier)"] = new RulesElement({
    name: "Ring of the Dragonborn Emperor (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3757",
    source: "Adventurer's Vault",
    categories: ["Ring of the Dragonborn Emperor (paragon tier)", "ID_FMP_MAGIC_ITEM_3757"],
    rules: function(model) {
      model.statadd("close:damage", 3, "item");
      model.statadd("dragon breath:damage", 5, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Ring of the Phoenix (epic tier)"] = new RulesElement({
    name: "Ring of the Phoenix (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3758",
    source: "Adventurer's Vault",
    categories: ["Ring of the Phoenix (epic tier)", "ID_FMP_MAGIC_ITEM_3758"],
    rules: function(model) {
      model.statadd("resist:fire", 15, "resist");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Ring of the Protector (paragon tier)"] = new RulesElement({
    name: "Ring of the Protector (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3759",
    source: "Adventurer's Vault",
    categories: ["Ring of the Protector (paragon tier)", "ID_FMP_MAGIC_ITEM_3759"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Ring of the Spectral Hand (paragon tier)"] = new RulesElement({
    name: "Ring of the Spectral Hand (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3760",
    source: "Adventurer's Vault",
    categories: ["Ring of the Spectral Hand (paragon tier)", "ID_FMP_MAGIC_ITEM_3760"],
    rules: function(model) {
      model.statadd("Ring of the Spectral Hand (paragon tier)", 10, "Ring of the Spectral Hand (paragon tier)");
      model.statadd("resist:radiant", function() { return model.stat("Ring of the Spectral Hand (paragon tier)"); }, "resist");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Ring of Vigilant Defense (paragon tier)"] = new RulesElement({
    name: "Ring of Vigilant Defense (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3761",
    source: "Adventurer's Vault",
    categories: ["Ring of Vigilant Defense (paragon tier)", "ID_FMP_MAGIC_ITEM_3761"],
    rules: function(model) {
      model.statadd("AC", function() { /* when using total defense */ return 4; }, "item");
      model.statadd("Fortitude Defense", function() { /* when using total defense */ return 4; }, "item");
      model.statadd("Reflex Defense", function() { /* when using total defense */ return 4; }, "item");
      model.statadd("Will Defense", function() { /* when using total defense */ return 4; }, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Ritualist's Ring (epic tier)"] = new RulesElement({
    name: "Ritualist's Ring (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3762",
    source: "Adventurer's Vault",
    categories: ["Ritualist's Ring (epic tier)", "ID_FMP_MAGIC_ITEM_3762"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Robe of Bloodwalking +4"] = new RulesElement({
    name: "Robe of Bloodwalking +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1711",
    source: "Adventurer's Vault",
    categories: ["Robe of Bloodwalking +4", "ID_FMP_MAGIC_ITEM_1711"],
    rules: function(model) {
      model.statadd("Armor Class", 4, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 4);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Robe of Bloodwalking +5"] = new RulesElement({
    name: "Robe of Bloodwalking +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1712",
    source: "Adventurer's Vault",
    categories: ["Robe of Bloodwalking +5", "ID_FMP_MAGIC_ITEM_1712"],
    rules: function(model) {
      model.statadd("Armor Class", 5, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 5);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Robe of Bloodwalking +6"] = new RulesElement({
    name: "Robe of Bloodwalking +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1713",
    source: "Adventurer's Vault",
    categories: ["Robe of Bloodwalking +6", "ID_FMP_MAGIC_ITEM_1713"],
    rules: function(model) {
      model.statadd("Armor Class", 6, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 6);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Robe of Contingency +1"] = new RulesElement({
    name: "Robe of Contingency +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1714",
    source: "Adventurer's Vault",
    categories: ["Robe of Contingency +1", "ID_FMP_MAGIC_ITEM_1714"],
    rules: function(model) {
      model.statadd("Armor Class", 1, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 1);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Robe of Contingency +2"] = new RulesElement({
    name: "Robe of Contingency +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1715",
    source: "Adventurer's Vault",
    categories: ["Robe of Contingency +2", "ID_FMP_MAGIC_ITEM_1715"],
    rules: function(model) {
      model.statadd("Armor Class", 2, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 2);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Robe of Contingency +3"] = new RulesElement({
    name: "Robe of Contingency +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1716",
    source: "Adventurer's Vault",
    categories: ["Robe of Contingency +3", "ID_FMP_MAGIC_ITEM_1716"],
    rules: function(model) {
      model.statadd("Armor Class", 3, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 3);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Robe of Contingency +4"] = new RulesElement({
    name: "Robe of Contingency +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1717",
    source: "Adventurer's Vault",
    categories: ["Robe of Contingency +4", "ID_FMP_MAGIC_ITEM_1717"],
    rules: function(model) {
      model.statadd("Armor Class", 4, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 4);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Robe of Contingency +5"] = new RulesElement({
    name: "Robe of Contingency +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1718",
    source: "Adventurer's Vault",
    categories: ["Robe of Contingency +5", "ID_FMP_MAGIC_ITEM_1718"],
    rules: function(model) {
      model.statadd("Armor Class", 5, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 5);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Robe of Contingency +6"] = new RulesElement({
    name: "Robe of Contingency +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1719",
    source: "Adventurer's Vault",
    categories: ["Robe of Contingency +6", "ID_FMP_MAGIC_ITEM_1719"],
    rules: function(model) {
      model.statadd("Armor Class", 6, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 6);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Robe of Defying Flames +3"] = new RulesElement({
    name: "Robe of Defying Flames +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1720",
    source: "Adventurer's Vault",
    categories: ["Robe of Defying Flames +3", "ID_FMP_MAGIC_ITEM_1720"],
    rules: function(model) {
      model.statadd("resist:fire", 10, "resist");
      model.statadd("Armor Class", 3, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 3);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Robe of Defying Flames +4"] = new RulesElement({
    name: "Robe of Defying Flames +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1721",
    source: "Adventurer's Vault",
    categories: ["Robe of Defying Flames +4", "ID_FMP_MAGIC_ITEM_1721"],
    rules: function(model) {
      model.statadd("resist:fire", 10, "resist");
      model.statadd("Armor Class", 4, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 4);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Robe of Defying Flames +5"] = new RulesElement({
    name: "Robe of Defying Flames +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1722",
    source: "Adventurer's Vault",
    categories: ["Robe of Defying Flames +5", "ID_FMP_MAGIC_ITEM_1722"],
    rules: function(model) {
      model.statadd("resist:fire", 15, "resist");
      model.statadd("Armor Class", 5, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 5);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Robe of Defying Flames +6"] = new RulesElement({
    name: "Robe of Defying Flames +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1723",
    source: "Adventurer's Vault",
    categories: ["Robe of Defying Flames +6", "ID_FMP_MAGIC_ITEM_1723"],
    rules: function(model) {
      model.statadd("resist:fire", 15, "resist");
      model.statadd("Armor Class", 6, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 6);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Robe of Defying Frost +3"] = new RulesElement({
    name: "Robe of Defying Frost +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1724",
    source: "Adventurer's Vault",
    categories: ["Robe of Defying Frost +3", "ID_FMP_MAGIC_ITEM_1724"],
    rules: function(model) {
      model.statadd("resist:cold", 10, "resist");
      model.statadd("Armor Class", 3, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 3);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Robe of Defying Frost +4"] = new RulesElement({
    name: "Robe of Defying Frost +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1725",
    source: "Adventurer's Vault",
    categories: ["Robe of Defying Frost +4", "ID_FMP_MAGIC_ITEM_1725"],
    rules: function(model) {
      model.statadd("resist:cold", 10, "resist");
      model.statadd("Armor Class", 4, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 4);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Robe of Defying Frost +5"] = new RulesElement({
    name: "Robe of Defying Frost +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1726",
    source: "Adventurer's Vault",
    categories: ["Robe of Defying Frost +5", "ID_FMP_MAGIC_ITEM_1726"],
    rules: function(model) {
      model.statadd("resist:cold", 15, "resist");
      model.statadd("Armor Class", 5, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 5);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Robe of Defying Frost +6"] = new RulesElement({
    name: "Robe of Defying Frost +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1727",
    source: "Adventurer's Vault",
    categories: ["Robe of Defying Frost +6", "ID_FMP_MAGIC_ITEM_1727"],
    rules: function(model) {
      model.statadd("resist:cold", 15, "resist");
      model.statadd("Armor Class", 6, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 6);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Robe of Defying Storms +3"] = new RulesElement({
    name: "Robe of Defying Storms +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1728",
    source: "Adventurer's Vault",
    categories: ["Robe of Defying Storms +3", "ID_FMP_MAGIC_ITEM_1728"],
    rules: function(model) {
      model.statadd("resist:lightning", 10, "resist");
      model.statadd("resist:thunder", 10, "resist");
      model.statadd("Armor Class", 3, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 3);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Robe of Defying Storms +4"] = new RulesElement({
    name: "Robe of Defying Storms +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1729",
    source: "Adventurer's Vault",
    categories: ["Robe of Defying Storms +4", "ID_FMP_MAGIC_ITEM_1729"],
    rules: function(model) {
      model.statadd("resist:lightning", 10, "resist");
      model.statadd("resist:thunder", 10, "resist");
      model.statadd("Armor Class", 4, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 4);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Robe of Defying Storms +5"] = new RulesElement({
    name: "Robe of Defying Storms +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1730",
    source: "Adventurer's Vault",
    categories: ["Robe of Defying Storms +5", "ID_FMP_MAGIC_ITEM_1730"],
    rules: function(model) {
      model.statadd("resist:lightning", 15, "resist");
      model.statadd("resist:thunder", 15, "resist");
      model.statadd("Armor Class", 5, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 5);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Robe of Defying Storms +6"] = new RulesElement({
    name: "Robe of Defying Storms +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1731",
    source: "Adventurer's Vault",
    categories: ["Robe of Defying Storms +6", "ID_FMP_MAGIC_ITEM_1731"],
    rules: function(model) {
      model.statadd("resist:lightning", 15, "resist");
      model.statadd("resist:thunder", 15, "resist");
      model.statadd("Armor Class", 6, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 6);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Robe of Eyes +1"] = new RulesElement({
    name: "Robe of Eyes +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1732",
    source: "Adventurer's Vault",
    categories: ["Robe of Eyes +1", "ID_FMP_MAGIC_ITEM_1732"],
    rules: function(model) {
      model.statadd("Perception Misc", 1, "item");
      model.statadd("Armor Class", 1, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 1);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Robe of Eyes +2"] = new RulesElement({
    name: "Robe of Eyes +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1733",
    source: "Adventurer's Vault",
    categories: ["Robe of Eyes +2", "ID_FMP_MAGIC_ITEM_1733"],
    rules: function(model) {
      model.statadd("Perception Misc", 2, "item");
      model.statadd("Armor Class", 2, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 2);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Robe of Eyes +3"] = new RulesElement({
    name: "Robe of Eyes +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1734",
    source: "Adventurer's Vault",
    categories: ["Robe of Eyes +3", "ID_FMP_MAGIC_ITEM_1734"],
    rules: function(model) {
      model.statadd("Perception Misc", 3, "item");
      model.statadd("Armor Class", 3, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 3);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Robe of Eyes +4"] = new RulesElement({
    name: "Robe of Eyes +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1735",
    source: "Adventurer's Vault",
    categories: ["Robe of Eyes +4", "ID_FMP_MAGIC_ITEM_1735"],
    rules: function(model) {
      model.statadd("Perception Misc", 4, "item");
      model.statadd("Armor Class", 4, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 4);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Robe of Eyes +5"] = new RulesElement({
    name: "Robe of Eyes +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1736",
    source: "Adventurer's Vault",
    categories: ["Robe of Eyes +5", "ID_FMP_MAGIC_ITEM_1736"],
    rules: function(model) {
      model.statadd("Perception Misc", 5, "item");
      model.statadd("Armor Class", 5, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 5);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Robe of Eyes +6"] = new RulesElement({
    name: "Robe of Eyes +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1737",
    source: "Adventurer's Vault",
    categories: ["Robe of Eyes +6", "ID_FMP_MAGIC_ITEM_1737"],
    rules: function(model) {
      model.statadd("Perception Misc", 6, "item");
      model.statadd("Armor Class", 6, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 6);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Robe of Forbearance +5"] = new RulesElement({
    name: "Robe of Forbearance +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1738",
    source: "Adventurer's Vault",
    categories: ["Robe of Forbearance +5", "ID_FMP_MAGIC_ITEM_1738"],
    rules: function(model) {
      model.statadd("Armor Class", 5, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 5);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Robe of Forbearance +6"] = new RulesElement({
    name: "Robe of Forbearance +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1739",
    source: "Adventurer's Vault",
    categories: ["Robe of Forbearance +6", "ID_FMP_MAGIC_ITEM_1739"],
    rules: function(model) {
      model.statadd("Armor Class", 6, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 6);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Robe of Quills +1"] = new RulesElement({
    name: "Robe of Quills +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1740",
    source: "Adventurer's Vault",
    categories: ["Robe of Quills +1", "ID_FMP_MAGIC_ITEM_1740"],
    rules: function(model) {
      model.statadd("Armor Class", 1, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 1);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Robe of Quills +2"] = new RulesElement({
    name: "Robe of Quills +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1741",
    source: "Adventurer's Vault",
    categories: ["Robe of Quills +2", "ID_FMP_MAGIC_ITEM_1741"],
    rules: function(model) {
      model.statadd("Armor Class", 2, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 2);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Robe of Quills +3"] = new RulesElement({
    name: "Robe of Quills +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1742",
    source: "Adventurer's Vault",
    categories: ["Robe of Quills +3", "ID_FMP_MAGIC_ITEM_1742"],
    rules: function(model) {
      model.statadd("Armor Class", 3, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 3);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Robe of Quills +4"] = new RulesElement({
    name: "Robe of Quills +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1743",
    source: "Adventurer's Vault",
    categories: ["Robe of Quills +4", "ID_FMP_MAGIC_ITEM_1743"],
    rules: function(model) {
      model.statadd("Armor Class", 4, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 4);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Robe of Quills +5"] = new RulesElement({
    name: "Robe of Quills +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1744",
    source: "Adventurer's Vault",
    categories: ["Robe of Quills +5", "ID_FMP_MAGIC_ITEM_1744"],
    rules: function(model) {
      model.statadd("Armor Class", 5, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 5);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Robe of Quills +6"] = new RulesElement({
    name: "Robe of Quills +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1745",
    source: "Adventurer's Vault",
    categories: ["Robe of Quills +6", "ID_FMP_MAGIC_ITEM_1745"],
    rules: function(model) {
      model.statadd("Armor Class", 6, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 6);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Robe of Sapping +4"] = new RulesElement({
    name: "Robe of Sapping +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1746",
    source: "Adventurer's Vault",
    categories: ["Robe of Sapping +4", "ID_FMP_MAGIC_ITEM_1746"],
    rules: function(model) {
      model.statadd("Armor Class", 4, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 4);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Robe of Sapping +5"] = new RulesElement({
    name: "Robe of Sapping +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1747",
    source: "Adventurer's Vault",
    categories: ["Robe of Sapping +5", "ID_FMP_MAGIC_ITEM_1747"],
    rules: function(model) {
      model.statadd("Armor Class", 5, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 5);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Robe of Sapping +6"] = new RulesElement({
    name: "Robe of Sapping +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1748",
    source: "Adventurer's Vault",
    categories: ["Robe of Sapping +6", "ID_FMP_MAGIC_ITEM_1748"],
    rules: function(model) {
      model.statadd("Armor Class", 6, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 6);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Robe of Scintillation +1"] = new RulesElement({
    name: "Robe of Scintillation +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1749",
    source: "Adventurer's Vault",
    categories: ["Robe of Scintillation +1", "ID_FMP_MAGIC_ITEM_1749"],
    rules: function(model) {
      model.statadd("Armor Class", 1, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 1);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Robe of Scintillation +2"] = new RulesElement({
    name: "Robe of Scintillation +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1750",
    source: "Adventurer's Vault",
    categories: ["Robe of Scintillation +2", "ID_FMP_MAGIC_ITEM_1750"],
    rules: function(model) {
      model.statadd("Armor Class", 2, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 2);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Robe of Scintillation +3"] = new RulesElement({
    name: "Robe of Scintillation +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1751",
    source: "Adventurer's Vault",
    categories: ["Robe of Scintillation +3", "ID_FMP_MAGIC_ITEM_1751"],
    rules: function(model) {
      model.statadd("Armor Class", 3, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 3);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Robe of Scintillation +4"] = new RulesElement({
    name: "Robe of Scintillation +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1752",
    source: "Adventurer's Vault",
    categories: ["Robe of Scintillation +4", "ID_FMP_MAGIC_ITEM_1752"],
    rules: function(model) {
      model.statadd("Armor Class", 4, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 4);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Robe of Scintillation +5"] = new RulesElement({
    name: "Robe of Scintillation +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1753",
    source: "Adventurer's Vault",
    categories: ["Robe of Scintillation +5", "ID_FMP_MAGIC_ITEM_1753"],
    rules: function(model) {
      model.statadd("Armor Class", 5, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 5);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Robe of Scintillation +6"] = new RulesElement({
    name: "Robe of Scintillation +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1754",
    source: "Adventurer's Vault",
    categories: ["Robe of Scintillation +6", "ID_FMP_MAGIC_ITEM_1754"],
    rules: function(model) {
      model.statadd("Armor Class", 6, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 6);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Robe of Stars +3"] = new RulesElement({
    name: "Robe of Stars +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1755",
    source: "Adventurer's Vault",
    categories: ["Robe of Stars +3", "ID_FMP_MAGIC_ITEM_1755"],
    rules: function(model) {
      model.statadd("Armor Class", 3, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 3);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Robe of Stars +4"] = new RulesElement({
    name: "Robe of Stars +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1756",
    source: "Adventurer's Vault",
    categories: ["Robe of Stars +4", "ID_FMP_MAGIC_ITEM_1756"],
    rules: function(model) {
      model.statadd("Armor Class", 4, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 4);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Robe of Stars +5"] = new RulesElement({
    name: "Robe of Stars +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1757",
    source: "Adventurer's Vault",
    categories: ["Robe of Stars +5", "ID_FMP_MAGIC_ITEM_1757"],
    rules: function(model) {
      model.statadd("Armor Class", 5, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 5);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Robe of Stars +6"] = new RulesElement({
    name: "Robe of Stars +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1758",
    source: "Adventurer's Vault",
    categories: ["Robe of Stars +6", "ID_FMP_MAGIC_ITEM_1758"],
    rules: function(model) {
      model.statadd("Armor Class", 6, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 6);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Robe of the Archfiend +4"] = new RulesElement({
    name: "Robe of the Archfiend +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1759",
    source: "Adventurer's Vault",
    categories: ["Robe of the Archfiend +4", "ID_FMP_MAGIC_ITEM_1759"],
    rules: function(model) {
      model.statadd("Armor Class", 4, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 4);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Robe of the Archfiend +5"] = new RulesElement({
    name: "Robe of the Archfiend +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1760",
    source: "Adventurer's Vault",
    categories: ["Robe of the Archfiend +5", "ID_FMP_MAGIC_ITEM_1760"],
    rules: function(model) {
      model.statadd("Armor Class", 5, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 5);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Robe of the Archfiend +6"] = new RulesElement({
    name: "Robe of the Archfiend +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1761",
    source: "Adventurer's Vault",
    categories: ["Robe of the Archfiend +6", "ID_FMP_MAGIC_ITEM_1761"],
    rules: function(model) {
      model.statadd("Armor Class", 6, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 6);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Rod of Blasting +1"] = new RulesElement({
    name: "Rod of Blasting +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2815",
    source: "Adventurer's Vault",
    categories: ["Rod of Blasting +1", "ID_FMP_MAGIC_ITEM_2815"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Rod of Blasting +2"] = new RulesElement({
    name: "Rod of Blasting +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2816",
    source: "Adventurer's Vault",
    categories: ["Rod of Blasting +2", "ID_FMP_MAGIC_ITEM_2816"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Rod of Blasting +3"] = new RulesElement({
    name: "Rod of Blasting +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2817",
    source: "Adventurer's Vault",
    categories: ["Rod of Blasting +3", "ID_FMP_MAGIC_ITEM_2817"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Rod of Blasting +4"] = new RulesElement({
    name: "Rod of Blasting +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2818",
    source: "Adventurer's Vault",
    categories: ["Rod of Blasting +4", "ID_FMP_MAGIC_ITEM_2818"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Rod of Blasting +5"] = new RulesElement({
    name: "Rod of Blasting +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2819",
    source: "Adventurer's Vault",
    categories: ["Rod of Blasting +5", "ID_FMP_MAGIC_ITEM_2819"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Rod of Blasting +6"] = new RulesElement({
    name: "Rod of Blasting +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2820",
    source: "Adventurer's Vault",
    categories: ["Rod of Blasting +6", "ID_FMP_MAGIC_ITEM_2820"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Rod of Brutality +2"] = new RulesElement({
    name: "Rod of Brutality +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2821",
    source: "Adventurer's Vault",
    categories: ["Rod of Brutality +2", "ID_FMP_MAGIC_ITEM_2821"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Rod of Brutality +3"] = new RulesElement({
    name: "Rod of Brutality +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2822",
    source: "Adventurer's Vault",
    categories: ["Rod of Brutality +3", "ID_FMP_MAGIC_ITEM_2822"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Rod of Brutality +4"] = new RulesElement({
    name: "Rod of Brutality +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2823",
    source: "Adventurer's Vault",
    categories: ["Rod of Brutality +4", "ID_FMP_MAGIC_ITEM_2823"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Rod of Brutality +5"] = new RulesElement({
    name: "Rod of Brutality +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2824",
    source: "Adventurer's Vault",
    categories: ["Rod of Brutality +5", "ID_FMP_MAGIC_ITEM_2824"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Rod of Brutality +6"] = new RulesElement({
    name: "Rod of Brutality +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2825",
    source: "Adventurer's Vault",
    categories: ["Rod of Brutality +6", "ID_FMP_MAGIC_ITEM_2825"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Rod of Cursed Honor +1"] = new RulesElement({
    name: "Rod of Cursed Honor +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2826",
    source: "Adventurer's Vault",
    categories: ["Rod of Cursed Honor +1", "ID_FMP_MAGIC_ITEM_2826"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Rod of Cursed Honor +2"] = new RulesElement({
    name: "Rod of Cursed Honor +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2827",
    source: "Adventurer's Vault",
    categories: ["Rod of Cursed Honor +2", "ID_FMP_MAGIC_ITEM_2827"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Rod of Cursed Honor +3"] = new RulesElement({
    name: "Rod of Cursed Honor +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2828",
    source: "Adventurer's Vault",
    categories: ["Rod of Cursed Honor +3", "ID_FMP_MAGIC_ITEM_2828"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Rod of Cursed Honor +4"] = new RulesElement({
    name: "Rod of Cursed Honor +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2829",
    source: "Adventurer's Vault",
    categories: ["Rod of Cursed Honor +4", "ID_FMP_MAGIC_ITEM_2829"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Rod of Cursed Honor +5"] = new RulesElement({
    name: "Rod of Cursed Honor +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2830",
    source: "Adventurer's Vault",
    categories: ["Rod of Cursed Honor +5", "ID_FMP_MAGIC_ITEM_2830"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Rod of Cursed Honor +6"] = new RulesElement({
    name: "Rod of Cursed Honor +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2831",
    source: "Adventurer's Vault",
    categories: ["Rod of Cursed Honor +6", "ID_FMP_MAGIC_ITEM_2831"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Rod of Feythorns +2"] = new RulesElement({
    name: "Rod of Feythorns +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2832",
    source: "Adventurer's Vault",
    categories: ["Rod of Feythorns +2", "ID_FMP_MAGIC_ITEM_2832"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Rod of Feythorns +3"] = new RulesElement({
    name: "Rod of Feythorns +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2833",
    source: "Adventurer's Vault",
    categories: ["Rod of Feythorns +3", "ID_FMP_MAGIC_ITEM_2833"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Rod of Feythorns +4"] = new RulesElement({
    name: "Rod of Feythorns +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2834",
    source: "Adventurer's Vault",
    categories: ["Rod of Feythorns +4", "ID_FMP_MAGIC_ITEM_2834"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Rod of Feythorns +5"] = new RulesElement({
    name: "Rod of Feythorns +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2835",
    source: "Adventurer's Vault",
    categories: ["Rod of Feythorns +5", "ID_FMP_MAGIC_ITEM_2835"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Rod of Feythorns +6"] = new RulesElement({
    name: "Rod of Feythorns +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2836",
    source: "Adventurer's Vault",
    categories: ["Rod of Feythorns +6", "ID_FMP_MAGIC_ITEM_2836"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Rod of Malign Conveyance +1"] = new RulesElement({
    name: "Rod of Malign Conveyance +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2837",
    source: "Adventurer's Vault",
    categories: ["Rod of Malign Conveyance +1", "ID_FMP_MAGIC_ITEM_2837"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Rod of Malign Conveyance +2"] = new RulesElement({
    name: "Rod of Malign Conveyance +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2838",
    source: "Adventurer's Vault",
    categories: ["Rod of Malign Conveyance +2", "ID_FMP_MAGIC_ITEM_2838"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Rod of Malign Conveyance +3"] = new RulesElement({
    name: "Rod of Malign Conveyance +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2839",
    source: "Adventurer's Vault",
    categories: ["Rod of Malign Conveyance +3", "ID_FMP_MAGIC_ITEM_2839"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Rod of Malign Conveyance +4"] = new RulesElement({
    name: "Rod of Malign Conveyance +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2840",
    source: "Adventurer's Vault",
    categories: ["Rod of Malign Conveyance +4", "ID_FMP_MAGIC_ITEM_2840"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Rod of Malign Conveyance +5"] = new RulesElement({
    name: "Rod of Malign Conveyance +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2841",
    source: "Adventurer's Vault",
    categories: ["Rod of Malign Conveyance +5", "ID_FMP_MAGIC_ITEM_2841"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Rod of Malign Conveyance +6"] = new RulesElement({
    name: "Rod of Malign Conveyance +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2842",
    source: "Adventurer's Vault",
    categories: ["Rod of Malign Conveyance +6", "ID_FMP_MAGIC_ITEM_2842"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Rod of Mindbending +2"] = new RulesElement({
    name: "Rod of Mindbending +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2843",
    source: "Adventurer's Vault",
    categories: ["Rod of Mindbending +2", "ID_FMP_MAGIC_ITEM_2843"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Rod of Mindbending +3"] = new RulesElement({
    name: "Rod of Mindbending +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2844",
    source: "Adventurer's Vault",
    categories: ["Rod of Mindbending +3", "ID_FMP_MAGIC_ITEM_2844"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Rod of Mindbending +4"] = new RulesElement({
    name: "Rod of Mindbending +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2845",
    source: "Adventurer's Vault",
    categories: ["Rod of Mindbending +4", "ID_FMP_MAGIC_ITEM_2845"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Rod of Mindbending +5"] = new RulesElement({
    name: "Rod of Mindbending +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2846",
    source: "Adventurer's Vault",
    categories: ["Rod of Mindbending +5", "ID_FMP_MAGIC_ITEM_2846"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Rod of Mindbending +6"] = new RulesElement({
    name: "Rod of Mindbending +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2847",
    source: "Adventurer's Vault",
    categories: ["Rod of Mindbending +6", "ID_FMP_MAGIC_ITEM_2847"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Rod of Starlight +2"] = new RulesElement({
    name: "Rod of Starlight +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2848",
    source: "Adventurer's Vault",
    categories: ["Rod of Starlight +2", "ID_FMP_MAGIC_ITEM_2848"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Rod of Starlight +3"] = new RulesElement({
    name: "Rod of Starlight +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2849",
    source: "Adventurer's Vault",
    categories: ["Rod of Starlight +3", "ID_FMP_MAGIC_ITEM_2849"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Rod of Starlight +4"] = new RulesElement({
    name: "Rod of Starlight +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2850",
    source: "Adventurer's Vault",
    categories: ["Rod of Starlight +4", "ID_FMP_MAGIC_ITEM_2850"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Rod of Starlight +5"] = new RulesElement({
    name: "Rod of Starlight +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2851",
    source: "Adventurer's Vault",
    categories: ["Rod of Starlight +5", "ID_FMP_MAGIC_ITEM_2851"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Rod of Starlight +6"] = new RulesElement({
    name: "Rod of Starlight +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2852",
    source: "Adventurer's Vault",
    categories: ["Rod of Starlight +6", "ID_FMP_MAGIC_ITEM_2852"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Rod of the Bloodthorn +4"] = new RulesElement({
    name: "Rod of the Bloodthorn +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2853",
    source: "Adventurer's Vault",
    categories: ["Rod of the Bloodthorn +4", "ID_FMP_MAGIC_ITEM_2853"],
    rules: function(model) {
      model.statadd("Attack Rolls(Rod of the Bloodthorn +4)", function() { /* if you or the target is bloodied */ return 1; });
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Rod of the Bloodthorn +5"] = new RulesElement({
    name: "Rod of the Bloodthorn +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2854",
    source: "Adventurer's Vault",
    categories: ["Rod of the Bloodthorn +5", "ID_FMP_MAGIC_ITEM_2854"],
    rules: function(model) {
      model.statadd("Attack Rolls(Rod of the Bloodthorn +5)", function() { /* if you or the target is bloodied */ return 1; });
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Rod of the Bloodthorn +6"] = new RulesElement({
    name: "Rod of the Bloodthorn +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2855",
    source: "Adventurer's Vault",
    categories: ["Rod of the Bloodthorn +6", "ID_FMP_MAGIC_ITEM_2855"],
    rules: function(model) {
      model.statadd("Attack Rolls(Rod of the Bloodthorn +6)", function() { /* if you or the target is bloodied */ return 1; });
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Rod of the Churning Inferno +3"] = new RulesElement({
    name: "Rod of the Churning Inferno +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2856",
    source: "Adventurer's Vault",
    categories: ["Rod of the Churning Inferno +3", "ID_FMP_MAGIC_ITEM_2856"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Rod of the Churning Inferno +4"] = new RulesElement({
    name: "Rod of the Churning Inferno +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2857",
    source: "Adventurer's Vault",
    categories: ["Rod of the Churning Inferno +4", "ID_FMP_MAGIC_ITEM_2857"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Rod of the Churning Inferno +5"] = new RulesElement({
    name: "Rod of the Churning Inferno +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2858",
    source: "Adventurer's Vault",
    categories: ["Rod of the Churning Inferno +5", "ID_FMP_MAGIC_ITEM_2858"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Rod of the Churning Inferno +6"] = new RulesElement({
    name: "Rod of the Churning Inferno +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2859",
    source: "Adventurer's Vault",
    categories: ["Rod of the Churning Inferno +6", "ID_FMP_MAGIC_ITEM_2859"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Rod of the Dragonborn +1"] = new RulesElement({
    name: "Rod of the Dragonborn +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2860",
    source: "Adventurer's Vault",
    categories: ["Rod of the Dragonborn +1", "ID_FMP_MAGIC_ITEM_2860"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Rod of the Dragonborn +2"] = new RulesElement({
    name: "Rod of the Dragonborn +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2861",
    source: "Adventurer's Vault",
    categories: ["Rod of the Dragonborn +2", "ID_FMP_MAGIC_ITEM_2861"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Rod of the Dragonborn +3"] = new RulesElement({
    name: "Rod of the Dragonborn +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2862",
    source: "Adventurer's Vault",
    categories: ["Rod of the Dragonborn +3", "ID_FMP_MAGIC_ITEM_2862"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Rod of the Dragonborn +4"] = new RulesElement({
    name: "Rod of the Dragonborn +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2863",
    source: "Adventurer's Vault",
    categories: ["Rod of the Dragonborn +4", "ID_FMP_MAGIC_ITEM_2863"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Rod of the Dragonborn +5"] = new RulesElement({
    name: "Rod of the Dragonborn +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2864",
    source: "Adventurer's Vault",
    categories: ["Rod of the Dragonborn +5", "ID_FMP_MAGIC_ITEM_2864"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Rod of the Dragonborn +6"] = new RulesElement({
    name: "Rod of the Dragonborn +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2865",
    source: "Adventurer's Vault",
    categories: ["Rod of the Dragonborn +6", "ID_FMP_MAGIC_ITEM_2865"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Rod of the Feywild +2"] = new RulesElement({
    name: "Rod of the Feywild +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2866",
    source: "Adventurer's Vault",
    categories: ["Rod of the Feywild +2", "ID_FMP_MAGIC_ITEM_2866"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Rod of the Feywild +3"] = new RulesElement({
    name: "Rod of the Feywild +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2867",
    source: "Adventurer's Vault",
    categories: ["Rod of the Feywild +3", "ID_FMP_MAGIC_ITEM_2867"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Rod of the Feywild +4"] = new RulesElement({
    name: "Rod of the Feywild +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2868",
    source: "Adventurer's Vault",
    categories: ["Rod of the Feywild +4", "ID_FMP_MAGIC_ITEM_2868"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Rod of the Feywild +5"] = new RulesElement({
    name: "Rod of the Feywild +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2869",
    source: "Adventurer's Vault",
    categories: ["Rod of the Feywild +5", "ID_FMP_MAGIC_ITEM_2869"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Rod of the Feywild +6"] = new RulesElement({
    name: "Rod of the Feywild +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2870",
    source: "Adventurer's Vault",
    categories: ["Rod of the Feywild +6", "ID_FMP_MAGIC_ITEM_2870"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Rod of the Hidden Star +2"] = new RulesElement({
    name: "Rod of the Hidden Star +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2871",
    source: "Adventurer's Vault",
    categories: ["Rod of the Hidden Star +2", "ID_FMP_MAGIC_ITEM_2871"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Rod of the Hidden Star +3"] = new RulesElement({
    name: "Rod of the Hidden Star +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2872",
    source: "Adventurer's Vault",
    categories: ["Rod of the Hidden Star +3", "ID_FMP_MAGIC_ITEM_2872"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Rod of the Hidden Star +4"] = new RulesElement({
    name: "Rod of the Hidden Star +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2873",
    source: "Adventurer's Vault",
    categories: ["Rod of the Hidden Star +4", "ID_FMP_MAGIC_ITEM_2873"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Rod of the Hidden Star +5"] = new RulesElement({
    name: "Rod of the Hidden Star +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2874",
    source: "Adventurer's Vault",
    categories: ["Rod of the Hidden Star +5", "ID_FMP_MAGIC_ITEM_2874"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Rod of the Hidden Star +6"] = new RulesElement({
    name: "Rod of the Hidden Star +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2875",
    source: "Adventurer's Vault",
    categories: ["Rod of the Hidden Star +6", "ID_FMP_MAGIC_ITEM_2875"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Rod of the Infernal +2"] = new RulesElement({
    name: "Rod of the Infernal +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2876",
    source: "Adventurer's Vault",
    categories: ["Rod of the Infernal +2", "ID_FMP_MAGIC_ITEM_2876"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Rod of the Infernal +3"] = new RulesElement({
    name: "Rod of the Infernal +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2877",
    source: "Adventurer's Vault",
    categories: ["Rod of the Infernal +3", "ID_FMP_MAGIC_ITEM_2877"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Rod of the Infernal +4"] = new RulesElement({
    name: "Rod of the Infernal +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2878",
    source: "Adventurer's Vault",
    categories: ["Rod of the Infernal +4", "ID_FMP_MAGIC_ITEM_2878"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Rod of the Infernal +5"] = new RulesElement({
    name: "Rod of the Infernal +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2879",
    source: "Adventurer's Vault",
    categories: ["Rod of the Infernal +5", "ID_FMP_MAGIC_ITEM_2879"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Rod of the Infernal +6"] = new RulesElement({
    name: "Rod of the Infernal +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2880",
    source: "Adventurer's Vault",
    categories: ["Rod of the Infernal +6", "ID_FMP_MAGIC_ITEM_2880"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Rod of the Shadow Walker +1"] = new RulesElement({
    name: "Rod of the Shadow Walker +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2881",
    source: "Adventurer's Vault",
    categories: ["Rod of the Shadow Walker +1", "ID_FMP_MAGIC_ITEM_2881"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Rod of the Shadow Walker +2"] = new RulesElement({
    name: "Rod of the Shadow Walker +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2882",
    source: "Adventurer's Vault",
    categories: ["Rod of the Shadow Walker +2", "ID_FMP_MAGIC_ITEM_2882"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Rod of the Shadow Walker +3"] = new RulesElement({
    name: "Rod of the Shadow Walker +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2883",
    source: "Adventurer's Vault",
    categories: ["Rod of the Shadow Walker +3", "ID_FMP_MAGIC_ITEM_2883"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Rod of the Shadow Walker +4"] = new RulesElement({
    name: "Rod of the Shadow Walker +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2884",
    source: "Adventurer's Vault",
    categories: ["Rod of the Shadow Walker +4", "ID_FMP_MAGIC_ITEM_2884"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Rod of the Shadow Walker +5"] = new RulesElement({
    name: "Rod of the Shadow Walker +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2885",
    source: "Adventurer's Vault",
    categories: ["Rod of the Shadow Walker +5", "ID_FMP_MAGIC_ITEM_2885"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Rod of the Shadow Walker +6"] = new RulesElement({
    name: "Rod of the Shadow Walker +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2886",
    source: "Adventurer's Vault",
    categories: ["Rod of the Shadow Walker +6", "ID_FMP_MAGIC_ITEM_2886"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Rod of the Sorrowsworn +3"] = new RulesElement({
    name: "Rod of the Sorrowsworn +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2887",
    source: "Adventurer's Vault",
    categories: ["Rod of the Sorrowsworn +3", "ID_FMP_MAGIC_ITEM_2887"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Rod of the Sorrowsworn +4"] = new RulesElement({
    name: "Rod of the Sorrowsworn +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2888",
    source: "Adventurer's Vault",
    categories: ["Rod of the Sorrowsworn +4", "ID_FMP_MAGIC_ITEM_2888"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Rod of the Sorrowsworn +5"] = new RulesElement({
    name: "Rod of the Sorrowsworn +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2889",
    source: "Adventurer's Vault",
    categories: ["Rod of the Sorrowsworn +5", "ID_FMP_MAGIC_ITEM_2889"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Rod of the Sorrowsworn +6"] = new RulesElement({
    name: "Rod of the Sorrowsworn +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2890",
    source: "Adventurer's Vault",
    categories: ["Rod of the Sorrowsworn +6", "ID_FMP_MAGIC_ITEM_2890"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Rod of the Star Spawn +5"] = new RulesElement({
    name: "Rod of the Star Spawn +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2891",
    source: "Adventurer's Vault",
    categories: ["Rod of the Star Spawn +5", "ID_FMP_MAGIC_ITEM_2891"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Rod of the Star Spawn +6"] = new RulesElement({
    name: "Rod of the Star Spawn +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2892",
    source: "Adventurer's Vault",
    categories: ["Rod of the Star Spawn +6", "ID_FMP_MAGIC_ITEM_2892"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Rod of Vulnerability +3"] = new RulesElement({
    name: "Rod of Vulnerability +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2893",
    source: "Adventurer's Vault",
    categories: ["Rod of Vulnerability +3", "ID_FMP_MAGIC_ITEM_2893"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Rod of Vulnerability +4"] = new RulesElement({
    name: "Rod of Vulnerability +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2894",
    source: "Adventurer's Vault",
    categories: ["Rod of Vulnerability +4", "ID_FMP_MAGIC_ITEM_2894"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Rod of Vulnerability +5"] = new RulesElement({
    name: "Rod of Vulnerability +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2895",
    source: "Adventurer's Vault",
    categories: ["Rod of Vulnerability +5", "ID_FMP_MAGIC_ITEM_2895"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Rod of Vulnerability +6"] = new RulesElement({
    name: "Rod of Vulnerability +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2896",
    source: "Adventurer's Vault",
    categories: ["Rod of Vulnerability +6", "ID_FMP_MAGIC_ITEM_2896"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Rogue's Belt (paragon tier)"] = new RulesElement({
    name: "Rogue's Belt (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3811",
    source: "Adventurer's Vault",
    categories: ["Rogue's Belt (paragon tier)", "ID_FMP_MAGIC_ITEM_3811"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Rope of Slave Fighting (heroic tier)"] = new RulesElement({
    name: "Rope of Slave Fighting (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3812",
    source: "Adventurer's Vault",
    categories: ["Rope of Slave Fighting (heroic tier)", "ID_FMP_MAGIC_ITEM_3812"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Rope of Slave Fighting (paragon tier)"] = new RulesElement({
    name: "Rope of Slave Fighting (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3813",
    source: "Adventurer's Vault",
    categories: ["Rope of Slave Fighting (paragon tier)", "ID_FMP_MAGIC_ITEM_3813"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Ruby Scabbard (heroic tier)"] = new RulesElement({
    name: "Ruby Scabbard (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3881",
    source: "Adventurer's Vault",
    categories: ["Ruby Scabbard (heroic tier)", "ID_FMP_MAGIC_ITEM_3881"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Rushing Cleats (heroic tier)"] = new RulesElement({
    name: "Rushing Cleats (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3344",
    source: "Adventurer's Vault",
    categories: ["Rushing Cleats (heroic tier)", "ID_FMP_MAGIC_ITEM_3344"],
    rules: function(model) {
      model.statadd("attack rolls", function() { /* to bull rush attacks */ return 2; }, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Sacrificial Weapon +2"] = new RulesElement({
    name: "Sacrificial Weapon +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2330",
    source: "Adventurer's Vault",
    categories: ["Sacrificial Weapon +2", "ID_FMP_MAGIC_ITEM_2330"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Sacrificial Weapon +3"] = new RulesElement({
    name: "Sacrificial Weapon +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2331",
    source: "Adventurer's Vault",
    categories: ["Sacrificial Weapon +3", "ID_FMP_MAGIC_ITEM_2331"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Sacrificial Weapon +4"] = new RulesElement({
    name: "Sacrificial Weapon +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2332",
    source: "Adventurer's Vault",
    categories: ["Sacrificial Weapon +4", "ID_FMP_MAGIC_ITEM_2332"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Sacrificial Weapon +5"] = new RulesElement({
    name: "Sacrificial Weapon +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2333",
    source: "Adventurer's Vault",
    categories: ["Sacrificial Weapon +5", "ID_FMP_MAGIC_ITEM_2333"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Sacrificial Weapon +6"] = new RulesElement({
    name: "Sacrificial Weapon +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2334",
    source: "Adventurer's Vault",
    categories: ["Sacrificial Weapon +6", "ID_FMP_MAGIC_ITEM_2334"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Saddle of Strength (heroic tier)"] = new RulesElement({
    name: "Saddle of Strength (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3980",
    source: "Adventurer's Vault",
    categories: ["Saddle of Strength (heroic tier)", "ID_FMP_MAGIC_ITEM_3980"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Saddle of the Nightmare (paragon tier)"] = new RulesElement({
    name: "Saddle of the Nightmare (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3981",
    source: "Adventurer's Vault",
    categories: ["Saddle of the Nightmare (paragon tier)", "ID_FMP_MAGIC_ITEM_3981"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Saddle of the Shark (paragon tier)"] = new RulesElement({
    name: "Saddle of the Shark (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3982",
    source: "Adventurer's Vault",
    categories: ["Saddle of the Shark (paragon tier)", "ID_FMP_MAGIC_ITEM_3982"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Sail of Winds (paragon tier)"] = new RulesElement({
    name: "Sail of Winds (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3882",
    source: "Adventurer's Vault",
    categories: ["Sail of Winds (paragon tier)", "ID_FMP_MAGIC_ITEM_3882"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Salubrious Armor +1"] = new RulesElement({
    name: "Salubrious Armor +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1762",
    source: "Adventurer's Vault",
    categories: ["Salubrious Armor +1", "ID_FMP_MAGIC_ITEM_1762"],
    rules: function(model) {
      model.statadd("Armor Class", 1, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 1);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Salubrious Armor +2"] = new RulesElement({
    name: "Salubrious Armor +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1763",
    source: "Adventurer's Vault",
    categories: ["Salubrious Armor +2", "ID_FMP_MAGIC_ITEM_1763"],
    rules: function(model) {
      model.statadd("Armor Class", 2, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 2);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Salubrious Armor +3"] = new RulesElement({
    name: "Salubrious Armor +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1764",
    source: "Adventurer's Vault",
    categories: ["Salubrious Armor +3", "ID_FMP_MAGIC_ITEM_1764"],
    rules: function(model) {
      model.statadd("Armor Class", 3, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 3);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Salubrious Armor +4"] = new RulesElement({
    name: "Salubrious Armor +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1765",
    source: "Adventurer's Vault",
    categories: ["Salubrious Armor +4", "ID_FMP_MAGIC_ITEM_1765"],
    rules: function(model) {
      model.statadd("Armor Class", 4, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 4);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Salubrious Armor +5"] = new RulesElement({
    name: "Salubrious Armor +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1766",
    source: "Adventurer's Vault",
    categories: ["Salubrious Armor +5", "ID_FMP_MAGIC_ITEM_1766"],
    rules: function(model) {
      model.statadd("Armor Class", 5, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 5);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Salubrious Armor +6"] = new RulesElement({
    name: "Salubrious Armor +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1767",
    source: "Adventurer's Vault",
    categories: ["Salubrious Armor +6", "ID_FMP_MAGIC_ITEM_1767"],
    rules: function(model) {
      model.statadd("Armor Class", 6, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 6);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Salve of Power (heroic tier)"] = new RulesElement({
    name: "Salve of Power (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3883",
    source: "Adventurer's Vault",
    categories: ["Salve of Power (heroic tier)", "ID_FMP_MAGIC_ITEM_3883"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Salve of Slipperiness (heroic tier)"] = new RulesElement({
    name: "Salve of Slipperiness (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1391",
    source: "Adventurer's Vault",
    categories: ["Salve of Slipperiness (heroic tier)", "ID_FMP_MAGIC_ITEM_1391"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Salve Slipperiness (level 13)"] = new RulesElement({
    name: "Salve Slipperiness (level 13)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1392",
    source: "Adventurer's Vault",
    categories: ["Salve Slipperiness (level 13)", "ID_FMP_MAGIC_ITEM_1392"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Salve Slipperiness (level 18)"] = new RulesElement({
    name: "Salve Slipperiness (level 18)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1393",
    source: "Adventurer's Vault",
    categories: ["Salve Slipperiness (level 18)", "ID_FMP_MAGIC_ITEM_1393"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Salve Slipperiness (level 23)"] = new RulesElement({
    name: "Salve Slipperiness (level 23)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1394",
    source: "Adventurer's Vault",
    categories: ["Salve Slipperiness (level 23)", "ID_FMP_MAGIC_ITEM_1394"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Salve Slipperiness (level 28)"] = new RulesElement({
    name: "Salve Slipperiness (level 28)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1395",
    source: "Adventurer's Vault",
    categories: ["Salve Slipperiness (level 28)", "ID_FMP_MAGIC_ITEM_1395"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Sandals of Arcane Transposition (paragon tier)"] = new RulesElement({
    name: "Sandals of Arcane Transposition (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3345",
    source: "Adventurer's Vault",
    categories: ["Sandals of Arcane Transposition (paragon tier)", "ID_FMP_MAGIC_ITEM_3345"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Sandals of Avandra (epic tier)"] = new RulesElement({
    name: "Sandals of Avandra (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3346",
    source: "Adventurer's Vault",
    categories: ["Sandals of Avandra (epic tier)", "ID_FMP_MAGIC_ITEM_3346"],
    rules: function(model) {
      model.statadd("Speed", 2, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Sandals of Precise Stepping (epic tier)"] = new RulesElement({
    name: "Sandals of Precise Stepping (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3349",
    source: "Adventurer's Vault",
    categories: ["Sandals of Precise Stepping (epic tier)", "ID_FMP_MAGIC_ITEM_3349"],
    rules: function(model) {
      model.statadd("Acrobatics Misc", 4, "item");
      model.statadd("Athletics Misc", 4, "item");
      model.statadd("Stealth Misc", 4, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Sandals of Precise Stepping (heroic tier)"] = new RulesElement({
    name: "Sandals of Precise Stepping (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3347",
    source: "Adventurer's Vault",
    categories: ["Sandals of Precise Stepping (heroic tier)", "ID_FMP_MAGIC_ITEM_3347"],
    rules: function(model) {
      model.statadd("Acrobatics Misc", 2, "item");
      model.statadd("Athletics Misc", 2, "item");
      model.statadd("Stealth Misc", 2, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Sandals of Precise Stepping (paragon tier)"] = new RulesElement({
    name: "Sandals of Precise Stepping (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3348",
    source: "Adventurer's Vault",
    categories: ["Sandals of Precise Stepping (paragon tier)", "ID_FMP_MAGIC_ITEM_3348"],
    rules: function(model) {
      model.statadd("Acrobatics Misc", 3, "item");
      model.statadd("Athletics Misc", 3, "item");
      model.statadd("Stealth Misc", 3, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Sapphire Scabbard (paragon tier)"] = new RulesElement({
    name: "Sapphire Scabbard (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3884",
    source: "Adventurer's Vault",
    categories: ["Sapphire Scabbard (paragon tier)", "ID_FMP_MAGIC_ITEM_3884"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Sash of Ensnarement (heroic tier)"] = new RulesElement({
    name: "Sash of Ensnarement (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3814",
    source: "Adventurer's Vault",
    categories: ["Sash of Ensnarement (heroic tier)", "ID_FMP_MAGIC_ITEM_3814"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Scabbard of Sacred Might (heroic tier)"] = new RulesElement({
    name: "Scabbard of Sacred Might (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3885",
    source: "Adventurer's Vault",
    categories: ["Scabbard of Sacred Might (heroic tier)", "ID_FMP_MAGIC_ITEM_3885"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Scalebane Weapon +1"] = new RulesElement({
    name: "Scalebane Weapon +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2335",
    source: "Adventurer's Vault",
    categories: ["Scalebane Weapon +1", "ID_FMP_MAGIC_ITEM_2335"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Scalebane Weapon +2"] = new RulesElement({
    name: "Scalebane Weapon +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2336",
    source: "Adventurer's Vault",
    categories: ["Scalebane Weapon +2", "ID_FMP_MAGIC_ITEM_2336"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Scalebane Weapon +3"] = new RulesElement({
    name: "Scalebane Weapon +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2337",
    source: "Adventurer's Vault",
    categories: ["Scalebane Weapon +3", "ID_FMP_MAGIC_ITEM_2337"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Scalebane Weapon +4"] = new RulesElement({
    name: "Scalebane Weapon +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2338",
    source: "Adventurer's Vault",
    categories: ["Scalebane Weapon +4", "ID_FMP_MAGIC_ITEM_2338"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Scalebane Weapon +5"] = new RulesElement({
    name: "Scalebane Weapon +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2339",
    source: "Adventurer's Vault",
    categories: ["Scalebane Weapon +5", "ID_FMP_MAGIC_ITEM_2339"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Scalebane Weapon +6"] = new RulesElement({
    name: "Scalebane Weapon +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2340",
    source: "Adventurer's Vault",
    categories: ["Scalebane Weapon +6", "ID_FMP_MAGIC_ITEM_2340"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Screaming Armor +1"] = new RulesElement({
    name: "Screaming Armor +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1768",
    source: "Adventurer's Vault",
    categories: ["Screaming Armor +1", "ID_FMP_MAGIC_ITEM_1768"],
    rules: function(model) {
      model.statadd("Intimidate Misc", 1, "item");
      model.statadd("Armor Class", 1, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 1);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Screaming Armor +2"] = new RulesElement({
    name: "Screaming Armor +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1769",
    source: "Adventurer's Vault",
    categories: ["Screaming Armor +2", "ID_FMP_MAGIC_ITEM_1769"],
    rules: function(model) {
      model.statadd("Intimidate Misc", 2, "item");
      model.statadd("Armor Class", 2, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 2);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Screaming Armor +3"] = new RulesElement({
    name: "Screaming Armor +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1770",
    source: "Adventurer's Vault",
    categories: ["Screaming Armor +3", "ID_FMP_MAGIC_ITEM_1770"],
    rules: function(model) {
      model.statadd("Intimidate Misc", 3, "item");
      model.statadd("Armor Class", 3, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 3);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Screaming Armor +4"] = new RulesElement({
    name: "Screaming Armor +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1771",
    source: "Adventurer's Vault",
    categories: ["Screaming Armor +4", "ID_FMP_MAGIC_ITEM_1771"],
    rules: function(model) {
      model.statadd("Intimidate Misc", 4, "item");
      model.statadd("Armor Class", 4, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 4);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Screaming Armor +5"] = new RulesElement({
    name: "Screaming Armor +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1772",
    source: "Adventurer's Vault",
    categories: ["Screaming Armor +5", "ID_FMP_MAGIC_ITEM_1772"],
    rules: function(model) {
      model.statadd("Intimidate Misc", 5, "item");
      model.statadd("Armor Class", 5, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 5);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Screaming Armor +6"] = new RulesElement({
    name: "Screaming Armor +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1773",
    source: "Adventurer's Vault",
    categories: ["Screaming Armor +6", "ID_FMP_MAGIC_ITEM_1773"],
    rules: function(model) {
      model.statadd("Intimidate Misc", 6, "item");
      model.statadd("Armor Class", 6, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 6);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Serpentskin Armor +1"] = new RulesElement({
    name: "Serpentskin Armor +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1774",
    source: "Adventurer's Vault",
    categories: ["Serpentskin Armor +1", "ID_FMP_MAGIC_ITEM_1774"],
    rules: function(model) {
      model.statadd("Armor Class", 1, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 1);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Serpentskin Armor +2"] = new RulesElement({
    name: "Serpentskin Armor +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1775",
    source: "Adventurer's Vault",
    categories: ["Serpentskin Armor +2", "ID_FMP_MAGIC_ITEM_1775"],
    rules: function(model) {
      model.statadd("Armor Class", 2, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 2);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Serpentskin Armor +3"] = new RulesElement({
    name: "Serpentskin Armor +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1776",
    source: "Adventurer's Vault",
    categories: ["Serpentskin Armor +3", "ID_FMP_MAGIC_ITEM_1776"],
    rules: function(model) {
      model.statadd("Armor Class", 3, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 3);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Serpentskin Armor +4"] = new RulesElement({
    name: "Serpentskin Armor +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1777",
    source: "Adventurer's Vault",
    categories: ["Serpentskin Armor +4", "ID_FMP_MAGIC_ITEM_1777"],
    rules: function(model) {
      model.statadd("Armor Class", 4, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 4);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Serpentskin Armor +5"] = new RulesElement({
    name: "Serpentskin Armor +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1778",
    source: "Adventurer's Vault",
    categories: ["Serpentskin Armor +5", "ID_FMP_MAGIC_ITEM_1778"],
    rules: function(model) {
      model.statadd("Armor Class", 5, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 5);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Serpentskin Armor +6"] = new RulesElement({
    name: "Serpentskin Armor +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1779",
    source: "Adventurer's Vault",
    categories: ["Serpentskin Armor +6", "ID_FMP_MAGIC_ITEM_1779"],
    rules: function(model) {
      model.statadd("Armor Class", 6, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 6);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Shadow Band (epic tier)"] = new RulesElement({
    name: "Shadow Band (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3763",
    source: "Adventurer's Vault",
    categories: ["Shadow Band (epic tier)", "ID_FMP_MAGIC_ITEM_3763"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Shadow Spike +5"] = new RulesElement({
    name: "Shadow Spike +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2341",
    source: "Adventurer's Vault",
    categories: ["Shadow Spike +5", "ID_FMP_MAGIC_ITEM_2341"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Shadow Spike +6"] = new RulesElement({
    name: "Shadow Spike +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2342",
    source: "Adventurer's Vault",
    categories: ["Shadow Spike +6", "ID_FMP_MAGIC_ITEM_2342"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Shadowflow Shield (epic tier)"] = new RulesElement({
    name: "Shadowflow Shield (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3266",
    source: "Adventurer's Vault",
    categories: ["Shadowflow Shield (epic tier)", "ID_FMP_MAGIC_ITEM_3266"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Shadowflow Shield (heroic tier)"] = new RulesElement({
    name: "Shadowflow Shield (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3264",
    source: "Adventurer's Vault",
    categories: ["Shadowflow Shield (heroic tier)", "ID_FMP_MAGIC_ITEM_3264"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Shadowflow Shield (paragon tier)"] = new RulesElement({
    name: "Shadowflow Shield (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3265",
    source: "Adventurer's Vault",
    categories: ["Shadowflow Shield (paragon tier)", "ID_FMP_MAGIC_ITEM_3265"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Shadowsteppers (paragon tier)"] = new RulesElement({
    name: "Shadowsteppers (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3350",
    source: "Adventurer's Vault",
    categories: ["Shadowsteppers (paragon tier)", "ID_FMP_MAGIC_ITEM_3350"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Shapechanger's Sorrow +2"] = new RulesElement({
    name: "Shapechanger's Sorrow +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2343",
    source: "Adventurer's Vault",
    categories: ["Shapechanger's Sorrow +2", "ID_FMP_MAGIC_ITEM_2343"],
    rules: function(model) {
      model.statadd("AC", function() { /* against creatures not in their natural form */ return 1; });
      model.statadd("Fortitude Defense", function() { /* against creatures not in their natural form */ return 1; });
      model.statadd("Reflex Defense", function() { /* against creatures not in their natural form */ return 1; });
      model.statadd("Will Defense", function() { /* against creatures not in their natural form */ return 1; });
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Shapechanger's Sorrow +3"] = new RulesElement({
    name: "Shapechanger's Sorrow +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2344",
    source: "Adventurer's Vault",
    categories: ["Shapechanger's Sorrow +3", "ID_FMP_MAGIC_ITEM_2344"],
    rules: function(model) {
      model.statadd("AC", function() { /* against creatures not in their natural form */ return 1; });
      model.statadd("Fortitude Defense", function() { /* against creatures not in their natural form */ return 1; });
      model.statadd("Reflex Defense", function() { /* against creatures not in their natural form */ return 1; });
      model.statadd("Will Defense", function() { /* against creatures not in their natural form */ return 1; });
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Shapechanger's Sorrow +4"] = new RulesElement({
    name: "Shapechanger's Sorrow +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2345",
    source: "Adventurer's Vault",
    categories: ["Shapechanger's Sorrow +4", "ID_FMP_MAGIC_ITEM_2345"],
    rules: function(model) {
      model.statadd("AC", function() { /* against creatures not in their natural form */ return 1; });
      model.statadd("Fortitude Defense", function() { /* against creatures not in their natural form */ return 1; });
      model.statadd("Reflex Defense", function() { /* against creatures not in their natural form */ return 1; });
      model.statadd("Will Defense", function() { /* against creatures not in their natural form */ return 1; });
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Shapechanger's Sorrow +5"] = new RulesElement({
    name: "Shapechanger's Sorrow +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2346",
    source: "Adventurer's Vault",
    categories: ["Shapechanger's Sorrow +5", "ID_FMP_MAGIC_ITEM_2346"],
    rules: function(model) {
      model.statadd("AC", function() { /* against creatures not in their natural form */ return 1; });
      model.statadd("Fortitude Defense", function() { /* against creatures not in their natural form */ return 1; });
      model.statadd("Reflex Defense", function() { /* against creatures not in their natural form */ return 1; });
      model.statadd("Will Defense", function() { /* against creatures not in their natural form */ return 1; });
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Shapechanger's Sorrow +6"] = new RulesElement({
    name: "Shapechanger's Sorrow +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2347",
    source: "Adventurer's Vault",
    categories: ["Shapechanger's Sorrow +6", "ID_FMP_MAGIC_ITEM_2347"],
    rules: function(model) {
      model.statadd("AC", function() { /* against creatures not in their natural form */ return 1; });
      model.statadd("Fortitude Defense", function() { /* against creatures not in their natural form */ return 1; });
      model.statadd("Reflex Defense", function() { /* against creatures not in their natural form */ return 1; });
      model.statadd("Will Defense", function() { /* against creatures not in their natural form */ return 1; });
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Shared Suffering Armor +1"] = new RulesElement({
    name: "Shared Suffering Armor +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1780",
    source: "Adventurer's Vault",
    categories: ["Shared Suffering Armor +1", "ID_FMP_MAGIC_ITEM_1780"],
    rules: function(model) {
      model.statadd("Armor Class", 1, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 1);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Shared Suffering Armor +2"] = new RulesElement({
    name: "Shared Suffering Armor +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1781",
    source: "Adventurer's Vault",
    categories: ["Shared Suffering Armor +2", "ID_FMP_MAGIC_ITEM_1781"],
    rules: function(model) {
      model.statadd("Armor Class", 2, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 2);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Shared Suffering Armor +3"] = new RulesElement({
    name: "Shared Suffering Armor +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1782",
    source: "Adventurer's Vault",
    categories: ["Shared Suffering Armor +3", "ID_FMP_MAGIC_ITEM_1782"],
    rules: function(model) {
      model.statadd("Armor Class", 3, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 3);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Shared Suffering Armor +4"] = new RulesElement({
    name: "Shared Suffering Armor +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1783",
    source: "Adventurer's Vault",
    categories: ["Shared Suffering Armor +4", "ID_FMP_MAGIC_ITEM_1783"],
    rules: function(model) {
      model.statadd("Armor Class", 4, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 4);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Shared Suffering Armor +5"] = new RulesElement({
    name: "Shared Suffering Armor +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1784",
    source: "Adventurer's Vault",
    categories: ["Shared Suffering Armor +5", "ID_FMP_MAGIC_ITEM_1784"],
    rules: function(model) {
      model.statadd("Armor Class", 5, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 5);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Shared Suffering Armor +6"] = new RulesElement({
    name: "Shared Suffering Armor +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1785",
    source: "Adventurer's Vault",
    categories: ["Shared Suffering Armor +6", "ID_FMP_MAGIC_ITEM_1785"],
    rules: function(model) {
      model.statadd("Armor Class", 6, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 6);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Shield of Blocking (epic tier)"] = new RulesElement({
    name: "Shield of Blocking (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3268",
    source: "Adventurer's Vault",
    categories: ["Shield of Blocking (epic tier)", "ID_FMP_MAGIC_ITEM_3268"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Shield of Blocking (paragon tier)"] = new RulesElement({
    name: "Shield of Blocking (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3267",
    source: "Adventurer's Vault",
    categories: ["Shield of Blocking (paragon tier)", "ID_FMP_MAGIC_ITEM_3267"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Shield of Eyes (heroic tier)"] = new RulesElement({
    name: "Shield of Eyes (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3269",
    source: "Adventurer's Vault",
    categories: ["Shield of Eyes (heroic tier)", "ID_FMP_MAGIC_ITEM_3269"],
    rules: function(model) {
      model.statadd("AC", function() { /* against opportunity attacks */ return model.stat("Shield Bonus"); }, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Shield of the Guardian (epic tier)"] = new RulesElement({
    name: "Shield of the Guardian (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3272",
    source: "Adventurer's Vault",
    categories: ["Shield of the Guardian (epic tier)", "ID_FMP_MAGIC_ITEM_3272"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Shield of the Guardian (heroic tier)"] = new RulesElement({
    name: "Shield of the Guardian (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3270",
    source: "Adventurer's Vault",
    categories: ["Shield of the Guardian (heroic tier)", "ID_FMP_MAGIC_ITEM_3270"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Shield of the Guardian (paragon tier)"] = new RulesElement({
    name: "Shield of the Guardian (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3271",
    source: "Adventurer's Vault",
    categories: ["Shield of the Guardian (paragon tier)", "ID_FMP_MAGIC_ITEM_3271"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Shielding Girdle (heroic tier)"] = new RulesElement({
    name: "Shielding Girdle (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3815",
    source: "Adventurer's Vault",
    categories: ["Shielding Girdle (heroic tier)", "ID_FMP_MAGIC_ITEM_3815"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Shimmering Armor +1"] = new RulesElement({
    name: "Shimmering Armor +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1786",
    source: "Adventurer's Vault",
    categories: ["Shimmering Armor +1", "ID_FMP_MAGIC_ITEM_1786"],
    rules: function(model) {
      model.statadd("Armor Class", 1, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 1);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Shimmering Armor +2"] = new RulesElement({
    name: "Shimmering Armor +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1787",
    source: "Adventurer's Vault",
    categories: ["Shimmering Armor +2", "ID_FMP_MAGIC_ITEM_1787"],
    rules: function(model) {
      model.statadd("Armor Class", 2, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 2);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Shimmering Armor +3"] = new RulesElement({
    name: "Shimmering Armor +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1788",
    source: "Adventurer's Vault",
    categories: ["Shimmering Armor +3", "ID_FMP_MAGIC_ITEM_1788"],
    rules: function(model) {
      model.statadd("Armor Class", 3, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 3);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Shimmering Armor +4"] = new RulesElement({
    name: "Shimmering Armor +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1789",
    source: "Adventurer's Vault",
    categories: ["Shimmering Armor +4", "ID_FMP_MAGIC_ITEM_1789"],
    rules: function(model) {
      model.statadd("Armor Class", 4, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 4);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Shimmering Armor +5"] = new RulesElement({
    name: "Shimmering Armor +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1790",
    source: "Adventurer's Vault",
    categories: ["Shimmering Armor +5", "ID_FMP_MAGIC_ITEM_1790"],
    rules: function(model) {
      model.statadd("Armor Class", 5, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 5);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Shimmering Armor +6"] = new RulesElement({
    name: "Shimmering Armor +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1791",
    source: "Adventurer's Vault",
    categories: ["Shimmering Armor +6", "ID_FMP_MAGIC_ITEM_1791"],
    rules: function(model) {
      model.statadd("Armor Class", 6, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 6);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Shimmering Light (epic tier)"] = new RulesElement({
    name: "Shimmering Light (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3275",
    source: "Adventurer's Vault",
    categories: ["Shimmering Light (epic tier)", "ID_FMP_MAGIC_ITEM_3275"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Shimmering Light (heroic tier)"] = new RulesElement({
    name: "Shimmering Light (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3273",
    source: "Adventurer's Vault",
    categories: ["Shimmering Light (heroic tier)", "ID_FMP_MAGIC_ITEM_3273"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Shimmering Light (paragon tier)"] = new RulesElement({
    name: "Shimmering Light (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3274",
    source: "Adventurer's Vault",
    categories: ["Shimmering Light (paragon tier)", "ID_FMP_MAGIC_ITEM_3274"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Shocking Armor +6"] = new RulesElement({
    name: "Shocking Armor +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1792",
    source: "Adventurer's Vault",
    categories: ["Shocking Armor +6", "ID_FMP_MAGIC_ITEM_1792"],
    rules: function(model) {
      model.statadd("Armor Class", 6, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 6);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Shroud of Protection (heroic tier)"] = new RulesElement({
    name: "Shroud of Protection (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3886",
    source: "Adventurer's Vault",
    categories: ["Shroud of Protection (heroic tier)", "ID_FMP_MAGIC_ITEM_3886"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Shroud of Revival (heroic tier)"] = new RulesElement({
    name: "Shroud of Revival (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3887",
    source: "Adventurer's Vault",
    categories: ["Shroud of Revival (heroic tier)", "ID_FMP_MAGIC_ITEM_3887"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Sigil of Companionship (epic tier)"] = new RulesElement({
    name: "Sigil of Companionship (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3969",
    source: "Adventurer's Vault",
    categories: ["Sigil of Companionship (epic tier)", "ID_FMP_MAGIC_ITEM_3969"],
    rules: function(model) {
      model.statadd("damage rolls", function() { /* when you flank the target with your companion */ return 5; }, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Sigil of Companionship (heroic tier)"] = new RulesElement({
    name: "Sigil of Companionship (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3967",
    source: "Adventurer's Vault",
    categories: ["Sigil of Companionship (heroic tier)", "ID_FMP_MAGIC_ITEM_3967"],
    rules: function(model) {
      model.statadd("damage rolls", function() { /* when you flank the target with your companion */ return 1; }, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Sigil of Companionship (paragon tier)"] = new RulesElement({
    name: "Sigil of Companionship (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3968",
    source: "Adventurer's Vault",
    categories: ["Sigil of Companionship (paragon tier)", "ID_FMP_MAGIC_ITEM_3968"],
    rules: function(model) {
      model.statadd("damage rolls", function() { /* when you flank the target with your companion */ return 3; }, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Silent Tool (heroic tier)"] = new RulesElement({
    name: "Silent Tool (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3888",
    source: "Adventurer's Vault",
    categories: ["Silent Tool (heroic tier)", "ID_FMP_MAGIC_ITEM_3888"],
    rules: function(model) {
      model.statadd("Stealth Misc", function() { /* to checks made using the silent tool */ return 5; }, "Power");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Skeletal Armor +4"] = new RulesElement({
    name: "Skeletal Armor +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1793",
    source: "Adventurer's Vault",
    categories: ["Skeletal Armor +4", "ID_FMP_MAGIC_ITEM_1793"],
    rules: function(model) {
      model.statadd("resist:necrotic", 10, "resist");
      model.statadd("Armor Class", 4, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 4);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Skeletal Armor +5"] = new RulesElement({
    name: "Skeletal Armor +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1794",
    source: "Adventurer's Vault",
    categories: ["Skeletal Armor +5", "ID_FMP_MAGIC_ITEM_1794"],
    rules: function(model) {
      model.statadd("resist:necrotic", 15, "resist");
      model.statadd("Armor Class", 5, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 5);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Skeletal Armor +6"] = new RulesElement({
    name: "Skeletal Armor +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1795",
    source: "Adventurer's Vault",
    categories: ["Skeletal Armor +6", "ID_FMP_MAGIC_ITEM_1795"],
    rules: function(model) {
      model.statadd("resist:necrotic", 15, "resist");
      model.statadd("Armor Class", 6, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 6);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Skeleton Key (heroic tier)"] = new RulesElement({
    name: "Skeleton Key (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3889",
    source: "Adventurer's Vault",
    categories: ["Skeleton Key (heroic tier)", "ID_FMP_MAGIC_ITEM_3889"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Skewering Weapon +1"] = new RulesElement({
    name: "Skewering Weapon +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2348",
    source: "Adventurer's Vault",
    categories: ["Skewering Weapon +1", "ID_FMP_MAGIC_ITEM_2348"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Skewering Weapon +2"] = new RulesElement({
    name: "Skewering Weapon +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2349",
    source: "Adventurer's Vault",
    categories: ["Skewering Weapon +2", "ID_FMP_MAGIC_ITEM_2349"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Skewering Weapon +3"] = new RulesElement({
    name: "Skewering Weapon +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2350",
    source: "Adventurer's Vault",
    categories: ["Skewering Weapon +3", "ID_FMP_MAGIC_ITEM_2350"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Skewering Weapon +4"] = new RulesElement({
    name: "Skewering Weapon +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2351",
    source: "Adventurer's Vault",
    categories: ["Skewering Weapon +4", "ID_FMP_MAGIC_ITEM_2351"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Skewering Weapon +5"] = new RulesElement({
    name: "Skewering Weapon +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2352",
    source: "Adventurer's Vault",
    categories: ["Skewering Weapon +5", "ID_FMP_MAGIC_ITEM_2352"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Skewering Weapon +6"] = new RulesElement({
    name: "Skewering Weapon +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2353",
    source: "Adventurer's Vault",
    categories: ["Skewering Weapon +6", "ID_FMP_MAGIC_ITEM_2353"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Skull Bracers (epic tier)"] = new RulesElement({
    name: "Skull Bracers (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3278",
    source: "Adventurer's Vault",
    categories: ["Skull Bracers (epic tier)", "ID_FMP_MAGIC_ITEM_3278"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Skull Bracers (heroic tier)"] = new RulesElement({
    name: "Skull Bracers (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3276",
    source: "Adventurer's Vault",
    categories: ["Skull Bracers (heroic tier)", "ID_FMP_MAGIC_ITEM_3276"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Skull Bracers (paragon tier)"] = new RulesElement({
    name: "Skull Bracers (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3277",
    source: "Adventurer's Vault",
    categories: ["Skull Bracers (paragon tier)", "ID_FMP_MAGIC_ITEM_3277"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Skull Mask (epic tier)"] = new RulesElement({
    name: "Skull Mask (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3503",
    source: "Adventurer's Vault",
    categories: ["Skull Mask (epic tier)", "ID_FMP_MAGIC_ITEM_3503"],
    rules: function(model) {
      model.statadd("resist:necrotic", 15, "resist");
      model.statadd("Intimidate Misc", 3, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Skull Mask (heroic tier)"] = new RulesElement({
    name: "Skull Mask (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3501",
    source: "Adventurer's Vault",
    categories: ["Skull Mask (heroic tier)", "ID_FMP_MAGIC_ITEM_3501"],
    rules: function(model) {
      model.statadd("resist:necrotic", 5, "resist");
      model.statadd("Intimidate Misc", 1, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Skull Mask (paragon tier)"] = new RulesElement({
    name: "Skull Mask (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3502",
    source: "Adventurer's Vault",
    categories: ["Skull Mask (paragon tier)", "ID_FMP_MAGIC_ITEM_3502"],
    rules: function(model) {
      model.statadd("resist:necrotic", 10, "resist");
      model.statadd("Intimidate Misc", 2, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Skybound Armor +1"] = new RulesElement({
    name: "Skybound Armor +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1796",
    source: "Adventurer's Vault",
    categories: ["Skybound Armor +1", "ID_FMP_MAGIC_ITEM_1796"],
    rules: function(model) {
      model.statadd("Armor Class", 1, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 1);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Skybound Armor +2"] = new RulesElement({
    name: "Skybound Armor +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1797",
    source: "Adventurer's Vault",
    categories: ["Skybound Armor +2", "ID_FMP_MAGIC_ITEM_1797"],
    rules: function(model) {
      model.statadd("Armor Class", 2, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 2);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Skybound Armor +3"] = new RulesElement({
    name: "Skybound Armor +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1798",
    source: "Adventurer's Vault",
    categories: ["Skybound Armor +3", "ID_FMP_MAGIC_ITEM_1798"],
    rules: function(model) {
      model.statadd("Armor Class", 3, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 3);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Skybound Armor +4"] = new RulesElement({
    name: "Skybound Armor +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1799",
    source: "Adventurer's Vault",
    categories: ["Skybound Armor +4", "ID_FMP_MAGIC_ITEM_1799"],
    rules: function(model) {
      model.statadd("Armor Class", 4, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 4);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Skybound Armor +5"] = new RulesElement({
    name: "Skybound Armor +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1800",
    source: "Adventurer's Vault",
    categories: ["Skybound Armor +5", "ID_FMP_MAGIC_ITEM_1800"],
    rules: function(model) {
      model.statadd("Armor Class", 5, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 5);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Skybound Armor +6"] = new RulesElement({
    name: "Skybound Armor +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1801",
    source: "Adventurer's Vault",
    categories: ["Skybound Armor +6", "ID_FMP_MAGIC_ITEM_1801"],
    rules: function(model) {
      model.statadd("Armor Class", 6, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 6);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Skygliders (epic tier)"] = new RulesElement({
    name: "Skygliders (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3351",
    source: "Adventurer's Vault",
    categories: ["Skygliders (epic tier)", "ID_FMP_MAGIC_ITEM_3351"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Skyrender Weapon +2"] = new RulesElement({
    name: "Skyrender Weapon +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2354",
    source: "Adventurer's Vault",
    categories: ["Skyrender Weapon +2", "ID_FMP_MAGIC_ITEM_2354"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Skyrender Weapon +3"] = new RulesElement({
    name: "Skyrender Weapon +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2355",
    source: "Adventurer's Vault",
    categories: ["Skyrender Weapon +3", "ID_FMP_MAGIC_ITEM_2355"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Skyrender Weapon +4"] = new RulesElement({
    name: "Skyrender Weapon +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2356",
    source: "Adventurer's Vault",
    categories: ["Skyrender Weapon +4", "ID_FMP_MAGIC_ITEM_2356"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Skyrender Weapon +5"] = new RulesElement({
    name: "Skyrender Weapon +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2357",
    source: "Adventurer's Vault",
    categories: ["Skyrender Weapon +5", "ID_FMP_MAGIC_ITEM_2357"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Skyrender Weapon +6"] = new RulesElement({
    name: "Skyrender Weapon +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2358",
    source: "Adventurer's Vault",
    categories: ["Skyrender Weapon +6", "ID_FMP_MAGIC_ITEM_2358"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Skystrider Horseshoes (paragon tier)"] = new RulesElement({
    name: "Skystrider Horseshoes (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3983",
    source: "Adventurer's Vault",
    categories: ["Skystrider Horseshoes (paragon tier)", "ID_FMP_MAGIC_ITEM_3983"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Slick Armor +1"] = new RulesElement({
    name: "Slick Armor +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1802",
    source: "Adventurer's Vault",
    categories: ["Slick Armor +1", "ID_FMP_MAGIC_ITEM_1802"],
    rules: function(model) {
      model.statadd("Acrobatics Misc", function() { /* escape actions */ return 1; });
      model.statadd("Acrobatics Misc", function() { /* escape actions */ return 1; });
      model.statadd("Armor Class", 1, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 1);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Slick Armor +2"] = new RulesElement({
    name: "Slick Armor +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1803",
    source: "Adventurer's Vault",
    categories: ["Slick Armor +2", "ID_FMP_MAGIC_ITEM_1803"],
    rules: function(model) {
      model.statadd("Acrobatics Misc", function() { /* escape actions */ return 2; });
      model.statadd("Acrobatics Misc", function() { /* escape actions */ return 2; });
      model.statadd("Armor Class", 2, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 2);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Slick Armor +3"] = new RulesElement({
    name: "Slick Armor +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1804",
    source: "Adventurer's Vault",
    categories: ["Slick Armor +3", "ID_FMP_MAGIC_ITEM_1804"],
    rules: function(model) {
      model.statadd("Acrobatics Misc", function() { /* escape actions */ return 3; });
      model.statadd("Acrobatics Misc", function() { /* escape actions */ return 3; });
      model.statadd("Armor Class", 3, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 3);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Slick Armor +4"] = new RulesElement({
    name: "Slick Armor +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1805",
    source: "Adventurer's Vault",
    categories: ["Slick Armor +4", "ID_FMP_MAGIC_ITEM_1805"],
    rules: function(model) {
      model.statadd("Acrobatics Misc", function() { /* escape actions */ return 4; });
      model.statadd("Acrobatics Misc", function() { /* escape actions */ return 4; });
      model.statadd("Armor Class", 4, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 4);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Slick Armor +5"] = new RulesElement({
    name: "Slick Armor +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1806",
    source: "Adventurer's Vault",
    categories: ["Slick Armor +5", "ID_FMP_MAGIC_ITEM_1806"],
    rules: function(model) {
      model.statadd("Acrobatics Misc", function() { /* escape actions */ return 5; });
      model.statadd("Acrobatics Misc", function() { /* escape actions */ return 5; });
      model.statadd("Armor Class", 5, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 5);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Slick Armor +6"] = new RulesElement({
    name: "Slick Armor +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1807",
    source: "Adventurer's Vault",
    categories: ["Slick Armor +6", "ID_FMP_MAGIC_ITEM_1807"],
    rules: function(model) {
      model.statadd("Acrobatics Misc", function() { /* escape actions */ return 6; });
      model.statadd("Acrobatics Misc", function() { /* escape actions */ return 6; });
      model.statadd("Armor Class", 6, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 6);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Slow-Step Oil (level 13)"] = new RulesElement({
    name: "Slow-Step Oil (level 13)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1398",
    source: "Adventurer's Vault",
    categories: ["Slow-Step Oil (level 13)", "ID_FMP_MAGIC_ITEM_1398"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Slow-Step Oil (level 18)"] = new RulesElement({
    name: "Slow-Step Oil (level 18)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1399",
    source: "Adventurer's Vault",
    categories: ["Slow-Step Oil (level 18)", "ID_FMP_MAGIC_ITEM_1399"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Slow-Step Oil (level 23)"] = new RulesElement({
    name: "Slow-Step Oil (level 23)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1400",
    source: "Adventurer's Vault",
    categories: ["Slow-Step Oil (level 23)", "ID_FMP_MAGIC_ITEM_1400"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Slow-Step Oil (level 28)"] = new RulesElement({
    name: "Slow-Step Oil (level 28)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1401",
    source: "Adventurer's Vault",
    categories: ["Slow-Step Oil (level 28)", "ID_FMP_MAGIC_ITEM_1401"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Slow-Step Oil (level 3)"] = new RulesElement({
    name: "Slow-Step Oil (level 3)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1396",
    source: "Adventurer's Vault",
    categories: ["Slow-Step Oil (level 3)", "ID_FMP_MAGIC_ITEM_1396"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Slow-Step Oil (level 8)"] = new RulesElement({
    name: "Slow-Step Oil (level 8)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1397",
    source: "Adventurer's Vault",
    categories: ["Slow-Step Oil (level 8)", "ID_FMP_MAGIC_ITEM_1397"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Smokestick (heroic tier)"] = new RulesElement({
    name: "Smokestick (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1402",
    source: "Adventurer's Vault",
    categories: ["Smokestick (heroic tier)", "ID_FMP_MAGIC_ITEM_1402"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Snakefang Armor +2"] = new RulesElement({
    name: "Snakefang Armor +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1808",
    source: "Adventurer's Vault",
    categories: ["Snakefang Armor +2", "ID_FMP_MAGIC_ITEM_1808"],
    rules: function(model) {
      model.statadd("resist:poison", 5, "resist");
      model.statadd("Armor Class", 2, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 2);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Snakefang Armor +3"] = new RulesElement({
    name: "Snakefang Armor +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1809",
    source: "Adventurer's Vault",
    categories: ["Snakefang Armor +3", "ID_FMP_MAGIC_ITEM_1809"],
    rules: function(model) {
      model.statadd("resist:poison", 5, "resist");
      model.statadd("Armor Class", 3, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 3);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Snakefang Armor +4"] = new RulesElement({
    name: "Snakefang Armor +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1810",
    source: "Adventurer's Vault",
    categories: ["Snakefang Armor +4", "ID_FMP_MAGIC_ITEM_1810"],
    rules: function(model) {
      model.statadd("resist:poison", 10, "resist");
      model.statadd("Armor Class", 4, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 4);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Snakefang Armor +5"] = new RulesElement({
    name: "Snakefang Armor +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1811",
    source: "Adventurer's Vault",
    categories: ["Snakefang Armor +5", "ID_FMP_MAGIC_ITEM_1811"],
    rules: function(model) {
      model.statadd("resist:poison", 10, "resist");
      model.statadd("Armor Class", 5, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 5);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Snakefang Armor +6"] = new RulesElement({
    name: "Snakefang Armor +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1812",
    source: "Adventurer's Vault",
    categories: ["Snakefang Armor +6", "ID_FMP_MAGIC_ITEM_1812"],
    rules: function(model) {
      model.statadd("resist:poison", 15, "resist");
      model.statadd("Armor Class", 6, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 6);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Sniper's Weapon +3"] = new RulesElement({
    name: "Sniper's Weapon +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2359",
    source: "Adventurer's Vault",
    categories: ["Sniper's Weapon +3", "ID_FMP_MAGIC_ITEM_2359"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Sniper's Weapon +4"] = new RulesElement({
    name: "Sniper's Weapon +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2360",
    source: "Adventurer's Vault",
    categories: ["Sniper's Weapon +4", "ID_FMP_MAGIC_ITEM_2360"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Sniper's Weapon +5"] = new RulesElement({
    name: "Sniper's Weapon +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2361",
    source: "Adventurer's Vault",
    categories: ["Sniper's Weapon +5", "ID_FMP_MAGIC_ITEM_2361"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Sniper's Weapon +6"] = new RulesElement({
    name: "Sniper's Weapon +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2362",
    source: "Adventurer's Vault",
    categories: ["Sniper's Weapon +6", "ID_FMP_MAGIC_ITEM_2362"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Solar Armor +2"] = new RulesElement({
    name: "Solar Armor +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1813",
    source: "Adventurer's Vault",
    categories: ["Solar Armor +2", "ID_FMP_MAGIC_ITEM_1813"],
    rules: function(model) {
      model.statadd("Armor Class", 2, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 2);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Solar Armor +3"] = new RulesElement({
    name: "Solar Armor +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1814",
    source: "Adventurer's Vault",
    categories: ["Solar Armor +3", "ID_FMP_MAGIC_ITEM_1814"],
    rules: function(model) {
      model.statadd("Armor Class", 3, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 3);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Solar Armor +4"] = new RulesElement({
    name: "Solar Armor +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1815",
    source: "Adventurer's Vault",
    categories: ["Solar Armor +4", "ID_FMP_MAGIC_ITEM_1815"],
    rules: function(model) {
      model.statadd("Armor Class", 4, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 4);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Solar Armor +5"] = new RulesElement({
    name: "Solar Armor +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1816",
    source: "Adventurer's Vault",
    categories: ["Solar Armor +5", "ID_FMP_MAGIC_ITEM_1816"],
    rules: function(model) {
      model.statadd("Armor Class", 5, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 5);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Solar Armor +6"] = new RulesElement({
    name: "Solar Armor +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1817",
    source: "Adventurer's Vault",
    categories: ["Solar Armor +6", "ID_FMP_MAGIC_ITEM_1817"],
    rules: function(model) {
      model.statadd("Armor Class", 6, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 6);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Solitaire (Aquamarine) (paragon tier)"] = new RulesElement({
    name: "Solitaire (Aquamarine) (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3890",
    source: "Adventurer's Vault",
    categories: ["Solitaire (Aquamarine) (paragon tier)", "ID_FMP_MAGIC_ITEM_3890"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Solitaire (Cerulean) (epic tier)"] = new RulesElement({
    name: "Solitaire (Cerulean) (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3891",
    source: "Adventurer's Vault",
    categories: ["Solitaire (Cerulean) (epic tier)", "ID_FMP_MAGIC_ITEM_3891"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Solitaire (Cinnabar) (heroic tier)"] = new RulesElement({
    name: "Solitaire (Cinnabar) (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3892",
    source: "Adventurer's Vault",
    categories: ["Solitaire (Cinnabar) (heroic tier)", "ID_FMP_MAGIC_ITEM_3892"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Solitaire (Citrine) (paragon tier)"] = new RulesElement({
    name: "Solitaire (Citrine) (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3893",
    source: "Adventurer's Vault",
    categories: ["Solitaire (Citrine) (paragon tier)", "ID_FMP_MAGIC_ITEM_3893"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Solitaire (Violet) (epic tier)"] = new RulesElement({
    name: "Solitaire (Violet) (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3894",
    source: "Adventurer's Vault",
    categories: ["Solitaire (Violet) (epic tier)", "ID_FMP_MAGIC_ITEM_3894"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Sorrowsworn Ring (epic tier)"] = new RulesElement({
    name: "Sorrowsworn Ring (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3764",
    source: "Adventurer's Vault",
    categories: ["Sorrowsworn Ring (epic tier)", "ID_FMP_MAGIC_ITEM_3764"],
    rules: function(model) {
      model.grant(elements.id["ID_INTERNAL_VISION_DARKVISION"]);
      model.statadd("Intimidate Misc", 4, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Soulwarding Armor +5"] = new RulesElement({
    name: "Soulwarding Armor +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1818",
    source: "Adventurer's Vault",
    categories: ["Soulwarding Armor +5", "ID_FMP_MAGIC_ITEM_1818"],
    rules: function(model) {
      model.statadd("resist:necrotic", 10, "resist");
      model.statadd("resist:psychic", 10, "resist");
      model.statadd("Armor Class", 5, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 5);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Soulwarding Armor +6"] = new RulesElement({
    name: "Soulwarding Armor +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1819",
    source: "Adventurer's Vault",
    categories: ["Soulwarding Armor +6", "ID_FMP_MAGIC_ITEM_1819"],
    rules: function(model) {
      model.statadd("resist:necrotic", 10, "resist");
      model.statadd("resist:psychic", 10, "resist");
      model.statadd("Armor Class", 6, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 6);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Sovereign Glue (epic tier)"] = new RulesElement({
    name: "Sovereign Glue (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1407",
    source: "Adventurer's Vault",
    categories: ["Sovereign Glue (epic tier)", "ID_FMP_MAGIC_ITEM_1407"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Sovereign Glue (heroic tier)"] = new RulesElement({
    name: "Sovereign Glue (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1403",
    source: "Adventurer's Vault",
    categories: ["Sovereign Glue (heroic tier)", "ID_FMP_MAGIC_ITEM_1403"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Sovereign Glue (paragon tier)"] = new RulesElement({
    name: "Sovereign Glue (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1405",
    source: "Adventurer's Vault",
    categories: ["Sovereign Glue (paragon tier)", "ID_FMP_MAGIC_ITEM_1405"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Spell Anchors (heroic tier)"] = new RulesElement({
    name: "Spell Anchors (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3410",
    source: "Adventurer's Vault",
    categories: ["Spell Anchors (heroic tier)", "ID_FMP_MAGIC_ITEM_3410"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Spellshield (paragon tier)"] = new RulesElement({
    name: "Spellshield (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3279",
    source: "Adventurer's Vault",
    categories: ["Spellshield (paragon tier)", "ID_FMP_MAGIC_ITEM_3279"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Spider Potion (paragon tier)"] = new RulesElement({
    name: "Spider Potion (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3955",
    source: "Adventurer's Vault",
    categories: ["Spider Potion (paragon tier)", "ID_FMP_MAGIC_ITEM_3955"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Spiritlink Armor +3"] = new RulesElement({
    name: "Spiritlink Armor +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1820",
    source: "Adventurer's Vault",
    categories: ["Spiritlink Armor +3", "ID_FMP_MAGIC_ITEM_1820"],
    rules: function(model) {
      model.statadd("resist:necrotic", 5, "resist");
      model.statadd("resist:radiant", 5, "resist");
      model.statadd("Armor Class", 3, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 3);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Spiritlink Armor +4"] = new RulesElement({
    name: "Spiritlink Armor +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1821",
    source: "Adventurer's Vault",
    categories: ["Spiritlink Armor +4", "ID_FMP_MAGIC_ITEM_1821"],
    rules: function(model) {
      model.statadd("resist:necrotic", 5, "resist");
      model.statadd("resist:radiant", 5, "resist");
      model.statadd("Armor Class", 4, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 4);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Spiritlink Armor +5"] = new RulesElement({
    name: "Spiritlink Armor +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1822",
    source: "Adventurer's Vault",
    categories: ["Spiritlink Armor +5", "ID_FMP_MAGIC_ITEM_1822"],
    rules: function(model) {
      model.statadd("resist:necrotic", 10, "resist");
      model.statadd("resist:radiant", 10, "resist");
      model.statadd("Armor Class", 5, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 5);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Spiritlink Armor +6"] = new RulesElement({
    name: "Spiritlink Armor +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1823",
    source: "Adventurer's Vault",
    categories: ["Spiritlink Armor +6", "ID_FMP_MAGIC_ITEM_1823"],
    rules: function(model) {
      model.statadd("resist:necrotic", 15, "resist");
      model.statadd("resist:radiant", 15, "resist");
      model.statadd("Armor Class", 6, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 6);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Splitting Weapon +2"] = new RulesElement({
    name: "Splitting Weapon +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2363",
    source: "Adventurer's Vault",
    categories: ["Splitting Weapon +2", "ID_FMP_MAGIC_ITEM_2363"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Splitting Weapon +3"] = new RulesElement({
    name: "Splitting Weapon +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2364",
    source: "Adventurer's Vault",
    categories: ["Splitting Weapon +3", "ID_FMP_MAGIC_ITEM_2364"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Splitting Weapon +4"] = new RulesElement({
    name: "Splitting Weapon +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2365",
    source: "Adventurer's Vault",
    categories: ["Splitting Weapon +4", "ID_FMP_MAGIC_ITEM_2365"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Splitting Weapon +5"] = new RulesElement({
    name: "Splitting Weapon +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2366",
    source: "Adventurer's Vault",
    categories: ["Splitting Weapon +5", "ID_FMP_MAGIC_ITEM_2366"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Splitting Weapon +6"] = new RulesElement({
    name: "Splitting Weapon +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2367",
    source: "Adventurer's Vault",
    categories: ["Splitting Weapon +6", "ID_FMP_MAGIC_ITEM_2367"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Spymaster's Quill (heroic tier)"] = new RulesElement({
    name: "Spymaster's Quill (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3895",
    source: "Adventurer's Vault",
    categories: ["Spymaster's Quill (heroic tier)", "ID_FMP_MAGIC_ITEM_3895"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Staff of Acid and Flame +2"] = new RulesElement({
    name: "Staff of Acid and Flame +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2952",
    source: "Adventurer's Vault",
    categories: ["Staff of Acid and Flame +2", "ID_FMP_MAGIC_ITEM_2952"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Staff of Acid and Flame +3"] = new RulesElement({
    name: "Staff of Acid and Flame +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2953",
    source: "Adventurer's Vault",
    categories: ["Staff of Acid and Flame +3", "ID_FMP_MAGIC_ITEM_2953"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Staff of Acid and Flame +4"] = new RulesElement({
    name: "Staff of Acid and Flame +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2954",
    source: "Adventurer's Vault",
    categories: ["Staff of Acid and Flame +4", "ID_FMP_MAGIC_ITEM_2954"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Staff of Acid and Flame +5"] = new RulesElement({
    name: "Staff of Acid and Flame +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2955",
    source: "Adventurer's Vault",
    categories: ["Staff of Acid and Flame +5", "ID_FMP_MAGIC_ITEM_2955"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Staff of Acid and Flame +6"] = new RulesElement({
    name: "Staff of Acid and Flame +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2956",
    source: "Adventurer's Vault",
    categories: ["Staff of Acid and Flame +6", "ID_FMP_MAGIC_ITEM_2956"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Staff of Corrosion +4"] = new RulesElement({
    name: "Staff of Corrosion +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2957",
    source: "Adventurer's Vault",
    categories: ["Staff of Corrosion +4", "ID_FMP_MAGIC_ITEM_2957"],
    rules: function(model) {
      model.statadd("Melee:damage(Staff of Corrosion +4)", "+1d6");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Staff of Corrosion +5"] = new RulesElement({
    name: "Staff of Corrosion +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2958",
    source: "Adventurer's Vault",
    categories: ["Staff of Corrosion +5", "ID_FMP_MAGIC_ITEM_2958"],
    rules: function(model) {
      model.statadd("Melee:damage(Staff of Corrosion +5)", "+1d6");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Staff of Corrosion +6"] = new RulesElement({
    name: "Staff of Corrosion +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2959",
    source: "Adventurer's Vault",
    categories: ["Staff of Corrosion +6", "ID_FMP_MAGIC_ITEM_2959"],
    rules: function(model) {
      model.statadd("Melee:damage(Staff of Corrosion +6)", "+1d6");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Staff of Elemental Prowess +2"] = new RulesElement({
    name: "Staff of Elemental Prowess +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2960",
    source: "Adventurer's Vault",
    categories: ["Staff of Elemental Prowess +2", "ID_FMP_MAGIC_ITEM_2960"],
    rules: function(model) {
      model.statadd("acid:damage(Staff of Elemental Prowess +2)", 1, "item");
      model.statadd("cold:damage(Staff of Elemental Prowess +2)", 1, "item");
      model.statadd("fire:damage(Staff of Elemental Prowess +2)", 1, "item");
      model.statadd("lightning:damage(Staff of Elemental Prowess +2)", 1, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Staff of Elemental Prowess +3"] = new RulesElement({
    name: "Staff of Elemental Prowess +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2961",
    source: "Adventurer's Vault",
    categories: ["Staff of Elemental Prowess +3", "ID_FMP_MAGIC_ITEM_2961"],
    rules: function(model) {
      model.statadd("acid:damage(Staff of Elemental Prowess +3)", 2, "item");
      model.statadd("cold:damage(Staff of Elemental Prowess +3)", 2, "item");
      model.statadd("fire:damage(Staff of Elemental Prowess +3)", 2, "item");
      model.statadd("lightning:damage(Staff of Elemental Prowess +3)", 2, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Staff of Elemental Prowess +4"] = new RulesElement({
    name: "Staff of Elemental Prowess +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2962",
    source: "Adventurer's Vault",
    categories: ["Staff of Elemental Prowess +4", "ID_FMP_MAGIC_ITEM_2962"],
    rules: function(model) {
      model.statadd("acid:damage(Staff of Elemental Prowess +4)", 2, "item");
      model.statadd("cold:damage(Staff of Elemental Prowess +4)", 2, "item");
      model.statadd("fire:damage(Staff of Elemental Prowess +4)", 2, "item");
      model.statadd("lightning:damage(Staff of Elemental Prowess +4)", 2, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Staff of Elemental Prowess +5"] = new RulesElement({
    name: "Staff of Elemental Prowess +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2963",
    source: "Adventurer's Vault",
    categories: ["Staff of Elemental Prowess +5", "ID_FMP_MAGIC_ITEM_2963"],
    rules: function(model) {
      model.statadd("acid:damage(Staff of Elemental Prowess +5)", 3, "item");
      model.statadd("cold:damage(Staff of Elemental Prowess +5)", 3, "item");
      model.statadd("fire:damage(Staff of Elemental Prowess +5)", 3, "item");
      model.statadd("lightning:damage(Staff of Elemental Prowess +5)", 3, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Staff of Elemental Prowess +6"] = new RulesElement({
    name: "Staff of Elemental Prowess +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2964",
    source: "Adventurer's Vault",
    categories: ["Staff of Elemental Prowess +6", "ID_FMP_MAGIC_ITEM_2964"],
    rules: function(model) {
      model.statadd("acid:damage(Staff of Elemental Prowess +6)", 3, "item");
      model.statadd("cold:damage(Staff of Elemental Prowess +6)", 3, "item");
      model.statadd("fire:damage(Staff of Elemental Prowess +6)", 3, "item");
      model.statadd("lightning:damage(Staff of Elemental Prowess +6)", 3, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Staff of Gathering +2"] = new RulesElement({
    name: "Staff of Gathering +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2965",
    source: "Adventurer's Vault",
    categories: ["Staff of Gathering +2", "ID_FMP_MAGIC_ITEM_2965"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Staff of Gathering +3"] = new RulesElement({
    name: "Staff of Gathering +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2966",
    source: "Adventurer's Vault",
    categories: ["Staff of Gathering +3", "ID_FMP_MAGIC_ITEM_2966"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Staff of Gathering +4"] = new RulesElement({
    name: "Staff of Gathering +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2967",
    source: "Adventurer's Vault",
    categories: ["Staff of Gathering +4", "ID_FMP_MAGIC_ITEM_2967"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Staff of Gathering +5"] = new RulesElement({
    name: "Staff of Gathering +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2968",
    source: "Adventurer's Vault",
    categories: ["Staff of Gathering +5", "ID_FMP_MAGIC_ITEM_2968"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Staff of Gathering +6"] = new RulesElement({
    name: "Staff of Gathering +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2969",
    source: "Adventurer's Vault",
    categories: ["Staff of Gathering +6", "ID_FMP_MAGIC_ITEM_2969"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Staff of Light +1"] = new RulesElement({
    name: "Staff of Light +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2970",
    source: "Adventurer's Vault",
    categories: ["Staff of Light +1", "ID_FMP_MAGIC_ITEM_2970"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Staff of Light +2"] = new RulesElement({
    name: "Staff of Light +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2971",
    source: "Adventurer's Vault",
    categories: ["Staff of Light +2", "ID_FMP_MAGIC_ITEM_2971"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Staff of Light +3"] = new RulesElement({
    name: "Staff of Light +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2972",
    source: "Adventurer's Vault",
    categories: ["Staff of Light +3", "ID_FMP_MAGIC_ITEM_2972"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Staff of Light +4"] = new RulesElement({
    name: "Staff of Light +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2973",
    source: "Adventurer's Vault",
    categories: ["Staff of Light +4", "ID_FMP_MAGIC_ITEM_2973"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Staff of Light +5"] = new RulesElement({
    name: "Staff of Light +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2974",
    source: "Adventurer's Vault",
    categories: ["Staff of Light +5", "ID_FMP_MAGIC_ITEM_2974"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Staff of Light +6"] = new RulesElement({
    name: "Staff of Light +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2975",
    source: "Adventurer's Vault",
    categories: ["Staff of Light +6", "ID_FMP_MAGIC_ITEM_2975"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Staff of Missile Mastery +1"] = new RulesElement({
    name: "Staff of Missile Mastery +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2976",
    source: "Adventurer's Vault",
    categories: ["Staff of Missile Mastery +1", "ID_FMP_MAGIC_ITEM_2976"],
    rules: function(model) {
      model.statadd("ID_FMP_POWER_463:nonroll-damage(Staff of Missile Mastery +1)", 1, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Staff of Missile Mastery +2"] = new RulesElement({
    name: "Staff of Missile Mastery +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2977",
    source: "Adventurer's Vault",
    categories: ["Staff of Missile Mastery +2", "ID_FMP_MAGIC_ITEM_2977"],
    rules: function(model) {
      model.statadd("ID_FMP_POWER_463:nonroll-damage(Staff of Missile Mastery +2)", 2, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Staff of Missile Mastery +3"] = new RulesElement({
    name: "Staff of Missile Mastery +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2978",
    source: "Adventurer's Vault",
    categories: ["Staff of Missile Mastery +3", "ID_FMP_MAGIC_ITEM_2978"],
    rules: function(model) {
      model.statadd("ID_FMP_POWER_463:nonroll-damage(Staff of Missile Mastery +3)", 3, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Staff of Missile Mastery +4"] = new RulesElement({
    name: "Staff of Missile Mastery +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2979",
    source: "Adventurer's Vault",
    categories: ["Staff of Missile Mastery +4", "ID_FMP_MAGIC_ITEM_2979"],
    rules: function(model) {
      model.statadd("ID_FMP_POWER_463:nonroll-damage(Staff of Missile Mastery +4)", 4, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Staff of Missile Mastery +5"] = new RulesElement({
    name: "Staff of Missile Mastery +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2980",
    source: "Adventurer's Vault",
    categories: ["Staff of Missile Mastery +5", "ID_FMP_MAGIC_ITEM_2980"],
    rules: function(model) {
      model.statadd("ID_FMP_POWER_463:nonroll-damage(Staff of Missile Mastery +5)", 5, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Staff of Missile Mastery +6"] = new RulesElement({
    name: "Staff of Missile Mastery +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2981",
    source: "Adventurer's Vault",
    categories: ["Staff of Missile Mastery +6", "ID_FMP_MAGIC_ITEM_2981"],
    rules: function(model) {
      model.statadd("ID_FMP_POWER_463:nonroll-damage(Staff of Missile Mastery +6)", 6, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Staff of Ruin +1"] = new RulesElement({
    name: "Staff of Ruin +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2982",
    source: "Adventurer's Vault",
    categories: ["Staff of Ruin +1", "ID_FMP_MAGIC_ITEM_2982"],
    rules: function(model) {
      model.statadd("Damage Rolls(Staff of Ruin +1)", 1, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Staff of Ruin +2"] = new RulesElement({
    name: "Staff of Ruin +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2983",
    source: "Adventurer's Vault",
    categories: ["Staff of Ruin +2", "ID_FMP_MAGIC_ITEM_2983"],
    rules: function(model) {
      model.statadd("Damage Rolls(Staff of Ruin +2)", 2, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Staff of Ruin +3"] = new RulesElement({
    name: "Staff of Ruin +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2984",
    source: "Adventurer's Vault",
    categories: ["Staff of Ruin +3", "ID_FMP_MAGIC_ITEM_2984"],
    rules: function(model) {
      model.statadd("Damage Rolls(Staff of Ruin +3)", 3, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Staff of Ruin +4"] = new RulesElement({
    name: "Staff of Ruin +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2985",
    source: "Adventurer's Vault",
    categories: ["Staff of Ruin +4", "ID_FMP_MAGIC_ITEM_2985"],
    rules: function(model) {
      model.statadd("Damage Rolls(Staff of Ruin +4)", 4, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Staff of Ruin +5"] = new RulesElement({
    name: "Staff of Ruin +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2986",
    source: "Adventurer's Vault",
    categories: ["Staff of Ruin +5", "ID_FMP_MAGIC_ITEM_2986"],
    rules: function(model) {
      model.statadd("Damage Rolls(Staff of Ruin +5)", 5, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Staff of Ruin +6"] = new RulesElement({
    name: "Staff of Ruin +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2987",
    source: "Adventurer's Vault",
    categories: ["Staff of Ruin +6", "ID_FMP_MAGIC_ITEM_2987"],
    rules: function(model) {
      model.statadd("Damage Rolls(Staff of Ruin +6)", 6, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Staff of Searing Death +3"] = new RulesElement({
    name: "Staff of Searing Death +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2988",
    source: "Adventurer's Vault",
    categories: ["Staff of Searing Death +3", "ID_FMP_MAGIC_ITEM_2988"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Staff of Searing Death +4"] = new RulesElement({
    name: "Staff of Searing Death +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2989",
    source: "Adventurer's Vault",
    categories: ["Staff of Searing Death +4", "ID_FMP_MAGIC_ITEM_2989"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Staff of Searing Death +5"] = new RulesElement({
    name: "Staff of Searing Death +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2990",
    source: "Adventurer's Vault",
    categories: ["Staff of Searing Death +5", "ID_FMP_MAGIC_ITEM_2990"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Staff of Searing Death +6"] = new RulesElement({
    name: "Staff of Searing Death +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2991",
    source: "Adventurer's Vault",
    categories: ["Staff of Searing Death +6", "ID_FMP_MAGIC_ITEM_2991"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Staff of Spectral Hands +1"] = new RulesElement({
    name: "Staff of Spectral Hands +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2999",
    source: "Adventurer's Vault",
    categories: ["Staff of Spectral Hands +1", "ID_FMP_MAGIC_ITEM_2999"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Staff of Spectral Hands +2"] = new RulesElement({
    name: "Staff of Spectral Hands +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3000",
    source: "Adventurer's Vault",
    categories: ["Staff of Spectral Hands +2", "ID_FMP_MAGIC_ITEM_3000"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Staff of Spectral Hands +3"] = new RulesElement({
    name: "Staff of Spectral Hands +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3001",
    source: "Adventurer's Vault",
    categories: ["Staff of Spectral Hands +3", "ID_FMP_MAGIC_ITEM_3001"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Staff of Spectral Hands +4"] = new RulesElement({
    name: "Staff of Spectral Hands +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3002",
    source: "Adventurer's Vault",
    categories: ["Staff of Spectral Hands +4", "ID_FMP_MAGIC_ITEM_3002"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Staff of Spectral Hands +5"] = new RulesElement({
    name: "Staff of Spectral Hands +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3003",
    source: "Adventurer's Vault",
    categories: ["Staff of Spectral Hands +5", "ID_FMP_MAGIC_ITEM_3003"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Staff of Spectral Hands +6"] = new RulesElement({
    name: "Staff of Spectral Hands +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3004",
    source: "Adventurer's Vault",
    categories: ["Staff of Spectral Hands +6", "ID_FMP_MAGIC_ITEM_3004"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Staff of the Iron Tower +5"] = new RulesElement({
    name: "Staff of the Iron Tower +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2992",
    source: "Adventurer's Vault",
    categories: ["Staff of the Iron Tower +5", "ID_FMP_MAGIC_ITEM_2992"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Staff of the Iron Tower +6"] = new RulesElement({
    name: "Staff of the Iron Tower +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2993",
    source: "Adventurer's Vault",
    categories: ["Staff of the Iron Tower +6", "ID_FMP_MAGIC_ITEM_2993"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Staff of the Serpent +2"] = new RulesElement({
    name: "Staff of the Serpent +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2994",
    source: "Adventurer's Vault",
    categories: ["Staff of the Serpent +2", "ID_FMP_MAGIC_ITEM_2994"],
    rules: function(model) {
      model.statadd("Melee:damage(Staff of the Serpent +2)", "+1d6");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Staff of the Serpent +3"] = new RulesElement({
    name: "Staff of the Serpent +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2995",
    source: "Adventurer's Vault",
    categories: ["Staff of the Serpent +3", "ID_FMP_MAGIC_ITEM_2995"],
    rules: function(model) {
      model.statadd("Melee:damage(Staff of the Serpent +3)", "+1d6");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Staff of the Serpent +4"] = new RulesElement({
    name: "Staff of the Serpent +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2996",
    source: "Adventurer's Vault",
    categories: ["Staff of the Serpent +4", "ID_FMP_MAGIC_ITEM_2996"],
    rules: function(model) {
      model.statadd("Melee:damage(Staff of the Serpent +4)", "+1d6");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Staff of the Serpent +5"] = new RulesElement({
    name: "Staff of the Serpent +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2997",
    source: "Adventurer's Vault",
    categories: ["Staff of the Serpent +5", "ID_FMP_MAGIC_ITEM_2997"],
    rules: function(model) {
      model.statadd("Melee:damage(Staff of the Serpent +5)", "+1d6");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Staff of the Serpent +6"] = new RulesElement({
    name: "Staff of the Serpent +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2998",
    source: "Adventurer's Vault",
    categories: ["Staff of the Serpent +6", "ID_FMP_MAGIC_ITEM_2998"],
    rules: function(model) {
      model.statadd("Melee:damage(Staff of the Serpent +6)", "+1d6");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Staff of Transposition +3"] = new RulesElement({
    name: "Staff of Transposition +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3005",
    source: "Adventurer's Vault",
    categories: ["Staff of Transposition +3", "ID_FMP_MAGIC_ITEM_3005"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Staff of Transposition +4"] = new RulesElement({
    name: "Staff of Transposition +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3006",
    source: "Adventurer's Vault",
    categories: ["Staff of Transposition +4", "ID_FMP_MAGIC_ITEM_3006"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Staff of Transposition +5"] = new RulesElement({
    name: "Staff of Transposition +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3007",
    source: "Adventurer's Vault",
    categories: ["Staff of Transposition +5", "ID_FMP_MAGIC_ITEM_3007"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Staff of Transposition +6"] = new RulesElement({
    name: "Staff of Transposition +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3008",
    source: "Adventurer's Vault",
    categories: ["Staff of Transposition +6", "ID_FMP_MAGIC_ITEM_3008"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Staff of Ultimate Defense +1"] = new RulesElement({
    name: "Staff of Ultimate Defense +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3009",
    source: "Adventurer's Vault",
    categories: ["Staff of Ultimate Defense +1", "ID_FMP_MAGIC_ITEM_3009"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Staff of Ultimate Defense +2"] = new RulesElement({
    name: "Staff of Ultimate Defense +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3010",
    source: "Adventurer's Vault",
    categories: ["Staff of Ultimate Defense +2", "ID_FMP_MAGIC_ITEM_3010"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Staff of Ultimate Defense +3"] = new RulesElement({
    name: "Staff of Ultimate Defense +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3011",
    source: "Adventurer's Vault",
    categories: ["Staff of Ultimate Defense +3", "ID_FMP_MAGIC_ITEM_3011"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Staff of Ultimate Defense +4"] = new RulesElement({
    name: "Staff of Ultimate Defense +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3012",
    source: "Adventurer's Vault",
    categories: ["Staff of Ultimate Defense +4", "ID_FMP_MAGIC_ITEM_3012"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Staff of Ultimate Defense +5"] = new RulesElement({
    name: "Staff of Ultimate Defense +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3013",
    source: "Adventurer's Vault",
    categories: ["Staff of Ultimate Defense +5", "ID_FMP_MAGIC_ITEM_3013"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Staff of Ultimate Defense +6"] = new RulesElement({
    name: "Staff of Ultimate Defense +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3014",
    source: "Adventurer's Vault",
    categories: ["Staff of Ultimate Defense +6", "ID_FMP_MAGIC_ITEM_3014"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Staff of Unparalleled Vision +1"] = new RulesElement({
    name: "Staff of Unparalleled Vision +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3015",
    source: "Adventurer's Vault",
    categories: ["Staff of Unparalleled Vision +1", "ID_FMP_MAGIC_ITEM_3015"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Staff of Unparalleled Vision +2"] = new RulesElement({
    name: "Staff of Unparalleled Vision +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3016",
    source: "Adventurer's Vault",
    categories: ["Staff of Unparalleled Vision +2", "ID_FMP_MAGIC_ITEM_3016"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Staff of Unparalleled Vision +3"] = new RulesElement({
    name: "Staff of Unparalleled Vision +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3017",
    source: "Adventurer's Vault",
    categories: ["Staff of Unparalleled Vision +3", "ID_FMP_MAGIC_ITEM_3017"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Staff of Unparalleled Vision +4"] = new RulesElement({
    name: "Staff of Unparalleled Vision +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3018",
    source: "Adventurer's Vault",
    categories: ["Staff of Unparalleled Vision +4", "ID_FMP_MAGIC_ITEM_3018"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Staff of Unparalleled Vision +5"] = new RulesElement({
    name: "Staff of Unparalleled Vision +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3019",
    source: "Adventurer's Vault",
    categories: ["Staff of Unparalleled Vision +5", "ID_FMP_MAGIC_ITEM_3019"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Staff of Unparalleled Vision +6"] = new RulesElement({
    name: "Staff of Unparalleled Vision +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3020",
    source: "Adventurer's Vault",
    categories: ["Staff of Unparalleled Vision +6", "ID_FMP_MAGIC_ITEM_3020"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Stag Helm (epic tier)"] = new RulesElement({
    name: "Stag Helm (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3506",
    source: "Adventurer's Vault",
    categories: ["Stag Helm (epic tier)", "ID_FMP_MAGIC_ITEM_3506"],
    rules: function(model) {
      model.statadd("Passive Perception", 6, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Stag Helm (heroic tier)"] = new RulesElement({
    name: "Stag Helm (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3504",
    source: "Adventurer's Vault",
    categories: ["Stag Helm (heroic tier)", "ID_FMP_MAGIC_ITEM_3504"],
    rules: function(model) {
      model.statadd("Passive Perception", 2, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Stag Helm (paragon tier)"] = new RulesElement({
    name: "Stag Helm (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3505",
    source: "Adventurer's Vault",
    categories: ["Stag Helm (paragon tier)", "ID_FMP_MAGIC_ITEM_3505"],
    rules: function(model) {
      model.statadd("Passive Perception", 4, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Staggering Weapon +1"] = new RulesElement({
    name: "Staggering Weapon +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2368",
    source: "Adventurer's Vault",
    categories: ["Staggering Weapon +1", "ID_FMP_MAGIC_ITEM_2368"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Staggering Weapon +2"] = new RulesElement({
    name: "Staggering Weapon +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2369",
    source: "Adventurer's Vault",
    categories: ["Staggering Weapon +2", "ID_FMP_MAGIC_ITEM_2369"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Staggering Weapon +3"] = new RulesElement({
    name: "Staggering Weapon +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2370",
    source: "Adventurer's Vault",
    categories: ["Staggering Weapon +3", "ID_FMP_MAGIC_ITEM_2370"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Staggering Weapon +4"] = new RulesElement({
    name: "Staggering Weapon +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2371",
    source: "Adventurer's Vault",
    categories: ["Staggering Weapon +4", "ID_FMP_MAGIC_ITEM_2371"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Staggering Weapon +5"] = new RulesElement({
    name: "Staggering Weapon +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2372",
    source: "Adventurer's Vault",
    categories: ["Staggering Weapon +5", "ID_FMP_MAGIC_ITEM_2372"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Staggering Weapon +6"] = new RulesElement({
    name: "Staggering Weapon +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2373",
    source: "Adventurer's Vault",
    categories: ["Staggering Weapon +6", "ID_FMP_MAGIC_ITEM_2373"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Stalker's Armor +4"] = new RulesElement({
    name: "Stalker's Armor +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1824",
    source: "Adventurer's Vault",
    categories: ["Stalker's Armor +4", "ID_FMP_MAGIC_ITEM_1824"],
    rules: function(model) {
      model.statadd("Armor Class", 4, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 4);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Stalker's Armor +5"] = new RulesElement({
    name: "Stalker's Armor +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1825",
    source: "Adventurer's Vault",
    categories: ["Stalker's Armor +5", "ID_FMP_MAGIC_ITEM_1825"],
    rules: function(model) {
      model.statadd("Armor Class", 5, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 5);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Stalker's Armor +6"] = new RulesElement({
    name: "Stalker's Armor +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1826",
    source: "Adventurer's Vault",
    categories: ["Stalker's Armor +6", "ID_FMP_MAGIC_ITEM_1826"],
    rules: function(model) {
      model.statadd("Armor Class", 6, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 6);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Stalwart Belt (epic tier)"] = new RulesElement({
    name: "Stalwart Belt (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3818",
    source: "Adventurer's Vault",
    categories: ["Stalwart Belt (epic tier)", "ID_FMP_MAGIC_ITEM_3818"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Stalwart Belt (heroic tier)"] = new RulesElement({
    name: "Stalwart Belt (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3816",
    source: "Adventurer's Vault",
    categories: ["Stalwart Belt (heroic tier)", "ID_FMP_MAGIC_ITEM_3816"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Stalwart Belt (paragon tier)"] = new RulesElement({
    name: "Stalwart Belt (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3817",
    source: "Adventurer's Vault",
    categories: ["Stalwart Belt (paragon tier)", "ID_FMP_MAGIC_ITEM_3817"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Star of Corellon +2"] = new RulesElement({
    name: "Star of Corellon +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2526",
    source: "Adventurer's Vault",
    categories: ["Star of Corellon +2", "ID_FMP_MAGIC_ITEM_2526"],
    rules: function(model) {
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Star of Corellon +3"] = new RulesElement({
    name: "Star of Corellon +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2527",
    source: "Adventurer's Vault",
    categories: ["Star of Corellon +3", "ID_FMP_MAGIC_ITEM_2527"],
    rules: function(model) {
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Star of Corellon +4"] = new RulesElement({
    name: "Star of Corellon +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2528",
    source: "Adventurer's Vault",
    categories: ["Star of Corellon +4", "ID_FMP_MAGIC_ITEM_2528"],
    rules: function(model) {
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Star of Corellon +5"] = new RulesElement({
    name: "Star of Corellon +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2529",
    source: "Adventurer's Vault",
    categories: ["Star of Corellon +5", "ID_FMP_MAGIC_ITEM_2529"],
    rules: function(model) {
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Star of Corellon +6"] = new RulesElement({
    name: "Star of Corellon +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2530",
    source: "Adventurer's Vault",
    categories: ["Star of Corellon +6", "ID_FMP_MAGIC_ITEM_2530"],
    rules: function(model) {
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Star of the Astral Sea +6"] = new RulesElement({
    name: "Star of the Astral Sea +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3705",
    source: "Adventurer's Vault",
    categories: ["Star of the Astral Sea +6", "ID_FMP_MAGIC_ITEM_3705"],
    rules: function(model) {
      model.statadd("Fortitude Defense", 6, "Enhancement");
      model.statadd("Reflex Defense", 6, "Enhancement");
      model.statadd("Will Defense", 6, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Star Rod +4"] = new RulesElement({
    name: "Star Rod +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2897",
    source: "Adventurer's Vault",
    categories: ["Star Rod +4", "ID_FMP_MAGIC_ITEM_2897"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Star Rod +5"] = new RulesElement({
    name: "Star Rod +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2898",
    source: "Adventurer's Vault",
    categories: ["Star Rod +5", "ID_FMP_MAGIC_ITEM_2898"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Star Rod +6"] = new RulesElement({
    name: "Star Rod +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2899",
    source: "Adventurer's Vault",
    categories: ["Star Rod +6", "ID_FMP_MAGIC_ITEM_2899"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Star Ruby Ring (paragon tier)"] = new RulesElement({
    name: "Star Ruby Ring (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3765",
    source: "Adventurer's Vault",
    categories: ["Star Ruby Ring (paragon tier)", "ID_FMP_MAGIC_ITEM_3765"],
    rules: function(model) {
      model.statadd("Diplomacy Misc", 2, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Starlight Goggles (heroic tier)"] = new RulesElement({
    name: "Starlight Goggles (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3507",
    source: "Adventurer's Vault",
    categories: ["Starlight Goggles (heroic tier)", "ID_FMP_MAGIC_ITEM_3507"],
    rules: function(model) {
      model.grant(elements.id["ID_INTERNAL_VISION_LOW-LIGHT"]);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Steadfast Amulet +2"] = new RulesElement({
    name: "Steadfast Amulet +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3706",
    source: "Adventurer's Vault",
    categories: ["Steadfast Amulet +2", "ID_FMP_MAGIC_ITEM_3706"],
    rules: function(model) {
      model.statadd("Fortitude Defense", 2, "Enhancement");
      model.statadd("Reflex Defense", 2, "Enhancement");
      model.statadd("Will Defense", 2, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Steadfast Amulet +3"] = new RulesElement({
    name: "Steadfast Amulet +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3707",
    source: "Adventurer's Vault",
    categories: ["Steadfast Amulet +3", "ID_FMP_MAGIC_ITEM_3707"],
    rules: function(model) {
      model.statadd("Fortitude Defense", 3, "Enhancement");
      model.statadd("Reflex Defense", 3, "Enhancement");
      model.statadd("Will Defense", 3, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Steadfast Amulet +4"] = new RulesElement({
    name: "Steadfast Amulet +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3708",
    source: "Adventurer's Vault",
    categories: ["Steadfast Amulet +4", "ID_FMP_MAGIC_ITEM_3708"],
    rules: function(model) {
      model.statadd("Fortitude Defense", 4, "Enhancement");
      model.statadd("Reflex Defense", 4, "Enhancement");
      model.statadd("Will Defense", 4, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Steadfast Amulet +5"] = new RulesElement({
    name: "Steadfast Amulet +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3709",
    source: "Adventurer's Vault",
    categories: ["Steadfast Amulet +5", "ID_FMP_MAGIC_ITEM_3709"],
    rules: function(model) {
      model.statadd("Fortitude Defense", 5, "Enhancement");
      model.statadd("Reflex Defense", 5, "Enhancement");
      model.statadd("Will Defense", 5, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Steadfast Amulet +6"] = new RulesElement({
    name: "Steadfast Amulet +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3710",
    source: "Adventurer's Vault",
    categories: ["Steadfast Amulet +6", "ID_FMP_MAGIC_ITEM_3710"],
    rules: function(model) {
      model.statadd("Fortitude Defense", 6, "Enhancement");
      model.statadd("Reflex Defense", 6, "Enhancement");
      model.statadd("Will Defense", 6, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Steadfast Boots (heroic tier)"] = new RulesElement({
    name: "Steadfast Boots (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3352",
    source: "Adventurer's Vault",
    categories: ["Steadfast Boots (heroic tier)", "ID_FMP_MAGIC_ITEM_3352"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Steadfast Saddle (heroic tier)"] = new RulesElement({
    name: "Steadfast Saddle (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3984",
    source: "Adventurer's Vault",
    categories: ["Steadfast Saddle (heroic tier)", "ID_FMP_MAGIC_ITEM_3984"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Stone of Avandra +2"] = new RulesElement({
    name: "Stone of Avandra +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2531",
    source: "Adventurer's Vault",
    categories: ["Stone of Avandra +2", "ID_FMP_MAGIC_ITEM_2531"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Stone of Avandra +3"] = new RulesElement({
    name: "Stone of Avandra +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2532",
    source: "Adventurer's Vault",
    categories: ["Stone of Avandra +3", "ID_FMP_MAGIC_ITEM_2532"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Stone of Avandra +4"] = new RulesElement({
    name: "Stone of Avandra +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2533",
    source: "Adventurer's Vault",
    categories: ["Stone of Avandra +4", "ID_FMP_MAGIC_ITEM_2533"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Stone of Avandra +5"] = new RulesElement({
    name: "Stone of Avandra +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2534",
    source: "Adventurer's Vault",
    categories: ["Stone of Avandra +5", "ID_FMP_MAGIC_ITEM_2534"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Stone of Avandra +6"] = new RulesElement({
    name: "Stone of Avandra +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2535",
    source: "Adventurer's Vault",
    categories: ["Stone of Avandra +6", "ID_FMP_MAGIC_ITEM_2535"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Stoneborn Armor +1"] = new RulesElement({
    name: "Stoneborn Armor +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1827",
    source: "Adventurer's Vault",
    categories: ["Stoneborn Armor +1", "ID_FMP_MAGIC_ITEM_1827"],
    rules: function(model) {
      model.statadd("Armor Class", 1, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 1);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Stoneborn Armor +2"] = new RulesElement({
    name: "Stoneborn Armor +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1828",
    source: "Adventurer's Vault",
    categories: ["Stoneborn Armor +2", "ID_FMP_MAGIC_ITEM_1828"],
    rules: function(model) {
      model.statadd("Armor Class", 2, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 2);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Stoneborn Armor +3"] = new RulesElement({
    name: "Stoneborn Armor +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1829",
    source: "Adventurer's Vault",
    categories: ["Stoneborn Armor +3", "ID_FMP_MAGIC_ITEM_1829"],
    rules: function(model) {
      model.statadd("Armor Class", 3, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 3);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Stoneborn Armor +4"] = new RulesElement({
    name: "Stoneborn Armor +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1830",
    source: "Adventurer's Vault",
    categories: ["Stoneborn Armor +4", "ID_FMP_MAGIC_ITEM_1830"],
    rules: function(model) {
      model.statadd("Armor Class", 4, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 4);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Stoneborn Armor +5"] = new RulesElement({
    name: "Stoneborn Armor +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1831",
    source: "Adventurer's Vault",
    categories: ["Stoneborn Armor +5", "ID_FMP_MAGIC_ITEM_1831"],
    rules: function(model) {
      model.statadd("Armor Class", 5, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 5);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Stoneborn Armor +6"] = new RulesElement({
    name: "Stoneborn Armor +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1832",
    source: "Adventurer's Vault",
    categories: ["Stoneborn Armor +6", "ID_FMP_MAGIC_ITEM_1832"],
    rules: function(model) {
      model.statadd("Armor Class", 6, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 6);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Stonemeal Biscuit (heroic tier)"] = new RulesElement({
    name: "Stonemeal Biscuit (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_4042",
    source: "Adventurer's Vault",
    categories: ["Stonemeal Biscuit (heroic tier)", "ID_FMP_MAGIC_ITEM_4042"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Stoneskin Armor +1"] = new RulesElement({
    name: "Stoneskin Armor +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1833",
    source: "Adventurer's Vault",
    categories: ["Stoneskin Armor +1", "ID_FMP_MAGIC_ITEM_1833"],
    rules: function(model) {
      model.statadd("Armor Class", 1, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 1);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Stoneskin Armor +2"] = new RulesElement({
    name: "Stoneskin Armor +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1834",
    source: "Adventurer's Vault",
    categories: ["Stoneskin Armor +2", "ID_FMP_MAGIC_ITEM_1834"],
    rules: function(model) {
      model.statadd("Armor Class", 2, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 2);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Stoneskin Armor +3"] = new RulesElement({
    name: "Stoneskin Armor +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1835",
    source: "Adventurer's Vault",
    categories: ["Stoneskin Armor +3", "ID_FMP_MAGIC_ITEM_1835"],
    rules: function(model) {
      model.statadd("Armor Class", 3, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 3);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Stoneskin Armor +4"] = new RulesElement({
    name: "Stoneskin Armor +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1836",
    source: "Adventurer's Vault",
    categories: ["Stoneskin Armor +4", "ID_FMP_MAGIC_ITEM_1836"],
    rules: function(model) {
      model.statadd("Armor Class", 4, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 4);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Stoneskin Armor +5"] = new RulesElement({
    name: "Stoneskin Armor +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1837",
    source: "Adventurer's Vault",
    categories: ["Stoneskin Armor +5", "ID_FMP_MAGIC_ITEM_1837"],
    rules: function(model) {
      model.statadd("Armor Class", 5, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 5);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Stoneskin Armor +6"] = new RulesElement({
    name: "Stoneskin Armor +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1838",
    source: "Adventurer's Vault",
    categories: ["Stoneskin Armor +6", "ID_FMP_MAGIC_ITEM_1838"],
    rules: function(model) {
      model.statadd("Armor Class", 6, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 6);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Stonewall Shield (epic tier)"] = new RulesElement({
    name: "Stonewall Shield (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3281",
    source: "Adventurer's Vault",
    categories: ["Stonewall Shield (epic tier)", "ID_FMP_MAGIC_ITEM_3281"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Stonewall Shield (paragon tier)"] = new RulesElement({
    name: "Stonewall Shield (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3280",
    source: "Adventurer's Vault",
    categories: ["Stonewall Shield (paragon tier)", "ID_FMP_MAGIC_ITEM_3280"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Storm Gauntlets (epic tier)"] = new RulesElement({
    name: "Storm Gauntlets (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3413",
    source: "Adventurer's Vault",
    categories: ["Storm Gauntlets (epic tier)", "ID_FMP_MAGIC_ITEM_3413"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Storm Gauntlets (heroic tier)"] = new RulesElement({
    name: "Storm Gauntlets (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3411",
    source: "Adventurer's Vault",
    categories: ["Storm Gauntlets (heroic tier)", "ID_FMP_MAGIC_ITEM_3411"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Storm Gauntlets (paragon tier)"] = new RulesElement({
    name: "Storm Gauntlets (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3412",
    source: "Adventurer's Vault",
    categories: ["Storm Gauntlets (paragon tier)", "ID_FMP_MAGIC_ITEM_3412"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Storm Shield (epic tier)"] = new RulesElement({
    name: "Storm Shield (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3284",
    source: "Adventurer's Vault",
    categories: ["Storm Shield (epic tier)", "ID_FMP_MAGIC_ITEM_3284"],
    rules: function(model) {
      model.statadd("resist:lightning", 15, "resist");
      model.statadd("resist:thunder", 15, "resist");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Storm Shield (heroic tier)"] = new RulesElement({
    name: "Storm Shield (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3282",
    source: "Adventurer's Vault",
    categories: ["Storm Shield (heroic tier)", "ID_FMP_MAGIC_ITEM_3282"],
    rules: function(model) {
      model.statadd("Storm Shield (heroic tier)", 5, "Storm Shield (heroic tier)");
      model.statadd("Resist:lightning and resist 5 thunder", function() { return model.stat("Storm Shield (heroic tier)"); }, "resist");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Storm Shield (paragon tier)"] = new RulesElement({
    name: "Storm Shield (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3283",
    source: "Adventurer's Vault",
    categories: ["Storm Shield (paragon tier)", "ID_FMP_MAGIC_ITEM_3283"],
    rules: function(model) {
      model.statadd("Storm Shield (paragon tier)", 10, "Storm Shield (paragon tier)");
      model.statadd("Resist:lightning and resist 10 thunder", function() { return model.stat("Storm Shield (paragon tier)"); }, "resist");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Stormbolt Weapon +3"] = new RulesElement({
    name: "Stormbolt Weapon +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2374",
    source: "Adventurer's Vault",
    categories: ["Stormbolt Weapon +3", "ID_FMP_MAGIC_ITEM_2374"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Stormbolt Weapon +4"] = new RulesElement({
    name: "Stormbolt Weapon +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2375",
    source: "Adventurer's Vault",
    categories: ["Stormbolt Weapon +4", "ID_FMP_MAGIC_ITEM_2375"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Stormbolt Weapon +5"] = new RulesElement({
    name: "Stormbolt Weapon +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2376",
    source: "Adventurer's Vault",
    categories: ["Stormbolt Weapon +5", "ID_FMP_MAGIC_ITEM_2376"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Stormbolt Weapon +6"] = new RulesElement({
    name: "Stormbolt Weapon +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2377",
    source: "Adventurer's Vault",
    categories: ["Stormbolt Weapon +6", "ID_FMP_MAGIC_ITEM_2377"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Stormlord Armor +3"] = new RulesElement({
    name: "Stormlord Armor +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1839",
    source: "Adventurer's Vault",
    categories: ["Stormlord Armor +3", "ID_FMP_MAGIC_ITEM_1839"],
    rules: function(model) {
      model.statadd("resist:lightning", 10, "resist");
      model.statadd("resist:thunder", 10, "resist");
      model.statadd("Armor Class", 3, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 3);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Stormlord Armor +4"] = new RulesElement({
    name: "Stormlord Armor +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1840",
    source: "Adventurer's Vault",
    categories: ["Stormlord Armor +4", "ID_FMP_MAGIC_ITEM_1840"],
    rules: function(model) {
      model.statadd("resist:lightning", 10, "resist");
      model.statadd("resist:thunder", 10, "resist");
      model.statadd("Armor Class", 4, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 4);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Stormlord Armor +5"] = new RulesElement({
    name: "Stormlord Armor +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1841",
    source: "Adventurer's Vault",
    categories: ["Stormlord Armor +5", "ID_FMP_MAGIC_ITEM_1841"],
    rules: function(model) {
      model.statadd("resist:lightning", 15, "resist");
      model.statadd("resist:thunder", 15, "resist");
      model.statadd("Armor Class", 5, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 5);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Stormlord Armor +6"] = new RulesElement({
    name: "Stormlord Armor +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1842",
    source: "Adventurer's Vault",
    categories: ["Stormlord Armor +6", "ID_FMP_MAGIC_ITEM_1842"],
    rules: function(model) {
      model.statadd("resist:lightning", 15, "resist");
      model.statadd("resist:thunder", 15, "resist");
      model.statadd("Armor Class", 6, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 6);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Stout Weapon +2"] = new RulesElement({
    name: "Stout Weapon +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2378",
    source: "Adventurer's Vault",
    categories: ["Stout Weapon +2", "ID_FMP_MAGIC_ITEM_2378"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Stout Weapon +3"] = new RulesElement({
    name: "Stout Weapon +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2379",
    source: "Adventurer's Vault",
    categories: ["Stout Weapon +3", "ID_FMP_MAGIC_ITEM_2379"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Stout Weapon +4"] = new RulesElement({
    name: "Stout Weapon +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2380",
    source: "Adventurer's Vault",
    categories: ["Stout Weapon +4", "ID_FMP_MAGIC_ITEM_2380"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Stout Weapon +5"] = new RulesElement({
    name: "Stout Weapon +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2381",
    source: "Adventurer's Vault",
    categories: ["Stout Weapon +5", "ID_FMP_MAGIC_ITEM_2381"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Stout Weapon +6"] = new RulesElement({
    name: "Stout Weapon +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2382",
    source: "Adventurer's Vault",
    categories: ["Stout Weapon +6", "ID_FMP_MAGIC_ITEM_2382"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Strikebacks (heroic tier)"] = new RulesElement({
    name: "Strikebacks (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3414",
    source: "Adventurer's Vault",
    categories: ["Strikebacks (heroic tier)", "ID_FMP_MAGIC_ITEM_3414"],
    rules: function(model) {
      model.statadd("attack rolls", function() { /* to opportunity attacks */ return 1; }, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Striking Staff +3"] = new RulesElement({
    name: "Striking Staff +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3021",
    source: "Adventurer's Vault",
    categories: ["Striking Staff +3", "ID_FMP_MAGIC_ITEM_3021"],
    rules: function(model) {
      model.statadd("melee basic:key ability", "int");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Striking Staff +4"] = new RulesElement({
    name: "Striking Staff +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3022",
    source: "Adventurer's Vault",
    categories: ["Striking Staff +4", "ID_FMP_MAGIC_ITEM_3022"],
    rules: function(model) {
      model.statadd("melee basic:key ability", "int");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Striking Staff +5"] = new RulesElement({
    name: "Striking Staff +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3023",
    source: "Adventurer's Vault",
    categories: ["Striking Staff +5", "ID_FMP_MAGIC_ITEM_3023"],
    rules: function(model) {
      model.statadd("melee basic:key ability", "int");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Striking Staff +6"] = new RulesElement({
    name: "Striking Staff +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3024",
    source: "Adventurer's Vault",
    categories: ["Striking Staff +6", "ID_FMP_MAGIC_ITEM_3024"],
    rules: function(model) {
      model.statadd("melee basic:key ability", "int");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Strongheart Weapon +1"] = new RulesElement({
    name: "Strongheart Weapon +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2383",
    source: "Adventurer's Vault",
    categories: ["Strongheart Weapon +1", "ID_FMP_MAGIC_ITEM_2383"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Strongheart Weapon +2"] = new RulesElement({
    name: "Strongheart Weapon +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2384",
    source: "Adventurer's Vault",
    categories: ["Strongheart Weapon +2", "ID_FMP_MAGIC_ITEM_2384"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Strongheart Weapon +3"] = new RulesElement({
    name: "Strongheart Weapon +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2385",
    source: "Adventurer's Vault",
    categories: ["Strongheart Weapon +3", "ID_FMP_MAGIC_ITEM_2385"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Strongheart Weapon +4"] = new RulesElement({
    name: "Strongheart Weapon +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2386",
    source: "Adventurer's Vault",
    categories: ["Strongheart Weapon +4", "ID_FMP_MAGIC_ITEM_2386"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Strongheart Weapon +5"] = new RulesElement({
    name: "Strongheart Weapon +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2387",
    source: "Adventurer's Vault",
    categories: ["Strongheart Weapon +5", "ID_FMP_MAGIC_ITEM_2387"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Strongheart Weapon +6"] = new RulesElement({
    name: "Strongheart Weapon +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2388",
    source: "Adventurer's Vault",
    categories: ["Strongheart Weapon +6", "ID_FMP_MAGIC_ITEM_2388"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Stylus of the Translator (heroic tier)"] = new RulesElement({
    name: "Stylus of the Translator (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3896",
    source: "Adventurer's Vault",
    categories: ["Stylus of the Translator (heroic tier)", "ID_FMP_MAGIC_ITEM_3896"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Subtle Weapon +1"] = new RulesElement({
    name: "Subtle Weapon +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2389",
    source: "Adventurer's Vault",
    categories: ["Subtle Weapon +1", "ID_FMP_MAGIC_ITEM_2389"],
    rules: function(model) {
      model.statadd("damage rolls", function() { /* against an enemy granting combat advantage to you */ return 1; }, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Subtle Weapon +2"] = new RulesElement({
    name: "Subtle Weapon +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2390",
    source: "Adventurer's Vault",
    categories: ["Subtle Weapon +2", "ID_FMP_MAGIC_ITEM_2390"],
    rules: function(model) {
      model.statadd("damage rolls", function() { /* against an enemy granting combat advantage to you */ return 2; }, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Subtle Weapon +3"] = new RulesElement({
    name: "Subtle Weapon +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2391",
    source: "Adventurer's Vault",
    categories: ["Subtle Weapon +3", "ID_FMP_MAGIC_ITEM_2391"],
    rules: function(model) {
      model.statadd("damage rolls", function() { /* against an enemy granting combat advantage to you */ return 3; }, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Subtle Weapon +4"] = new RulesElement({
    name: "Subtle Weapon +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2392",
    source: "Adventurer's Vault",
    categories: ["Subtle Weapon +4", "ID_FMP_MAGIC_ITEM_2392"],
    rules: function(model) {
      model.statadd("damage rolls", function() { /* against an enemy granting combat advantage to you */ return 4; }, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Subtle Weapon +5"] = new RulesElement({
    name: "Subtle Weapon +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2393",
    source: "Adventurer's Vault",
    categories: ["Subtle Weapon +5", "ID_FMP_MAGIC_ITEM_2393"],
    rules: function(model) {
      model.statadd("damage rolls", function() { /* against an enemy granting combat advantage to you */ return 5; }, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Subtle Weapon +6"] = new RulesElement({
    name: "Subtle Weapon +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2394",
    source: "Adventurer's Vault",
    categories: ["Subtle Weapon +6", "ID_FMP_MAGIC_ITEM_2394"],
    rules: function(model) {
      model.statadd("damage rolls", function() { /* against an enemy granting combat advantage to you */ return 6; }, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Summoned Armor +2"] = new RulesElement({
    name: "Summoned Armor +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1843",
    source: "Adventurer's Vault",
    categories: ["Summoned Armor +2", "ID_FMP_MAGIC_ITEM_1843"],
    rules: function(model) {
      model.statadd("Armor Class", 2, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 2);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Summoned Armor +3"] = new RulesElement({
    name: "Summoned Armor +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1844",
    source: "Adventurer's Vault",
    categories: ["Summoned Armor +3", "ID_FMP_MAGIC_ITEM_1844"],
    rules: function(model) {
      model.statadd("Armor Class", 3, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 3);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Summoned Armor +4"] = new RulesElement({
    name: "Summoned Armor +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1845",
    source: "Adventurer's Vault",
    categories: ["Summoned Armor +4", "ID_FMP_MAGIC_ITEM_1845"],
    rules: function(model) {
      model.statadd("Armor Class", 4, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 4);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Summoned Armor +5"] = new RulesElement({
    name: "Summoned Armor +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1846",
    source: "Adventurer's Vault",
    categories: ["Summoned Armor +5", "ID_FMP_MAGIC_ITEM_1846"],
    rules: function(model) {
      model.statadd("Armor Class", 5, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 5);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Summoned Armor +6"] = new RulesElement({
    name: "Summoned Armor +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1847",
    source: "Adventurer's Vault",
    categories: ["Summoned Armor +6", "ID_FMP_MAGIC_ITEM_1847"],
    rules: function(model) {
      model.statadd("Armor Class", 6, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 6);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Sun Disk of Pelor +2"] = new RulesElement({
    name: "Sun Disk of Pelor +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2536",
    source: "Adventurer's Vault",
    categories: ["Sun Disk of Pelor +2", "ID_FMP_MAGIC_ITEM_2536"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Sun Disk of Pelor +3"] = new RulesElement({
    name: "Sun Disk of Pelor +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2537",
    source: "Adventurer's Vault",
    categories: ["Sun Disk of Pelor +3", "ID_FMP_MAGIC_ITEM_2537"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Sun Disk of Pelor +4"] = new RulesElement({
    name: "Sun Disk of Pelor +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2538",
    source: "Adventurer's Vault",
    categories: ["Sun Disk of Pelor +4", "ID_FMP_MAGIC_ITEM_2538"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Sun Disk of Pelor +5"] = new RulesElement({
    name: "Sun Disk of Pelor +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2539",
    source: "Adventurer's Vault",
    categories: ["Sun Disk of Pelor +5", "ID_FMP_MAGIC_ITEM_2539"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Sun Disk of Pelor +6"] = new RulesElement({
    name: "Sun Disk of Pelor +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2540",
    source: "Adventurer's Vault",
    categories: ["Sun Disk of Pelor +6", "ID_FMP_MAGIC_ITEM_2540"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Sunblade +1"] = new RulesElement({
    name: "Sunblade +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2395",
    source: "Adventurer's Vault",
    categories: ["Sunblade +1", "ID_FMP_MAGIC_ITEM_2395"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Sunblade +2"] = new RulesElement({
    name: "Sunblade +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2396",
    source: "Adventurer's Vault",
    categories: ["Sunblade +2", "ID_FMP_MAGIC_ITEM_2396"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Sunblade +3"] = new RulesElement({
    name: "Sunblade +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2397",
    source: "Adventurer's Vault",
    categories: ["Sunblade +3", "ID_FMP_MAGIC_ITEM_2397"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Sunblade +4"] = new RulesElement({
    name: "Sunblade +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2398",
    source: "Adventurer's Vault",
    categories: ["Sunblade +4", "ID_FMP_MAGIC_ITEM_2398"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Sunblade +5"] = new RulesElement({
    name: "Sunblade +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2399",
    source: "Adventurer's Vault",
    categories: ["Sunblade +5", "ID_FMP_MAGIC_ITEM_2399"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Sunblade +6"] = new RulesElement({
    name: "Sunblade +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2400",
    source: "Adventurer's Vault",
    categories: ["Sunblade +6", "ID_FMP_MAGIC_ITEM_2400"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Sure Shot Gloves (heroic tier)"] = new RulesElement({
    name: "Sure Shot Gloves (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3418",
    source: "Adventurer's Vault",
    categories: ["Sure Shot Gloves (heroic tier)", "ID_FMP_MAGIC_ITEM_3418"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Surefoot Boots (heroic tier)"] = new RulesElement({
    name: "Surefoot Boots (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3353",
    source: "Adventurer's Vault",
    categories: ["Surefoot Boots (heroic tier)", "ID_FMP_MAGIC_ITEM_3353"],
    rules: function(model) {
      model.statadd("Acrobatics Misc", 2, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Surge Armor +3"] = new RulesElement({
    name: "Surge Armor +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1848",
    source: "Adventurer's Vault",
    categories: ["Surge Armor +3", "ID_FMP_MAGIC_ITEM_1848"],
    rules: function(model) {
      model.statadd("Armor Class", 3, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 3);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Surge Armor +4"] = new RulesElement({
    name: "Surge Armor +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1849",
    source: "Adventurer's Vault",
    categories: ["Surge Armor +4", "ID_FMP_MAGIC_ITEM_1849"],
    rules: function(model) {
      model.statadd("Armor Class", 4, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 4);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Surge Armor +5"] = new RulesElement({
    name: "Surge Armor +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1850",
    source: "Adventurer's Vault",
    categories: ["Surge Armor +5", "ID_FMP_MAGIC_ITEM_1850"],
    rules: function(model) {
      model.statadd("Armor Class", 5, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 5);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Surge Armor +6"] = new RulesElement({
    name: "Surge Armor +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1851",
    source: "Adventurer's Vault",
    categories: ["Surge Armor +6", "ID_FMP_MAGIC_ITEM_1851"],
    rules: function(model) {
      model.statadd("Armor Class", 6, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 6);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Survivor's Armor +2"] = new RulesElement({
    name: "Survivor's Armor +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1852",
    source: "Adventurer's Vault",
    categories: ["Survivor's Armor +2", "ID_FMP_MAGIC_ITEM_1852"],
    rules: function(model) {
      model.statadd("Armor Class", 2, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 2);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Survivor's Armor +3"] = new RulesElement({
    name: "Survivor's Armor +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1853",
    source: "Adventurer's Vault",
    categories: ["Survivor's Armor +3", "ID_FMP_MAGIC_ITEM_1853"],
    rules: function(model) {
      model.statadd("Armor Class", 3, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 3);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Survivor's Armor +4"] = new RulesElement({
    name: "Survivor's Armor +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1854",
    source: "Adventurer's Vault",
    categories: ["Survivor's Armor +4", "ID_FMP_MAGIC_ITEM_1854"],
    rules: function(model) {
      model.statadd("Armor Class", 4, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 4);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Survivor's Armor +5"] = new RulesElement({
    name: "Survivor's Armor +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1855",
    source: "Adventurer's Vault",
    categories: ["Survivor's Armor +5", "ID_FMP_MAGIC_ITEM_1855"],
    rules: function(model) {
      model.statadd("Armor Class", 5, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 5);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Survivor's Armor +6"] = new RulesElement({
    name: "Survivor's Armor +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1856",
    source: "Adventurer's Vault",
    categories: ["Survivor's Armor +6", "ID_FMP_MAGIC_ITEM_1856"],
    rules: function(model) {
      model.statadd("Armor Class", 6, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 6);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Survivor's Belt (paragon tier)"] = new RulesElement({
    name: "Survivor's Belt (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3819",
    source: "Adventurer's Vault",
    categories: ["Survivor's Belt (paragon tier)", "ID_FMP_MAGIC_ITEM_3819"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Swiftshot Weapon +1"] = new RulesElement({
    name: "Swiftshot Weapon +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2401",
    source: "Adventurer's Vault",
    categories: ["Swiftshot Weapon +1", "ID_FMP_MAGIC_ITEM_2401"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Swiftshot Weapon +2"] = new RulesElement({
    name: "Swiftshot Weapon +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2402",
    source: "Adventurer's Vault",
    categories: ["Swiftshot Weapon +2", "ID_FMP_MAGIC_ITEM_2402"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Swiftshot Weapon +3"] = new RulesElement({
    name: "Swiftshot Weapon +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2403",
    source: "Adventurer's Vault",
    categories: ["Swiftshot Weapon +3", "ID_FMP_MAGIC_ITEM_2403"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Swiftshot Weapon +4"] = new RulesElement({
    name: "Swiftshot Weapon +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2404",
    source: "Adventurer's Vault",
    categories: ["Swiftshot Weapon +4", "ID_FMP_MAGIC_ITEM_2404"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Swiftshot Weapon +5"] = new RulesElement({
    name: "Swiftshot Weapon +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2405",
    source: "Adventurer's Vault",
    categories: ["Swiftshot Weapon +5", "ID_FMP_MAGIC_ITEM_2405"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Swiftshot Weapon +6"] = new RulesElement({
    name: "Swiftshot Weapon +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2406",
    source: "Adventurer's Vault",
    categories: ["Swiftshot Weapon +6", "ID_FMP_MAGIC_ITEM_2406"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Swimtide Harness (epic tier)"] = new RulesElement({
    name: "Swimtide Harness (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3822",
    source: "Adventurer's Vault",
    categories: ["Swimtide Harness (epic tier)", "ID_FMP_MAGIC_ITEM_3822"],
    rules: function(model) {
      model.statadd("Athletics Misc", function() { /* to swim */ return 6; }, "item");
      model.statadd("Endurance Misc", function() { /* to hold your breath, swim, or tread water */ return 6; }, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Swimtide Harness (heroic tier)"] = new RulesElement({
    name: "Swimtide Harness (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3820",
    source: "Adventurer's Vault",
    categories: ["Swimtide Harness (heroic tier)", "ID_FMP_MAGIC_ITEM_3820"],
    rules: function(model) {
      model.statadd("Athletics Misc", function() { /* to swim */ return 2; }, "item");
      model.statadd("Endurance Misc", function() { /* to hold your breath, swim, or tread water */ return 2; }, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Swimtide Harness (paragon tier)"] = new RulesElement({
    name: "Swimtide Harness (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3821",
    source: "Adventurer's Vault",
    categories: ["Swimtide Harness (paragon tier)", "ID_FMP_MAGIC_ITEM_3821"],
    rules: function(model) {
      model.statadd("Athletics Misc", function() { /* to swim */ return 4; }, "item");
      model.statadd("Endurance Misc", function() { /* to hold your breath, swim, or tread water */ return 4; }, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Symbol of Astral Might +1"] = new RulesElement({
    name: "Symbol of Astral Might +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2541",
    source: "Adventurer's Vault",
    categories: ["Symbol of Astral Might +1", "ID_FMP_MAGIC_ITEM_2541"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Symbol of Astral Might +2"] = new RulesElement({
    name: "Symbol of Astral Might +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2542",
    source: "Adventurer's Vault",
    categories: ["Symbol of Astral Might +2", "ID_FMP_MAGIC_ITEM_2542"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Symbol of Astral Might +3"] = new RulesElement({
    name: "Symbol of Astral Might +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2543",
    source: "Adventurer's Vault",
    categories: ["Symbol of Astral Might +3", "ID_FMP_MAGIC_ITEM_2543"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Symbol of Astral Might +4"] = new RulesElement({
    name: "Symbol of Astral Might +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2544",
    source: "Adventurer's Vault",
    categories: ["Symbol of Astral Might +4", "ID_FMP_MAGIC_ITEM_2544"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Symbol of Astral Might +5"] = new RulesElement({
    name: "Symbol of Astral Might +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2545",
    source: "Adventurer's Vault",
    categories: ["Symbol of Astral Might +5", "ID_FMP_MAGIC_ITEM_2545"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Symbol of Astral Might +6"] = new RulesElement({
    name: "Symbol of Astral Might +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2546",
    source: "Adventurer's Vault",
    categories: ["Symbol of Astral Might +6", "ID_FMP_MAGIC_ITEM_2546"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Symbol of Brilliance +3"] = new RulesElement({
    name: "Symbol of Brilliance +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2547",
    source: "Adventurer's Vault",
    categories: ["Symbol of Brilliance +3", "ID_FMP_MAGIC_ITEM_2547"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Symbol of Brilliance +4"] = new RulesElement({
    name: "Symbol of Brilliance +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2548",
    source: "Adventurer's Vault",
    categories: ["Symbol of Brilliance +4", "ID_FMP_MAGIC_ITEM_2548"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Symbol of Brilliance +5"] = new RulesElement({
    name: "Symbol of Brilliance +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2549",
    source: "Adventurer's Vault",
    categories: ["Symbol of Brilliance +5", "ID_FMP_MAGIC_ITEM_2549"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Symbol of Brilliance +6"] = new RulesElement({
    name: "Symbol of Brilliance +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2550",
    source: "Adventurer's Vault",
    categories: ["Symbol of Brilliance +6", "ID_FMP_MAGIC_ITEM_2550"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Symbol of Censure +3"] = new RulesElement({
    name: "Symbol of Censure +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2551",
    source: "Adventurer's Vault",
    categories: ["Symbol of Censure +3", "ID_FMP_MAGIC_ITEM_2551"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Symbol of Censure +4"] = new RulesElement({
    name: "Symbol of Censure +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2552",
    source: "Adventurer's Vault",
    categories: ["Symbol of Censure +4", "ID_FMP_MAGIC_ITEM_2552"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Symbol of Censure +5"] = new RulesElement({
    name: "Symbol of Censure +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2553",
    source: "Adventurer's Vault",
    categories: ["Symbol of Censure +5", "ID_FMP_MAGIC_ITEM_2553"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Symbol of Censure +6"] = new RulesElement({
    name: "Symbol of Censure +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2554",
    source: "Adventurer's Vault",
    categories: ["Symbol of Censure +6", "ID_FMP_MAGIC_ITEM_2554"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Symbol of Confrontation +1"] = new RulesElement({
    name: "Symbol of Confrontation +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2555",
    source: "Adventurer's Vault",
    categories: ["Symbol of Confrontation +1", "ID_FMP_MAGIC_ITEM_2555"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Symbol of Confrontation +2"] = new RulesElement({
    name: "Symbol of Confrontation +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2556",
    source: "Adventurer's Vault",
    categories: ["Symbol of Confrontation +2", "ID_FMP_MAGIC_ITEM_2556"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Symbol of Confrontation +3"] = new RulesElement({
    name: "Symbol of Confrontation +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2557",
    source: "Adventurer's Vault",
    categories: ["Symbol of Confrontation +3", "ID_FMP_MAGIC_ITEM_2557"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Symbol of Confrontation +4"] = new RulesElement({
    name: "Symbol of Confrontation +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2558",
    source: "Adventurer's Vault",
    categories: ["Symbol of Confrontation +4", "ID_FMP_MAGIC_ITEM_2558"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Symbol of Confrontation +5"] = new RulesElement({
    name: "Symbol of Confrontation +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2559",
    source: "Adventurer's Vault",
    categories: ["Symbol of Confrontation +5", "ID_FMP_MAGIC_ITEM_2559"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Symbol of Confrontation +6"] = new RulesElement({
    name: "Symbol of Confrontation +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2560",
    source: "Adventurer's Vault",
    categories: ["Symbol of Confrontation +6", "ID_FMP_MAGIC_ITEM_2560"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Symbol of Damnation +5"] = new RulesElement({
    name: "Symbol of Damnation +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2561",
    source: "Adventurer's Vault",
    categories: ["Symbol of Damnation +5", "ID_FMP_MAGIC_ITEM_2561"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Symbol of Damnation +6"] = new RulesElement({
    name: "Symbol of Damnation +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2562",
    source: "Adventurer's Vault",
    categories: ["Symbol of Damnation +6", "ID_FMP_MAGIC_ITEM_2562"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Symbol of Dedication +4"] = new RulesElement({
    name: "Symbol of Dedication +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2563",
    source: "Adventurer's Vault",
    categories: ["Symbol of Dedication +4", "ID_FMP_MAGIC_ITEM_2563"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Symbol of Dedication +5"] = new RulesElement({
    name: "Symbol of Dedication +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2564",
    source: "Adventurer's Vault",
    categories: ["Symbol of Dedication +5", "ID_FMP_MAGIC_ITEM_2564"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Symbol of Dedication +6"] = new RulesElement({
    name: "Symbol of Dedication +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2565",
    source: "Adventurer's Vault",
    categories: ["Symbol of Dedication +6", "ID_FMP_MAGIC_ITEM_2565"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Symbol of Dire Fate +1"] = new RulesElement({
    name: "Symbol of Dire Fate +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2566",
    source: "Adventurer's Vault",
    categories: ["Symbol of Dire Fate +1", "ID_FMP_MAGIC_ITEM_2566"],
    rules: function(model) {
      model.statadd("attack rolls(Symbol of Dire Fate +1)", function() { /* against a target currently marked by you */ return 1; });
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Symbol of Dire Fate +2"] = new RulesElement({
    name: "Symbol of Dire Fate +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2567",
    source: "Adventurer's Vault",
    categories: ["Symbol of Dire Fate +2", "ID_FMP_MAGIC_ITEM_2567"],
    rules: function(model) {
      model.statadd("attack rolls(Symbol of Dire Fate +2)", function() { /* against a target currently marked by you */ return 1; });
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Symbol of Dire Fate +3"] = new RulesElement({
    name: "Symbol of Dire Fate +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2568",
    source: "Adventurer's Vault",
    categories: ["Symbol of Dire Fate +3", "ID_FMP_MAGIC_ITEM_2568"],
    rules: function(model) {
      model.statadd("attack rolls(Symbol of Dire Fate +3)", function() { /* against a target currently marked by you */ return 1; });
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Symbol of Dire Fate +4"] = new RulesElement({
    name: "Symbol of Dire Fate +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2569",
    source: "Adventurer's Vault",
    categories: ["Symbol of Dire Fate +4", "ID_FMP_MAGIC_ITEM_2569"],
    rules: function(model) {
      model.statadd("attack rolls(Symbol of Dire Fate +4)", function() { /* against a target currently marked by you */ return 1; });
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Symbol of Dire Fate +5"] = new RulesElement({
    name: "Symbol of Dire Fate +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2570",
    source: "Adventurer's Vault",
    categories: ["Symbol of Dire Fate +5", "ID_FMP_MAGIC_ITEM_2570"],
    rules: function(model) {
      model.statadd("attack rolls(Symbol of Dire Fate +5)", function() { /* against a target currently marked by you */ return 1; });
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Symbol of Dire Fate +6"] = new RulesElement({
    name: "Symbol of Dire Fate +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2571",
    source: "Adventurer's Vault",
    categories: ["Symbol of Dire Fate +6", "ID_FMP_MAGIC_ITEM_2571"],
    rules: function(model) {
      model.statadd("attack rolls(Symbol of Dire Fate +6)", function() { /* against a target currently marked by you */ return 1; });
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Symbol of Divine Reach +1"] = new RulesElement({
    name: "Symbol of Divine Reach +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2572",
    source: "Adventurer's Vault",
    categories: ["Symbol of Divine Reach +1", "ID_FMP_MAGIC_ITEM_2572"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Symbol of Divine Reach +2"] = new RulesElement({
    name: "Symbol of Divine Reach +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2573",
    source: "Adventurer's Vault",
    categories: ["Symbol of Divine Reach +2", "ID_FMP_MAGIC_ITEM_2573"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Symbol of Divine Reach +3"] = new RulesElement({
    name: "Symbol of Divine Reach +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2574",
    source: "Adventurer's Vault",
    categories: ["Symbol of Divine Reach +3", "ID_FMP_MAGIC_ITEM_2574"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Symbol of Divine Reach +4"] = new RulesElement({
    name: "Symbol of Divine Reach +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2575",
    source: "Adventurer's Vault",
    categories: ["Symbol of Divine Reach +4", "ID_FMP_MAGIC_ITEM_2575"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Symbol of Divine Reach +5"] = new RulesElement({
    name: "Symbol of Divine Reach +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2576",
    source: "Adventurer's Vault",
    categories: ["Symbol of Divine Reach +5", "ID_FMP_MAGIC_ITEM_2576"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Symbol of Divine Reach +6"] = new RulesElement({
    name: "Symbol of Divine Reach +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2577",
    source: "Adventurer's Vault",
    categories: ["Symbol of Divine Reach +6", "ID_FMP_MAGIC_ITEM_2577"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Symbol of Divinity +1"] = new RulesElement({
    name: "Symbol of Divinity +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2578",
    source: "Adventurer's Vault",
    categories: ["Symbol of Divinity +1", "ID_FMP_MAGIC_ITEM_2578"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Symbol of Divinity +2"] = new RulesElement({
    name: "Symbol of Divinity +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2579",
    source: "Adventurer's Vault",
    categories: ["Symbol of Divinity +2", "ID_FMP_MAGIC_ITEM_2579"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Symbol of Divinity +3"] = new RulesElement({
    name: "Symbol of Divinity +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2580",
    source: "Adventurer's Vault",
    categories: ["Symbol of Divinity +3", "ID_FMP_MAGIC_ITEM_2580"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Symbol of Divinity +4"] = new RulesElement({
    name: "Symbol of Divinity +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2581",
    source: "Adventurer's Vault",
    categories: ["Symbol of Divinity +4", "ID_FMP_MAGIC_ITEM_2581"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Symbol of Divinity +5"] = new RulesElement({
    name: "Symbol of Divinity +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2582",
    source: "Adventurer's Vault",
    categories: ["Symbol of Divinity +5", "ID_FMP_MAGIC_ITEM_2582"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Symbol of Divinity +6"] = new RulesElement({
    name: "Symbol of Divinity +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2583",
    source: "Adventurer's Vault",
    categories: ["Symbol of Divinity +6", "ID_FMP_MAGIC_ITEM_2583"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Symbol of Freedom +2"] = new RulesElement({
    name: "Symbol of Freedom +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2584",
    source: "Adventurer's Vault",
    categories: ["Symbol of Freedom +2", "ID_FMP_MAGIC_ITEM_2584"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Symbol of Freedom +3"] = new RulesElement({
    name: "Symbol of Freedom +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2585",
    source: "Adventurer's Vault",
    categories: ["Symbol of Freedom +3", "ID_FMP_MAGIC_ITEM_2585"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Symbol of Freedom +4"] = new RulesElement({
    name: "Symbol of Freedom +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2586",
    source: "Adventurer's Vault",
    categories: ["Symbol of Freedom +4", "ID_FMP_MAGIC_ITEM_2586"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Symbol of Freedom +5"] = new RulesElement({
    name: "Symbol of Freedom +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2587",
    source: "Adventurer's Vault",
    categories: ["Symbol of Freedom +5", "ID_FMP_MAGIC_ITEM_2587"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Symbol of Freedom +6"] = new RulesElement({
    name: "Symbol of Freedom +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2588",
    source: "Adventurer's Vault",
    categories: ["Symbol of Freedom +6", "ID_FMP_MAGIC_ITEM_2588"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Symbol of Good Fortune +1"] = new RulesElement({
    name: "Symbol of Good Fortune +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2589",
    source: "Adventurer's Vault",
    categories: ["Symbol of Good Fortune +1", "ID_FMP_MAGIC_ITEM_2589"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Symbol of Good Fortune +2"] = new RulesElement({
    name: "Symbol of Good Fortune +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2590",
    source: "Adventurer's Vault",
    categories: ["Symbol of Good Fortune +2", "ID_FMP_MAGIC_ITEM_2590"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Symbol of Good Fortune +3"] = new RulesElement({
    name: "Symbol of Good Fortune +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2591",
    source: "Adventurer's Vault",
    categories: ["Symbol of Good Fortune +3", "ID_FMP_MAGIC_ITEM_2591"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Symbol of Good Fortune +4"] = new RulesElement({
    name: "Symbol of Good Fortune +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2592",
    source: "Adventurer's Vault",
    categories: ["Symbol of Good Fortune +4", "ID_FMP_MAGIC_ITEM_2592"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Symbol of Good Fortune +5"] = new RulesElement({
    name: "Symbol of Good Fortune +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2593",
    source: "Adventurer's Vault",
    categories: ["Symbol of Good Fortune +5", "ID_FMP_MAGIC_ITEM_2593"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Symbol of Good Fortune +6"] = new RulesElement({
    name: "Symbol of Good Fortune +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2594",
    source: "Adventurer's Vault",
    categories: ["Symbol of Good Fortune +6", "ID_FMP_MAGIC_ITEM_2594"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Symbol of Lifebonding +3"] = new RulesElement({
    name: "Symbol of Lifebonding +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2595",
    source: "Adventurer's Vault",
    categories: ["Symbol of Lifebonding +3", "ID_FMP_MAGIC_ITEM_2595"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Symbol of Lifebonding +4"] = new RulesElement({
    name: "Symbol of Lifebonding +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2596",
    source: "Adventurer's Vault",
    categories: ["Symbol of Lifebonding +4", "ID_FMP_MAGIC_ITEM_2596"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Symbol of Lifebonding +5"] = new RulesElement({
    name: "Symbol of Lifebonding +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2597",
    source: "Adventurer's Vault",
    categories: ["Symbol of Lifebonding +5", "ID_FMP_MAGIC_ITEM_2597"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Symbol of Lifebonding +6"] = new RulesElement({
    name: "Symbol of Lifebonding +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2598",
    source: "Adventurer's Vault",
    categories: ["Symbol of Lifebonding +6", "ID_FMP_MAGIC_ITEM_2598"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Symbol of Mortality +1"] = new RulesElement({
    name: "Symbol of Mortality +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2599",
    source: "Adventurer's Vault",
    categories: ["Symbol of Mortality +1", "ID_FMP_MAGIC_ITEM_2599"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Symbol of Mortality +2"] = new RulesElement({
    name: "Symbol of Mortality +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2600",
    source: "Adventurer's Vault",
    categories: ["Symbol of Mortality +2", "ID_FMP_MAGIC_ITEM_2600"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Symbol of Mortality +3"] = new RulesElement({
    name: "Symbol of Mortality +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2601",
    source: "Adventurer's Vault",
    categories: ["Symbol of Mortality +3", "ID_FMP_MAGIC_ITEM_2601"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Symbol of Mortality +4"] = new RulesElement({
    name: "Symbol of Mortality +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2602",
    source: "Adventurer's Vault",
    categories: ["Symbol of Mortality +4", "ID_FMP_MAGIC_ITEM_2602"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Symbol of Mortality +5"] = new RulesElement({
    name: "Symbol of Mortality +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2603",
    source: "Adventurer's Vault",
    categories: ["Symbol of Mortality +5", "ID_FMP_MAGIC_ITEM_2603"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Symbol of Mortality +6"] = new RulesElement({
    name: "Symbol of Mortality +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2604",
    source: "Adventurer's Vault",
    categories: ["Symbol of Mortality +6", "ID_FMP_MAGIC_ITEM_2604"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Symbol of Penitence +2"] = new RulesElement({
    name: "Symbol of Penitence +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2605",
    source: "Adventurer's Vault",
    categories: ["Symbol of Penitence +2", "ID_FMP_MAGIC_ITEM_2605"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Symbol of Penitence +3"] = new RulesElement({
    name: "Symbol of Penitence +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2606",
    source: "Adventurer's Vault",
    categories: ["Symbol of Penitence +3", "ID_FMP_MAGIC_ITEM_2606"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Symbol of Penitence +4"] = new RulesElement({
    name: "Symbol of Penitence +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2607",
    source: "Adventurer's Vault",
    categories: ["Symbol of Penitence +4", "ID_FMP_MAGIC_ITEM_2607"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Symbol of Penitence +5"] = new RulesElement({
    name: "Symbol of Penitence +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2608",
    source: "Adventurer's Vault",
    categories: ["Symbol of Penitence +5", "ID_FMP_MAGIC_ITEM_2608"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Symbol of Penitence +6"] = new RulesElement({
    name: "Symbol of Penitence +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2609",
    source: "Adventurer's Vault",
    categories: ["Symbol of Penitence +6", "ID_FMP_MAGIC_ITEM_2609"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Symbol of Perserverance +2"] = new RulesElement({
    name: "Symbol of Perserverance +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2610",
    source: "Adventurer's Vault",
    categories: ["Symbol of Perserverance +2", "ID_FMP_MAGIC_ITEM_2610"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Symbol of Perserverance +3"] = new RulesElement({
    name: "Symbol of Perserverance +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2611",
    source: "Adventurer's Vault",
    categories: ["Symbol of Perserverance +3", "ID_FMP_MAGIC_ITEM_2611"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Symbol of Perserverance +4"] = new RulesElement({
    name: "Symbol of Perserverance +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2612",
    source: "Adventurer's Vault",
    categories: ["Symbol of Perserverance +4", "ID_FMP_MAGIC_ITEM_2612"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Symbol of Perserverance +5"] = new RulesElement({
    name: "Symbol of Perserverance +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2613",
    source: "Adventurer's Vault",
    categories: ["Symbol of Perserverance +5", "ID_FMP_MAGIC_ITEM_2613"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Symbol of Perserverance +6"] = new RulesElement({
    name: "Symbol of Perserverance +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2614",
    source: "Adventurer's Vault",
    categories: ["Symbol of Perserverance +6", "ID_FMP_MAGIC_ITEM_2614"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Symbol of Radiant Vengeance +5"] = new RulesElement({
    name: "Symbol of Radiant Vengeance +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2615",
    source: "Adventurer's Vault",
    categories: ["Symbol of Radiant Vengeance +5", "ID_FMP_MAGIC_ITEM_2615"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Symbol of Radiant Vengeance +6"] = new RulesElement({
    name: "Symbol of Radiant Vengeance +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2616",
    source: "Adventurer's Vault",
    categories: ["Symbol of Radiant Vengeance +6", "ID_FMP_MAGIC_ITEM_2616"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Symbol of Renewal +3"] = new RulesElement({
    name: "Symbol of Renewal +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2617",
    source: "Adventurer's Vault",
    categories: ["Symbol of Renewal +3", "ID_FMP_MAGIC_ITEM_2617"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Symbol of Renewal +4"] = new RulesElement({
    name: "Symbol of Renewal +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2618",
    source: "Adventurer's Vault",
    categories: ["Symbol of Renewal +4", "ID_FMP_MAGIC_ITEM_2618"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Symbol of Renewal +5"] = new RulesElement({
    name: "Symbol of Renewal +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2619",
    source: "Adventurer's Vault",
    categories: ["Symbol of Renewal +5", "ID_FMP_MAGIC_ITEM_2619"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Symbol of Renewal +6"] = new RulesElement({
    name: "Symbol of Renewal +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2620",
    source: "Adventurer's Vault",
    categories: ["Symbol of Renewal +6", "ID_FMP_MAGIC_ITEM_2620"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Symbol of Reproach +1"] = new RulesElement({
    name: "Symbol of Reproach +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2621",
    source: "Adventurer's Vault",
    categories: ["Symbol of Reproach +1", "ID_FMP_MAGIC_ITEM_2621"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Symbol of Reproach +2"] = new RulesElement({
    name: "Symbol of Reproach +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2622",
    source: "Adventurer's Vault",
    categories: ["Symbol of Reproach +2", "ID_FMP_MAGIC_ITEM_2622"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Symbol of Reproach +3"] = new RulesElement({
    name: "Symbol of Reproach +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2623",
    source: "Adventurer's Vault",
    categories: ["Symbol of Reproach +3", "ID_FMP_MAGIC_ITEM_2623"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Symbol of Reproach +4"] = new RulesElement({
    name: "Symbol of Reproach +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2624",
    source: "Adventurer's Vault",
    categories: ["Symbol of Reproach +4", "ID_FMP_MAGIC_ITEM_2624"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Symbol of Reproach +5"] = new RulesElement({
    name: "Symbol of Reproach +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2625",
    source: "Adventurer's Vault",
    categories: ["Symbol of Reproach +5", "ID_FMP_MAGIC_ITEM_2625"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Symbol of Reproach +6"] = new RulesElement({
    name: "Symbol of Reproach +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2626",
    source: "Adventurer's Vault",
    categories: ["Symbol of Reproach +6", "ID_FMP_MAGIC_ITEM_2626"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Symbol of Resilience +1"] = new RulesElement({
    name: "Symbol of Resilience +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2627",
    source: "Adventurer's Vault",
    categories: ["Symbol of Resilience +1", "ID_FMP_MAGIC_ITEM_2627"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Symbol of Resilience +2"] = new RulesElement({
    name: "Symbol of Resilience +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2628",
    source: "Adventurer's Vault",
    categories: ["Symbol of Resilience +2", "ID_FMP_MAGIC_ITEM_2628"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Symbol of Resilience +3"] = new RulesElement({
    name: "Symbol of Resilience +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2629",
    source: "Adventurer's Vault",
    categories: ["Symbol of Resilience +3", "ID_FMP_MAGIC_ITEM_2629"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Symbol of Resilience +4"] = new RulesElement({
    name: "Symbol of Resilience +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2630",
    source: "Adventurer's Vault",
    categories: ["Symbol of Resilience +4", "ID_FMP_MAGIC_ITEM_2630"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Symbol of Resilience +5"] = new RulesElement({
    name: "Symbol of Resilience +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2631",
    source: "Adventurer's Vault",
    categories: ["Symbol of Resilience +5", "ID_FMP_MAGIC_ITEM_2631"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Symbol of Resilience +6"] = new RulesElement({
    name: "Symbol of Resilience +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2632",
    source: "Adventurer's Vault",
    categories: ["Symbol of Resilience +6", "ID_FMP_MAGIC_ITEM_2632"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Symbol of Revivification (epic tier)"] = new RulesElement({
    name: "Symbol of Revivification (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2633",
    source: "Adventurer's Vault",
    categories: ["Symbol of Revivification (epic tier)", "ID_FMP_MAGIC_ITEM_2633"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Symbol of Sacrifice +4"] = new RulesElement({
    name: "Symbol of Sacrifice +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2634",
    source: "Adventurer's Vault",
    categories: ["Symbol of Sacrifice +4", "ID_FMP_MAGIC_ITEM_2634"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Symbol of Sacrifice +5"] = new RulesElement({
    name: "Symbol of Sacrifice +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2635",
    source: "Adventurer's Vault",
    categories: ["Symbol of Sacrifice +5", "ID_FMP_MAGIC_ITEM_2635"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Symbol of Sacrifice +6"] = new RulesElement({
    name: "Symbol of Sacrifice +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2636",
    source: "Adventurer's Vault",
    categories: ["Symbol of Sacrifice +6", "ID_FMP_MAGIC_ITEM_2636"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Symbol of Shielding +2"] = new RulesElement({
    name: "Symbol of Shielding +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2637",
    source: "Adventurer's Vault",
    categories: ["Symbol of Shielding +2", "ID_FMP_MAGIC_ITEM_2637"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Symbol of Shielding +3"] = new RulesElement({
    name: "Symbol of Shielding +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2638",
    source: "Adventurer's Vault",
    categories: ["Symbol of Shielding +3", "ID_FMP_MAGIC_ITEM_2638"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Symbol of Shielding +4"] = new RulesElement({
    name: "Symbol of Shielding +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2639",
    source: "Adventurer's Vault",
    categories: ["Symbol of Shielding +4", "ID_FMP_MAGIC_ITEM_2639"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Symbol of Shielding +5"] = new RulesElement({
    name: "Symbol of Shielding +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2640",
    source: "Adventurer's Vault",
    categories: ["Symbol of Shielding +5", "ID_FMP_MAGIC_ITEM_2640"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Symbol of Shielding +6"] = new RulesElement({
    name: "Symbol of Shielding +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2641",
    source: "Adventurer's Vault",
    categories: ["Symbol of Shielding +6", "ID_FMP_MAGIC_ITEM_2641"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Symbol of Sustenance +4"] = new RulesElement({
    name: "Symbol of Sustenance +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2642",
    source: "Adventurer's Vault",
    categories: ["Symbol of Sustenance +4", "ID_FMP_MAGIC_ITEM_2642"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Symbol of Sustenance +5"] = new RulesElement({
    name: "Symbol of Sustenance +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2643",
    source: "Adventurer's Vault",
    categories: ["Symbol of Sustenance +5", "ID_FMP_MAGIC_ITEM_2643"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Symbol of Sustenance +6"] = new RulesElement({
    name: "Symbol of Sustenance +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2644",
    source: "Adventurer's Vault",
    categories: ["Symbol of Sustenance +6", "ID_FMP_MAGIC_ITEM_2644"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Symbol of the Warpriest +3"] = new RulesElement({
    name: "Symbol of the Warpriest +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2645",
    source: "Adventurer's Vault",
    categories: ["Symbol of the Warpriest +3", "ID_FMP_MAGIC_ITEM_2645"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Symbol of the Warpriest +4"] = new RulesElement({
    name: "Symbol of the Warpriest +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2646",
    source: "Adventurer's Vault",
    categories: ["Symbol of the Warpriest +4", "ID_FMP_MAGIC_ITEM_2646"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Symbol of the Warpriest +5"] = new RulesElement({
    name: "Symbol of the Warpriest +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2647",
    source: "Adventurer's Vault",
    categories: ["Symbol of the Warpriest +5", "ID_FMP_MAGIC_ITEM_2647"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Symbol of the Warpriest +6"] = new RulesElement({
    name: "Symbol of the Warpriest +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2648",
    source: "Adventurer's Vault",
    categories: ["Symbol of the Warpriest +6", "ID_FMP_MAGIC_ITEM_2648"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Symbol of Vengeance +1"] = new RulesElement({
    name: "Symbol of Vengeance +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2649",
    source: "Adventurer's Vault",
    categories: ["Symbol of Vengeance +1", "ID_FMP_MAGIC_ITEM_2649"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Symbol of Vengeance +2"] = new RulesElement({
    name: "Symbol of Vengeance +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2650",
    source: "Adventurer's Vault",
    categories: ["Symbol of Vengeance +2", "ID_FMP_MAGIC_ITEM_2650"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Symbol of Vengeance +3"] = new RulesElement({
    name: "Symbol of Vengeance +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2651",
    source: "Adventurer's Vault",
    categories: ["Symbol of Vengeance +3", "ID_FMP_MAGIC_ITEM_2651"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Symbol of Vengeance +4"] = new RulesElement({
    name: "Symbol of Vengeance +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2652",
    source: "Adventurer's Vault",
    categories: ["Symbol of Vengeance +4", "ID_FMP_MAGIC_ITEM_2652"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Symbol of Vengeance +5"] = new RulesElement({
    name: "Symbol of Vengeance +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2653",
    source: "Adventurer's Vault",
    categories: ["Symbol of Vengeance +5", "ID_FMP_MAGIC_ITEM_2653"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Symbol of Vengeance +6"] = new RulesElement({
    name: "Symbol of Vengeance +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2654",
    source: "Adventurer's Vault",
    categories: ["Symbol of Vengeance +6", "ID_FMP_MAGIC_ITEM_2654"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Tactician's Armor +1"] = new RulesElement({
    name: "Tactician's Armor +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1857",
    source: "Adventurer's Vault",
    categories: ["Tactician's Armor +1", "ID_FMP_MAGIC_ITEM_1857"],
    rules: function(model) {
      model.statadd("Intelligence:damage", 1);
      model.statadd("Armor Class", 1, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 1);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Tactician's Armor +2"] = new RulesElement({
    name: "Tactician's Armor +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1858",
    source: "Adventurer's Vault",
    categories: ["Tactician's Armor +2", "ID_FMP_MAGIC_ITEM_1858"],
    rules: function(model) {
      model.statadd("Intelligence:damage", 1);
      model.statadd("Armor Class", 2, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 2);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Tactician's Armor +3"] = new RulesElement({
    name: "Tactician's Armor +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1859",
    source: "Adventurer's Vault",
    categories: ["Tactician's Armor +3", "ID_FMP_MAGIC_ITEM_1859"],
    rules: function(model) {
      model.statadd("Intelligence:damage", 1);
      model.statadd("Armor Class", 3, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 3);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Tactician's Armor +4"] = new RulesElement({
    name: "Tactician's Armor +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1860",
    source: "Adventurer's Vault",
    categories: ["Tactician's Armor +4", "ID_FMP_MAGIC_ITEM_1860"],
    rules: function(model) {
      model.statadd("Intelligence:damage", 1);
      model.statadd("Armor Class", 4, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 4);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Tactician's Armor +5"] = new RulesElement({
    name: "Tactician's Armor +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1861",
    source: "Adventurer's Vault",
    categories: ["Tactician's Armor +5", "ID_FMP_MAGIC_ITEM_1861"],
    rules: function(model) {
      model.statadd("Intelligence:damage", 1);
      model.statadd("Armor Class", 5, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 5);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Tactician's Armor +6"] = new RulesElement({
    name: "Tactician's Armor +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1862",
    source: "Adventurer's Vault",
    categories: ["Tactician's Armor +6", "ID_FMP_MAGIC_ITEM_1862"],
    rules: function(model) {
      model.statadd("Intelligence:damage", 1);
      model.statadd("Armor Class", 6, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 6);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Talisman of Fortune (paragon tier)"] = new RulesElement({
    name: "Talisman of Fortune (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3897",
    source: "Adventurer's Vault",
    categories: ["Talisman of Fortune (paragon tier)", "ID_FMP_MAGIC_ITEM_3897"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Talisman of Repulsion +6"] = new RulesElement({
    name: "Talisman of Repulsion +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3711",
    source: "Adventurer's Vault",
    categories: ["Talisman of Repulsion +6", "ID_FMP_MAGIC_ITEM_3711"],
    rules: function(model) {
      model.statadd("Fortitude Defense", 6, "Enhancement");
      model.statadd("Reflex Defense", 6, "Enhancement");
      model.statadd("Will Defense", 6, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Tanglefoot Bag (level 12)"] = new RulesElement({
    name: "Tanglefoot Bag (level 12)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1410",
    source: "Adventurer's Vault",
    categories: ["Tanglefoot Bag (level 12)", "ID_FMP_MAGIC_ITEM_1410"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Tanglefoot Bag (level 17)"] = new RulesElement({
    name: "Tanglefoot Bag (level 17)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1411",
    source: "Adventurer's Vault",
    categories: ["Tanglefoot Bag (level 17)", "ID_FMP_MAGIC_ITEM_1411"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Tanglefoot Bag (level 2)"] = new RulesElement({
    name: "Tanglefoot Bag (level 2)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1408",
    source: "Adventurer's Vault",
    categories: ["Tanglefoot Bag (level 2)", "ID_FMP_MAGIC_ITEM_1408"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Tanglefoot Bag (level 22)"] = new RulesElement({
    name: "Tanglefoot Bag (level 22)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1412",
    source: "Adventurer's Vault",
    categories: ["Tanglefoot Bag (level 22)", "ID_FMP_MAGIC_ITEM_1412"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Tanglefoot Bag (level 27)"] = new RulesElement({
    name: "Tanglefoot Bag (level 27)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1413",
    source: "Adventurer's Vault",
    categories: ["Tanglefoot Bag (level 27)", "ID_FMP_MAGIC_ITEM_1413"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Tanglefoot Bag (level 7)"] = new RulesElement({
    name: "Tanglefoot Bag (level 7)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1409",
    source: "Adventurer's Vault",
    categories: ["Tanglefoot Bag (level 7)", "ID_FMP_MAGIC_ITEM_1409"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Tattered Cloak +4"] = new RulesElement({
    name: "Tattered Cloak +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3712",
    source: "Adventurer's Vault",
    categories: ["Tattered Cloak +4", "ID_FMP_MAGIC_ITEM_3712"],
    rules: function(model) {
      model.statadd("Fortitude Defense", 4, "Enhancement");
      model.statadd("Reflex Defense", 4, "Enhancement");
      model.statadd("Will Defense", 4, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Tattered Cloak +5"] = new RulesElement({
    name: "Tattered Cloak +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3713",
    source: "Adventurer's Vault",
    categories: ["Tattered Cloak +5", "ID_FMP_MAGIC_ITEM_3713"],
    rules: function(model) {
      model.statadd("Fortitude Defense", 5, "Enhancement");
      model.statadd("Reflex Defense", 5, "Enhancement");
      model.statadd("Will Defense", 5, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Tattered Cloak +6"] = new RulesElement({
    name: "Tattered Cloak +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3714",
    source: "Adventurer's Vault",
    categories: ["Tattered Cloak +6", "ID_FMP_MAGIC_ITEM_3714"],
    rules: function(model) {
      model.statadd("Fortitude Defense", 6, "Enhancement");
      model.statadd("Reflex Defense", 6, "Enhancement");
      model.statadd("Will Defense", 6, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Tauran Shield (paragon tier)"] = new RulesElement({
    name: "Tauran Shield (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3285",
    source: "Adventurer's Vault",
    categories: ["Tauran Shield (paragon tier)", "ID_FMP_MAGIC_ITEM_3285"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Telepathy Circlet (epic tier)"] = new RulesElement({
    name: "Telepathy Circlet (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3508",
    source: "Adventurer's Vault",
    categories: ["Telepathy Circlet (epic tier)", "ID_FMP_MAGIC_ITEM_3508"],
    rules: function(model) {
      model.statadd("Insight Misc", 2, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Tempest Whetstone (epic tier)"] = new RulesElement({
    name: "Tempest Whetstone (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_4028",
    source: "Adventurer's Vault",
    categories: ["Tempest Whetstone (epic tier)", "ID_FMP_MAGIC_ITEM_4028"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Tempest Whetstone (heroic tier)"] = new RulesElement({
    name: "Tempest Whetstone (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_4026",
    source: "Adventurer's Vault",
    categories: ["Tempest Whetstone (heroic tier)", "ID_FMP_MAGIC_ITEM_4026"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Tempest Whetstone (paragon tier)"] = new RulesElement({
    name: "Tempest Whetstone (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_4027",
    source: "Adventurer's Vault",
    categories: ["Tempest Whetstone (paragon tier)", "ID_FMP_MAGIC_ITEM_4027"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Tenacious Weapon +4"] = new RulesElement({
    name: "Tenacious Weapon +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2407",
    source: "Adventurer's Vault",
    categories: ["Tenacious Weapon +4", "ID_FMP_MAGIC_ITEM_2407"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Tenacious Weapon +5"] = new RulesElement({
    name: "Tenacious Weapon +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2408",
    source: "Adventurer's Vault",
    categories: ["Tenacious Weapon +5", "ID_FMP_MAGIC_ITEM_2408"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Tenacious Weapon +6"] = new RulesElement({
    name: "Tenacious Weapon +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2409",
    source: "Adventurer's Vault",
    categories: ["Tenacious Weapon +6", "ID_FMP_MAGIC_ITEM_2409"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Terror Ichor (epic tier)"] = new RulesElement({
    name: "Terror Ichor (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_4078",
    source: "Adventurer's Vault",
    categories: ["Terror Ichor (epic tier)", "ID_FMP_MAGIC_ITEM_4078"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Terror Ichor (heroic tier)"] = new RulesElement({
    name: "Terror Ichor (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_4076",
    source: "Adventurer's Vault",
    categories: ["Terror Ichor (heroic tier)", "ID_FMP_MAGIC_ITEM_4076"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Terror Ichor (paragon tier)"] = new RulesElement({
    name: "Terror Ichor (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_4077",
    source: "Adventurer's Vault",
    categories: ["Terror Ichor (paragon tier)", "ID_FMP_MAGIC_ITEM_4077"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Thieving Weapon +1"] = new RulesElement({
    name: "Thieving Weapon +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2410",
    source: "Adventurer's Vault",
    categories: ["Thieving Weapon +1", "ID_FMP_MAGIC_ITEM_2410"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Thieving Weapon +2"] = new RulesElement({
    name: "Thieving Weapon +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2411",
    source: "Adventurer's Vault",
    categories: ["Thieving Weapon +2", "ID_FMP_MAGIC_ITEM_2411"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Thieving Weapon +3"] = new RulesElement({
    name: "Thieving Weapon +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2412",
    source: "Adventurer's Vault",
    categories: ["Thieving Weapon +3", "ID_FMP_MAGIC_ITEM_2412"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Thieving Weapon +4"] = new RulesElement({
    name: "Thieving Weapon +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2413",
    source: "Adventurer's Vault",
    categories: ["Thieving Weapon +4", "ID_FMP_MAGIC_ITEM_2413"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Thieving Weapon +5"] = new RulesElement({
    name: "Thieving Weapon +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2414",
    source: "Adventurer's Vault",
    categories: ["Thieving Weapon +5", "ID_FMP_MAGIC_ITEM_2414"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Thieving Weapon +6"] = new RulesElement({
    name: "Thieving Weapon +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2415",
    source: "Adventurer's Vault",
    categories: ["Thieving Weapon +6", "ID_FMP_MAGIC_ITEM_2415"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Thornwalker Slippers (paragon tier)"] = new RulesElement({
    name: "Thornwalker Slippers (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3354",
    source: "Adventurer's Vault",
    categories: ["Thornwalker Slippers (paragon tier)", "ID_FMP_MAGIC_ITEM_3354"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Thoughtstealer Weapon +2"] = new RulesElement({
    name: "Thoughtstealer Weapon +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2416",
    source: "Adventurer's Vault",
    categories: ["Thoughtstealer Weapon +2", "ID_FMP_MAGIC_ITEM_2416"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Thoughtstealer Weapon +3"] = new RulesElement({
    name: "Thoughtstealer Weapon +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2417",
    source: "Adventurer's Vault",
    categories: ["Thoughtstealer Weapon +3", "ID_FMP_MAGIC_ITEM_2417"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Thoughtstealer Weapon +4"] = new RulesElement({
    name: "Thoughtstealer Weapon +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2418",
    source: "Adventurer's Vault",
    categories: ["Thoughtstealer Weapon +4", "ID_FMP_MAGIC_ITEM_2418"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Thoughtstealer Weapon +5"] = new RulesElement({
    name: "Thoughtstealer Weapon +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2419",
    source: "Adventurer's Vault",
    categories: ["Thoughtstealer Weapon +5", "ID_FMP_MAGIC_ITEM_2419"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Thoughtstealer Weapon +6"] = new RulesElement({
    name: "Thoughtstealer Weapon +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2420",
    source: "Adventurer's Vault",
    categories: ["Thoughtstealer Weapon +6", "ID_FMP_MAGIC_ITEM_2420"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Throwing Shield (epic tier)"] = new RulesElement({
    name: "Throwing Shield (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3288",
    source: "Adventurer's Vault",
    categories: ["Throwing Shield (epic tier)", "ID_FMP_MAGIC_ITEM_3288"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Throwing Shield (heroic tier)"] = new RulesElement({
    name: "Throwing Shield (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3286",
    source: "Adventurer's Vault",
    categories: ["Throwing Shield (heroic tier)", "ID_FMP_MAGIC_ITEM_3286"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Throwing Shield (paragon tier)"] = new RulesElement({
    name: "Throwing Shield (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3287",
    source: "Adventurer's Vault",
    categories: ["Throwing Shield (paragon tier)", "ID_FMP_MAGIC_ITEM_3287"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Thunder Wand +1"] = new RulesElement({
    name: "Thunder Wand +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3116",
    source: "Adventurer's Vault",
    categories: ["Thunder Wand +1", "ID_FMP_MAGIC_ITEM_3116"],
    rules: function(model) {
      model.statadd("thunder:damage", 1, "item");
      model.grant(elements.id["ID_FMP_POWER_1169"]);
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Thunder Wand +2"] = new RulesElement({
    name: "Thunder Wand +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3117",
    source: "Adventurer's Vault",
    categories: ["Thunder Wand +2", "ID_FMP_MAGIC_ITEM_3117"],
    rules: function(model) {
      model.statadd("thunder:damage", 1, "item");
      model.grant(elements.id["ID_FMP_POWER_1169"]);
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Thunder Wand +3"] = new RulesElement({
    name: "Thunder Wand +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3118",
    source: "Adventurer's Vault",
    categories: ["Thunder Wand +3", "ID_FMP_MAGIC_ITEM_3118"],
    rules: function(model) {
      model.statadd("thunder:damage", 2, "item");
      model.grant(elements.id["ID_FMP_POWER_1169"]);
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Thunder Wand +4"] = new RulesElement({
    name: "Thunder Wand +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3119",
    source: "Adventurer's Vault",
    categories: ["Thunder Wand +4", "ID_FMP_MAGIC_ITEM_3119"],
    rules: function(model) {
      model.statadd("thunder:damage", 2, "item");
      model.grant(elements.id["ID_FMP_POWER_1169"]);
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Thunder Wand +5"] = new RulesElement({
    name: "Thunder Wand +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3120",
    source: "Adventurer's Vault",
    categories: ["Thunder Wand +5", "ID_FMP_MAGIC_ITEM_3120"],
    rules: function(model) {
      model.statadd("thunder:damage", 3, "item");
      model.grant(elements.id["ID_FMP_POWER_1169"]);
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Thunder Wand +6"] = new RulesElement({
    name: "Thunder Wand +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3121",
    source: "Adventurer's Vault",
    categories: ["Thunder Wand +6", "ID_FMP_MAGIC_ITEM_3121"],
    rules: function(model) {
      model.statadd("thunder:damage", 3, "item");
      model.grant(elements.id["ID_FMP_POWER_1169"]);
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Thunderbolt Weapon +3"] = new RulesElement({
    name: "Thunderbolt Weapon +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2421",
    source: "Adventurer's Vault",
    categories: ["Thunderbolt Weapon +3", "ID_FMP_MAGIC_ITEM_2421"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Thunderbolt Weapon +4"] = new RulesElement({
    name: "Thunderbolt Weapon +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2422",
    source: "Adventurer's Vault",
    categories: ["Thunderbolt Weapon +4", "ID_FMP_MAGIC_ITEM_2422"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Thunderbolt Weapon +5"] = new RulesElement({
    name: "Thunderbolt Weapon +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2423",
    source: "Adventurer's Vault",
    categories: ["Thunderbolt Weapon +5", "ID_FMP_MAGIC_ITEM_2423"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Thunderbolt Weapon +6"] = new RulesElement({
    name: "Thunderbolt Weapon +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2424",
    source: "Adventurer's Vault",
    categories: ["Thunderbolt Weapon +6", "ID_FMP_MAGIC_ITEM_2424"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Thundergod Weapon +3"] = new RulesElement({
    name: "Thundergod Weapon +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2425",
    source: "Adventurer's Vault",
    categories: ["Thundergod Weapon +3", "ID_FMP_MAGIC_ITEM_2425"],
    rules: function(model) {
      model.statadd("Damage", "+1d6");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Thundergod Weapon +4"] = new RulesElement({
    name: "Thundergod Weapon +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2426",
    source: "Adventurer's Vault",
    categories: ["Thundergod Weapon +4", "ID_FMP_MAGIC_ITEM_2426"],
    rules: function(model) {
      model.statadd("Damage", "+1d6");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Thundergod Weapon +5"] = new RulesElement({
    name: "Thundergod Weapon +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2427",
    source: "Adventurer's Vault",
    categories: ["Thundergod Weapon +5", "ID_FMP_MAGIC_ITEM_2427"],
    rules: function(model) {
      model.statadd("Damage", "+2d6");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Thundergod Weapon +6"] = new RulesElement({
    name: "Thundergod Weapon +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2428",
    source: "Adventurer's Vault",
    categories: ["Thundergod Weapon +6", "ID_FMP_MAGIC_ITEM_2428"],
    rules: function(model) {
      model.statadd("Damage", "+2d6");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Thunderhead Armor +2"] = new RulesElement({
    name: "Thunderhead Armor +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1863",
    source: "Adventurer's Vault",
    categories: ["Thunderhead Armor +2", "ID_FMP_MAGIC_ITEM_1863"],
    rules: function(model) {
      model.statadd("Armor Class", 2, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 2);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Thunderhead Armor +3"] = new RulesElement({
    name: "Thunderhead Armor +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1864",
    source: "Adventurer's Vault",
    categories: ["Thunderhead Armor +3", "ID_FMP_MAGIC_ITEM_1864"],
    rules: function(model) {
      model.statadd("Armor Class", 3, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 3);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Thunderhead Armor +4"] = new RulesElement({
    name: "Thunderhead Armor +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1865",
    source: "Adventurer's Vault",
    categories: ["Thunderhead Armor +4", "ID_FMP_MAGIC_ITEM_1865"],
    rules: function(model) {
      model.statadd("Armor Class", 4, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 4);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Thunderhead Armor +5"] = new RulesElement({
    name: "Thunderhead Armor +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1866",
    source: "Adventurer's Vault",
    categories: ["Thunderhead Armor +5", "ID_FMP_MAGIC_ITEM_1866"],
    rules: function(model) {
      model.statadd("Armor Class", 5, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 5);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Thunderhead Armor +6"] = new RulesElement({
    name: "Thunderhead Armor +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1867",
    source: "Adventurer's Vault",
    categories: ["Thunderhead Armor +6", "ID_FMP_MAGIC_ITEM_1867"],
    rules: function(model) {
      model.statadd("Armor Class", 6, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 6);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Thunderstone (level 10)"] = new RulesElement({
    name: "Thunderstone (level 10)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1415",
    source: "Adventurer's Vault",
    categories: ["Thunderstone (level 10)", "ID_FMP_MAGIC_ITEM_1415"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Thunderstone (level 15)"] = new RulesElement({
    name: "Thunderstone (level 15)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1416",
    source: "Adventurer's Vault",
    categories: ["Thunderstone (level 15)", "ID_FMP_MAGIC_ITEM_1416"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Thunderstone (level 20)"] = new RulesElement({
    name: "Thunderstone (level 20)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1417",
    source: "Adventurer's Vault",
    categories: ["Thunderstone (level 20)", "ID_FMP_MAGIC_ITEM_1417"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Thunderstone (level 25)"] = new RulesElement({
    name: "Thunderstone (level 25)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1418",
    source: "Adventurer's Vault",
    categories: ["Thunderstone (level 25)", "ID_FMP_MAGIC_ITEM_1418"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Thunderstone (level 30)"] = new RulesElement({
    name: "Thunderstone (level 30)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1419",
    source: "Adventurer's Vault",
    categories: ["Thunderstone (level 30)", "ID_FMP_MAGIC_ITEM_1419"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Thunderstone (level 5)"] = new RulesElement({
    name: "Thunderstone (level 5)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1414",
    source: "Adventurer's Vault",
    categories: ["Thunderstone (level 5)", "ID_FMP_MAGIC_ITEM_1414"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Tigerclaw Gauntlets +2"] = new RulesElement({
    name: "Tigerclaw Gauntlets +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2429",
    source: "Adventurer's Vault",
    categories: ["Tigerclaw Gauntlets +2", "ID_FMP_MAGIC_ITEM_2429"],
    rules: function(model) {
      model.statadd("Speed", function() { /* when charging */ return 2; }, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Tigerclaw Gauntlets +3"] = new RulesElement({
    name: "Tigerclaw Gauntlets +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2430",
    source: "Adventurer's Vault",
    categories: ["Tigerclaw Gauntlets +3", "ID_FMP_MAGIC_ITEM_2430"],
    rules: function(model) {
      model.statadd("Speed", function() { /* when charging */ return 2; }, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Tigerclaw Gauntlets +4"] = new RulesElement({
    name: "Tigerclaw Gauntlets +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2431",
    source: "Adventurer's Vault",
    categories: ["Tigerclaw Gauntlets +4", "ID_FMP_MAGIC_ITEM_2431"],
    rules: function(model) {
      model.statadd("Speed", function() { /* when charging */ return 2; }, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Tigerclaw Gauntlets +5"] = new RulesElement({
    name: "Tigerclaw Gauntlets +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2432",
    source: "Adventurer's Vault",
    categories: ["Tigerclaw Gauntlets +5", "ID_FMP_MAGIC_ITEM_2432"],
    rules: function(model) {
      model.statadd("Speed", function() { /* when charging */ return 2; }, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Tigerclaw Gauntlets +6"] = new RulesElement({
    name: "Tigerclaw Gauntlets +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2433",
    source: "Adventurer's Vault",
    categories: ["Tigerclaw Gauntlets +6", "ID_FMP_MAGIC_ITEM_2433"],
    rules: function(model) {
      model.statadd("Speed", function() { /* when charging */ return 2; }, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Torc of Power Preservation +3"] = new RulesElement({
    name: "Torc of Power Preservation +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3715",
    source: "Adventurer's Vault",
    categories: ["Torc of Power Preservation +3", "ID_FMP_MAGIC_ITEM_3715"],
    rules: function(model) {
      model.statadd("Fortitude Defense", 3, "Enhancement");
      model.statadd("Reflex Defense", 3, "Enhancement");
      model.statadd("Will Defense", 3, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Torc of Power Preservation +4"] = new RulesElement({
    name: "Torc of Power Preservation +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3716",
    source: "Adventurer's Vault",
    categories: ["Torc of Power Preservation +4", "ID_FMP_MAGIC_ITEM_3716"],
    rules: function(model) {
      model.statadd("Fortitude Defense", 4, "Enhancement");
      model.statadd("Reflex Defense", 4, "Enhancement");
      model.statadd("Will Defense", 4, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Torc of Power Preservation +5"] = new RulesElement({
    name: "Torc of Power Preservation +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3717",
    source: "Adventurer's Vault",
    categories: ["Torc of Power Preservation +5", "ID_FMP_MAGIC_ITEM_3717"],
    rules: function(model) {
      model.statadd("Fortitude Defense", 5, "Enhancement");
      model.statadd("Reflex Defense", 5, "Enhancement");
      model.statadd("Will Defense", 5, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Torc of Power Preservation +6"] = new RulesElement({
    name: "Torc of Power Preservation +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3718",
    source: "Adventurer's Vault",
    categories: ["Torc of Power Preservation +6", "ID_FMP_MAGIC_ITEM_3718"],
    rules: function(model) {
      model.statadd("Fortitude Defense", 6, "Enhancement");
      model.statadd("Reflex Defense", 6, "Enhancement");
      model.statadd("Will Defense", 6, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Totemic Belt (paragon tier)"] = new RulesElement({
    name: "Totemic Belt (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3823",
    source: "Adventurer's Vault",
    categories: ["Totemic Belt (paragon tier)", "ID_FMP_MAGIC_ITEM_3823"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Tracking Dust (level 14)"] = new RulesElement({
    name: "Tracking Dust (level 14)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1422",
    source: "Adventurer's Vault",
    categories: ["Tracking Dust (level 14)", "ID_FMP_MAGIC_ITEM_1422"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Tracking Dust (level 19)"] = new RulesElement({
    name: "Tracking Dust (level 19)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1423",
    source: "Adventurer's Vault",
    categories: ["Tracking Dust (level 19)", "ID_FMP_MAGIC_ITEM_1423"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Tracking Dust (level 24)"] = new RulesElement({
    name: "Tracking Dust (level 24)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1424",
    source: "Adventurer's Vault",
    categories: ["Tracking Dust (level 24)", "ID_FMP_MAGIC_ITEM_1424"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Tracking Dust (level 29)"] = new RulesElement({
    name: "Tracking Dust (level 29)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1425",
    source: "Adventurer's Vault",
    categories: ["Tracking Dust (level 29)", "ID_FMP_MAGIC_ITEM_1425"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Tracking Dust (level 4)"] = new RulesElement({
    name: "Tracking Dust (level 4)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1420",
    source: "Adventurer's Vault",
    categories: ["Tracking Dust (level 4)", "ID_FMP_MAGIC_ITEM_1420"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Tracking Dust (level 9)"] = new RulesElement({
    name: "Tracking Dust (level 9)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1421",
    source: "Adventurer's Vault",
    categories: ["Tracking Dust (level 9)", "ID_FMP_MAGIC_ITEM_1421"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Transference Weapon +2"] = new RulesElement({
    name: "Transference Weapon +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2434",
    source: "Adventurer's Vault",
    categories: ["Transference Weapon +2", "ID_FMP_MAGIC_ITEM_2434"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Transference Weapon +3"] = new RulesElement({
    name: "Transference Weapon +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2435",
    source: "Adventurer's Vault",
    categories: ["Transference Weapon +3", "ID_FMP_MAGIC_ITEM_2435"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Transference Weapon +4"] = new RulesElement({
    name: "Transference Weapon +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2436",
    source: "Adventurer's Vault",
    categories: ["Transference Weapon +4", "ID_FMP_MAGIC_ITEM_2436"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Transference Weapon +5"] = new RulesElement({
    name: "Transference Weapon +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2437",
    source: "Adventurer's Vault",
    categories: ["Transference Weapon +5", "ID_FMP_MAGIC_ITEM_2437"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Transference Weapon +6"] = new RulesElement({
    name: "Transference Weapon +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2438",
    source: "Adventurer's Vault",
    categories: ["Transference Weapon +6", "ID_FMP_MAGIC_ITEM_2438"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Transposing Weapon +3"] = new RulesElement({
    name: "Transposing Weapon +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2439",
    source: "Adventurer's Vault",
    categories: ["Transposing Weapon +3", "ID_FMP_MAGIC_ITEM_2439"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Transposing Weapon +4"] = new RulesElement({
    name: "Transposing Weapon +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2440",
    source: "Adventurer's Vault",
    categories: ["Transposing Weapon +4", "ID_FMP_MAGIC_ITEM_2440"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Transposing Weapon +5"] = new RulesElement({
    name: "Transposing Weapon +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2441",
    source: "Adventurer's Vault",
    categories: ["Transposing Weapon +5", "ID_FMP_MAGIC_ITEM_2441"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Transposing Weapon +6"] = new RulesElement({
    name: "Transposing Weapon +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2442",
    source: "Adventurer's Vault",
    categories: ["Transposing Weapon +6", "ID_FMP_MAGIC_ITEM_2442"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Transposition Harness (epic tier)"] = new RulesElement({
    name: "Transposition Harness (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3971",
    source: "Adventurer's Vault",
    categories: ["Transposition Harness (epic tier)", "ID_FMP_MAGIC_ITEM_3971"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Transposition Harness (paragon tier)"] = new RulesElement({
    name: "Transposition Harness (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3970",
    source: "Adventurer's Vault",
    categories: ["Transposition Harness (paragon tier)", "ID_FMP_MAGIC_ITEM_3970"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Trauma Shield (epic tier)"] = new RulesElement({
    name: "Trauma Shield (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3290",
    source: "Adventurer's Vault",
    categories: ["Trauma Shield (epic tier)", "ID_FMP_MAGIC_ITEM_3290"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Trauma Shield (heroic tier)"] = new RulesElement({
    name: "Trauma Shield (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3289",
    source: "Adventurer's Vault",
    categories: ["Trauma Shield (heroic tier)", "ID_FMP_MAGIC_ITEM_3289"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Trespasser's Bane Weapon +5"] = new RulesElement({
    name: "Trespasser's Bane Weapon +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2443",
    source: "Adventurer's Vault",
    categories: ["Trespasser's Bane Weapon +5", "ID_FMP_MAGIC_ITEM_2443"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Trespasser's Bane Weapon +6"] = new RulesElement({
    name: "Trespasser's Bane Weapon +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2444",
    source: "Adventurer's Vault",
    categories: ["Trespasser's Bane Weapon +6", "ID_FMP_MAGIC_ITEM_2444"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Trickster's Mask (paragon tier)"] = new RulesElement({
    name: "Trickster's Mask (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3509",
    source: "Adventurer's Vault",
    categories: ["Trickster's Mask (paragon tier)", "ID_FMP_MAGIC_ITEM_3509"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Trollhide Bracers (epic tier)"] = new RulesElement({
    name: "Trollhide Bracers (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3292",
    source: "Adventurer's Vault",
    categories: ["Trollhide Bracers (epic tier)", "ID_FMP_MAGIC_ITEM_3292"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Trollhide Bracers (paragon tier)"] = new RulesElement({
    name: "Trollhide Bracers (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3291",
    source: "Adventurer's Vault",
    categories: ["Trollhide Bracers (paragon tier)", "ID_FMP_MAGIC_ITEM_3291"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Tumbler's Shoes (paragon tier)"] = new RulesElement({
    name: "Tumbler's Shoes (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3355",
    source: "Adventurer's Vault",
    categories: ["Tumbler's Shoes (paragon tier)", "ID_FMP_MAGIC_ITEM_3355"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Tyrant's Weapon +2"] = new RulesElement({
    name: "Tyrant's Weapon +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2445",
    source: "Adventurer's Vault",
    categories: ["Tyrant's Weapon +2", "ID_FMP_MAGIC_ITEM_2445"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Tyrant's Weapon +3"] = new RulesElement({
    name: "Tyrant's Weapon +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2446",
    source: "Adventurer's Vault",
    categories: ["Tyrant's Weapon +3", "ID_FMP_MAGIC_ITEM_2446"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Tyrant's Weapon +4"] = new RulesElement({
    name: "Tyrant's Weapon +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2447",
    source: "Adventurer's Vault",
    categories: ["Tyrant's Weapon +4", "ID_FMP_MAGIC_ITEM_2447"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Tyrant's Weapon +5"] = new RulesElement({
    name: "Tyrant's Weapon +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2448",
    source: "Adventurer's Vault",
    categories: ["Tyrant's Weapon +5", "ID_FMP_MAGIC_ITEM_2448"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Tyrant's Weapon +6"] = new RulesElement({
    name: "Tyrant's Weapon +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2449",
    source: "Adventurer's Vault",
    categories: ["Tyrant's Weapon +6", "ID_FMP_MAGIC_ITEM_2449"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Unfettered Thieves' Tools (paragon tier)"] = new RulesElement({
    name: "Unfettered Thieves' Tools (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3898",
    source: "Adventurer's Vault",
    categories: ["Unfettered Thieves' Tools (paragon tier)", "ID_FMP_MAGIC_ITEM_3898"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Unguent of Blindsight (epic tier)"] = new RulesElement({
    name: "Unguent of Blindsight (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_4043",
    source: "Adventurer's Vault",
    categories: ["Unguent of Blindsight (epic tier)", "ID_FMP_MAGIC_ITEM_4043"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Unguent of Darkvision (paragon tier)"] = new RulesElement({
    name: "Unguent of Darkvision (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_4044",
    source: "Adventurer's Vault",
    categories: ["Unguent of Darkvision (paragon tier)", "ID_FMP_MAGIC_ITEM_4044"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Universal Solvent (heroic tier)"] = new RulesElement({
    name: "Universal Solvent (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1426",
    source: "Adventurer's Vault",
    categories: ["Universal Solvent (heroic tier)", "ID_FMP_MAGIC_ITEM_1426"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Utility Staff +1"] = new RulesElement({
    name: "Utility Staff +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3025",
    source: "Adventurer's Vault",
    categories: ["Utility Staff +1", "ID_FMP_MAGIC_ITEM_3025"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Utility Staff +2"] = new RulesElement({
    name: "Utility Staff +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3026",
    source: "Adventurer's Vault",
    categories: ["Utility Staff +2", "ID_FMP_MAGIC_ITEM_3026"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Utility Staff +3"] = new RulesElement({
    name: "Utility Staff +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3027",
    source: "Adventurer's Vault",
    categories: ["Utility Staff +3", "ID_FMP_MAGIC_ITEM_3027"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Utility Staff +4"] = new RulesElement({
    name: "Utility Staff +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3028",
    source: "Adventurer's Vault",
    categories: ["Utility Staff +4", "ID_FMP_MAGIC_ITEM_3028"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Utility Staff +5"] = new RulesElement({
    name: "Utility Staff +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3029",
    source: "Adventurer's Vault",
    categories: ["Utility Staff +5", "ID_FMP_MAGIC_ITEM_3029"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Utility Staff +6"] = new RulesElement({
    name: "Utility Staff +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3030",
    source: "Adventurer's Vault",
    categories: ["Utility Staff +6", "ID_FMP_MAGIC_ITEM_3030"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Vampiric Gauntlets (paragon tier)"] = new RulesElement({
    name: "Vampiric Gauntlets (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3415",
    source: "Adventurer's Vault",
    categories: ["Vampiric Gauntlets (paragon tier)", "ID_FMP_MAGIC_ITEM_3415"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Vampiric Weapon +2"] = new RulesElement({
    name: "Vampiric Weapon +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2450",
    source: "Adventurer's Vault",
    categories: ["Vampiric Weapon +2", "ID_FMP_MAGIC_ITEM_2450"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Vampiric Weapon +3"] = new RulesElement({
    name: "Vampiric Weapon +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2451",
    source: "Adventurer's Vault",
    categories: ["Vampiric Weapon +3", "ID_FMP_MAGIC_ITEM_2451"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Vampiric Weapon +4"] = new RulesElement({
    name: "Vampiric Weapon +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2452",
    source: "Adventurer's Vault",
    categories: ["Vampiric Weapon +4", "ID_FMP_MAGIC_ITEM_2452"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Vampiric Weapon +5"] = new RulesElement({
    name: "Vampiric Weapon +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2453",
    source: "Adventurer's Vault",
    categories: ["Vampiric Weapon +5", "ID_FMP_MAGIC_ITEM_2453"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Vampiric Weapon +6"] = new RulesElement({
    name: "Vampiric Weapon +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2454",
    source: "Adventurer's Vault",
    categories: ["Vampiric Weapon +6", "ID_FMP_MAGIC_ITEM_2454"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Vanguard Weapon +1"] = new RulesElement({
    name: "Vanguard Weapon +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2455",
    source: "Adventurer's Vault",
    categories: ["Vanguard Weapon +1", "ID_FMP_MAGIC_ITEM_2455"],
    rules: function(model) {
      model.statadd("Damage", "+1d8");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Vanguard Weapon +2"] = new RulesElement({
    name: "Vanguard Weapon +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2456",
    source: "Adventurer's Vault",
    categories: ["Vanguard Weapon +2", "ID_FMP_MAGIC_ITEM_2456"],
    rules: function(model) {
      model.statadd("Damage", "+1d8");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Vanguard Weapon +3"] = new RulesElement({
    name: "Vanguard Weapon +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2457",
    source: "Adventurer's Vault",
    categories: ["Vanguard Weapon +3", "ID_FMP_MAGIC_ITEM_2457"],
    rules: function(model) {
      model.statadd("Damage", "+1d8");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Vanguard Weapon +4"] = new RulesElement({
    name: "Vanguard Weapon +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2458",
    source: "Adventurer's Vault",
    categories: ["Vanguard Weapon +4", "ID_FMP_MAGIC_ITEM_2458"],
    rules: function(model) {
      model.statadd("Damage", "+1d8");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Vanguard Weapon +5"] = new RulesElement({
    name: "Vanguard Weapon +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2459",
    source: "Adventurer's Vault",
    categories: ["Vanguard Weapon +5", "ID_FMP_MAGIC_ITEM_2459"],
    rules: function(model) {
      model.statadd("Damage", "+1d8");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Vanguard Weapon +6"] = new RulesElement({
    name: "Vanguard Weapon +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2460",
    source: "Adventurer's Vault",
    categories: ["Vanguard Weapon +6", "ID_FMP_MAGIC_ITEM_2460"],
    rules: function(model) {
      model.statadd("Damage", "+1d8");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Vaporform Armor +4"] = new RulesElement({
    name: "Vaporform Armor +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1868",
    source: "Adventurer's Vault",
    categories: ["Vaporform Armor +4", "ID_FMP_MAGIC_ITEM_1868"],
    rules: function(model) {
      model.statadd("Armor Class", 4, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 4);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Vaporform Armor +5"] = new RulesElement({
    name: "Vaporform Armor +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1869",
    source: "Adventurer's Vault",
    categories: ["Vaporform Armor +5", "ID_FMP_MAGIC_ITEM_1869"],
    rules: function(model) {
      model.statadd("Armor Class", 5, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 5);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Vaporform Armor +6"] = new RulesElement({
    name: "Vaporform Armor +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1870",
    source: "Adventurer's Vault",
    categories: ["Vaporform Armor +6", "ID_FMP_MAGIC_ITEM_1870"],
    rules: function(model) {
      model.statadd("Armor Class", 6, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 6);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Vengeance Sash (epic tier)"] = new RulesElement({
    name: "Vengeance Sash (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3824",
    source: "Adventurer's Vault",
    categories: ["Vengeance Sash (epic tier)", "ID_FMP_MAGIC_ITEM_3824"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Vengeful Weapon +1"] = new RulesElement({
    name: "Vengeful Weapon +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2461",
    source: "Adventurer's Vault",
    categories: ["Vengeful Weapon +1", "ID_FMP_MAGIC_ITEM_2461"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Vengeful Weapon +2"] = new RulesElement({
    name: "Vengeful Weapon +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2462",
    source: "Adventurer's Vault",
    categories: ["Vengeful Weapon +2", "ID_FMP_MAGIC_ITEM_2462"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Vengeful Weapon +3"] = new RulesElement({
    name: "Vengeful Weapon +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2463",
    source: "Adventurer's Vault",
    categories: ["Vengeful Weapon +3", "ID_FMP_MAGIC_ITEM_2463"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Vengeful Weapon +4"] = new RulesElement({
    name: "Vengeful Weapon +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2464",
    source: "Adventurer's Vault",
    categories: ["Vengeful Weapon +4", "ID_FMP_MAGIC_ITEM_2464"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Vengeful Weapon +5"] = new RulesElement({
    name: "Vengeful Weapon +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2465",
    source: "Adventurer's Vault",
    categories: ["Vengeful Weapon +5", "ID_FMP_MAGIC_ITEM_2465"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Vengeful Weapon +6"] = new RulesElement({
    name: "Vengeful Weapon +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2466",
    source: "Adventurer's Vault",
    categories: ["Vengeful Weapon +6", "ID_FMP_MAGIC_ITEM_2466"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Venom Gloves (epic tier)"] = new RulesElement({
    name: "Venom Gloves (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3417",
    source: "Adventurer's Vault",
    categories: ["Venom Gloves (epic tier)", "ID_FMP_MAGIC_ITEM_3417"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Venom Gloves (paragon tier)"] = new RulesElement({
    name: "Venom Gloves (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3416",
    source: "Adventurer's Vault",
    categories: ["Venom Gloves (paragon tier)", "ID_FMP_MAGIC_ITEM_3416"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Versatile Armor +1"] = new RulesElement({
    name: "Versatile Armor +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1871",
    source: "Adventurer's Vault",
    categories: ["Versatile Armor +1", "ID_FMP_MAGIC_ITEM_1871"],
    rules: function(model) {
      model.statadd("Armor Class", 1, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 1);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Versatile Armor +2"] = new RulesElement({
    name: "Versatile Armor +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1872",
    source: "Adventurer's Vault",
    categories: ["Versatile Armor +2", "ID_FMP_MAGIC_ITEM_1872"],
    rules: function(model) {
      model.statadd("Armor Class", 2, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 2);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Versatile Armor +3"] = new RulesElement({
    name: "Versatile Armor +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1873",
    source: "Adventurer's Vault",
    categories: ["Versatile Armor +3", "ID_FMP_MAGIC_ITEM_1873"],
    rules: function(model) {
      model.statadd("Armor Class", 3, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 3);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Versatile Armor +4"] = new RulesElement({
    name: "Versatile Armor +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1874",
    source: "Adventurer's Vault",
    categories: ["Versatile Armor +4", "ID_FMP_MAGIC_ITEM_1874"],
    rules: function(model) {
      model.statadd("Armor Class", 4, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 4);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Versatile Armor +5"] = new RulesElement({
    name: "Versatile Armor +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1875",
    source: "Adventurer's Vault",
    categories: ["Versatile Armor +5", "ID_FMP_MAGIC_ITEM_1875"],
    rules: function(model) {
      model.statadd("Armor Class", 5, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 5);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Versatile Armor +6"] = new RulesElement({
    name: "Versatile Armor +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1876",
    source: "Adventurer's Vault",
    categories: ["Versatile Armor +6", "ID_FMP_MAGIC_ITEM_1876"],
    rules: function(model) {
      model.statadd("Armor Class", 6, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 6);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Verve Armor +1"] = new RulesElement({
    name: "Verve Armor +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1877",
    source: "Adventurer's Vault",
    categories: ["Verve Armor +1", "ID_FMP_MAGIC_ITEM_1877"],
    rules: function(model) {
      model.statadd("DeathSaving Throws", 2);
      model.statadd("Armor Class", 1, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 1);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Verve Armor +2"] = new RulesElement({
    name: "Verve Armor +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1878",
    source: "Adventurer's Vault",
    categories: ["Verve Armor +2", "ID_FMP_MAGIC_ITEM_1878"],
    rules: function(model) {
      model.statadd("DeathSaving Throws", 2);
      model.statadd("Armor Class", 2, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 2);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Verve Armor +3"] = new RulesElement({
    name: "Verve Armor +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1879",
    source: "Adventurer's Vault",
    categories: ["Verve Armor +3", "ID_FMP_MAGIC_ITEM_1879"],
    rules: function(model) {
      model.statadd("DeathSaving Throws", 2);
      model.statadd("Armor Class", 3, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 3);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Verve Armor +4"] = new RulesElement({
    name: "Verve Armor +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1880",
    source: "Adventurer's Vault",
    categories: ["Verve Armor +4", "ID_FMP_MAGIC_ITEM_1880"],
    rules: function(model) {
      model.statadd("DeathSaving Throws", 2);
      model.statadd("Armor Class", 4, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 4);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Verve Armor +5"] = new RulesElement({
    name: "Verve Armor +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1881",
    source: "Adventurer's Vault",
    categories: ["Verve Armor +5", "ID_FMP_MAGIC_ITEM_1881"],
    rules: function(model) {
      model.statadd("DeathSaving Throws", 2);
      model.statadd("Armor Class", 5, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 5);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Verve Armor +6"] = new RulesElement({
    name: "Verve Armor +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1882",
    source: "Adventurer's Vault",
    categories: ["Verve Armor +6", "ID_FMP_MAGIC_ITEM_1882"],
    rules: function(model) {
      model.statadd("DeathSaving Throws", 2);
      model.statadd("Armor Class", 6, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 6);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Veteran's Armor +1"] = new RulesElement({
    name: "Veteran's Armor +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1883",
    source: "Adventurer's Vault",
    categories: ["Veteran's Armor +1", "ID_FMP_MAGIC_ITEM_1883"],
    rules: function(model) {
      model.statadd("Action Point", "Veteran's Armor +1:When you spend an action point, you gain a +1 item bonus to all attack rolls and defenses until the end of your next turn.");
      model.statadd("Armor Class", 1, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 1);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Veteran's Armor +2"] = new RulesElement({
    name: "Veteran's Armor +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1884",
    source: "Adventurer's Vault",
    categories: ["Veteran's Armor +2", "ID_FMP_MAGIC_ITEM_1884"],
    rules: function(model) {
      model.statadd("Action Point", "Veteran's Armor +2:When you spend an action point, you gain a +1 item bonus to all attack rolls and defenses until the end of your next turn.");
      model.statadd("Armor Class", 2, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 2);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Veteran's Armor +3"] = new RulesElement({
    name: "Veteran's Armor +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1885",
    source: "Adventurer's Vault",
    categories: ["Veteran's Armor +3", "ID_FMP_MAGIC_ITEM_1885"],
    rules: function(model) {
      model.statadd("Action Point", "Veteran's Armor +3:When you spend an action point, you gain a +1 item bonus to all attack rolls and defenses until the end of your next turn.");
      model.statadd("Armor Class", 3, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 3);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Veteran's Armor +4"] = new RulesElement({
    name: "Veteran's Armor +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1886",
    source: "Adventurer's Vault",
    categories: ["Veteran's Armor +4", "ID_FMP_MAGIC_ITEM_1886"],
    rules: function(model) {
      model.statadd("Action Point", "Veteran's Armor +4:When you spend an action point, you gain a +1 item bonus to all attack rolls and defenses until the end of your next turn.");
      model.statadd("Armor Class", 4, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 4);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Veteran's Armor +5"] = new RulesElement({
    name: "Veteran's Armor +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1887",
    source: "Adventurer's Vault",
    categories: ["Veteran's Armor +5", "ID_FMP_MAGIC_ITEM_1887"],
    rules: function(model) {
      model.statadd("Action Point", "Veteran's Armor +5:When you spend an action point, you gain a +1 item bonus to all attack rolls and defenses until the end of your next turn.");
      model.statadd("Armor Class", 5, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 5);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Veteran's Armor +6"] = new RulesElement({
    name: "Veteran's Armor +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1888",
    source: "Adventurer's Vault",
    categories: ["Veteran's Armor +6", "ID_FMP_MAGIC_ITEM_1888"],
    rules: function(model) {
      model.statadd("Action Point", "Veteran's Armor +6:When you spend an action point, you gain a +1 item bonus to all attack rolls and defenses until the end of your next turn.");
      model.statadd("Armor Class", 6, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 6);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Vicious Rod +1"] = new RulesElement({
    name: "Vicious Rod +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2900",
    source: "Adventurer's Vault",
    categories: ["Vicious Rod +1", "ID_FMP_MAGIC_ITEM_2900"],
    rules: function(model) {
      model.statadd("Warlock's Curse Die", "d8");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Vicious Rod +2"] = new RulesElement({
    name: "Vicious Rod +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2901",
    source: "Adventurer's Vault",
    categories: ["Vicious Rod +2", "ID_FMP_MAGIC_ITEM_2901"],
    rules: function(model) {
      model.statadd("Warlock's Curse Die", "d8");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Vicious Rod +3"] = new RulesElement({
    name: "Vicious Rod +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2902",
    source: "Adventurer's Vault",
    categories: ["Vicious Rod +3", "ID_FMP_MAGIC_ITEM_2902"],
    rules: function(model) {
      model.statadd("Warlock's Curse Die", "d8");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Vicious Rod +4"] = new RulesElement({
    name: "Vicious Rod +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2903",
    source: "Adventurer's Vault",
    categories: ["Vicious Rod +4", "ID_FMP_MAGIC_ITEM_2903"],
    rules: function(model) {
      model.statadd("Warlock's Curse Die", "d8");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Vicious Rod +5"] = new RulesElement({
    name: "Vicious Rod +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2904",
    source: "Adventurer's Vault",
    categories: ["Vicious Rod +5", "ID_FMP_MAGIC_ITEM_2904"],
    rules: function(model) {
      model.statadd("Warlock's Curse Die", "d8");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Vicious Rod +6"] = new RulesElement({
    name: "Vicious Rod +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2905",
    source: "Adventurer's Vault",
    categories: ["Vicious Rod +6", "ID_FMP_MAGIC_ITEM_2905"],
    rules: function(model) {
      model.statadd("Warlock's Curse Die", "d8");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Viper Belt (heroic tier)"] = new RulesElement({
    name: "Viper Belt (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3825",
    source: "Adventurer's Vault",
    categories: ["Viper Belt (heroic tier)", "ID_FMP_MAGIC_ITEM_3825"],
    rules: function(model) {
      model.statadd("Viper Belt (heroic tier)", 5, "Viper Belt (heroic tier)");
      model.statadd("resist:poison", function() { return model.stat("Viper Belt (heroic tier)"); }, "resist");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Vision Sand (heroic tier)"] = new RulesElement({
    name: "Vision Sand (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_4045",
    source: "Adventurer's Vault",
    categories: ["Vision Sand (heroic tier)", "ID_FMP_MAGIC_ITEM_4045"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Voidcrystal Armor +3"] = new RulesElement({
    name: "Voidcrystal Armor +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1889",
    source: "Adventurer's Vault",
    categories: ["Voidcrystal Armor +3", "ID_FMP_MAGIC_ITEM_1889"],
    rules: function(model) {
      model.statadd("Armor Class", 3, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 3);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Voidcrystal Armor +4"] = new RulesElement({
    name: "Voidcrystal Armor +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1890",
    source: "Adventurer's Vault",
    categories: ["Voidcrystal Armor +4", "ID_FMP_MAGIC_ITEM_1890"],
    rules: function(model) {
      model.statadd("Armor Class", 4, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 4);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Voidcrystal Armor +5"] = new RulesElement({
    name: "Voidcrystal Armor +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1891",
    source: "Adventurer's Vault",
    categories: ["Voidcrystal Armor +5", "ID_FMP_MAGIC_ITEM_1891"],
    rules: function(model) {
      model.statadd("Armor Class", 5, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 5);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Voidcrystal Armor +6"] = new RulesElement({
    name: "Voidcrystal Armor +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1892",
    source: "Adventurer's Vault",
    categories: ["Voidcrystal Armor +6", "ID_FMP_MAGIC_ITEM_1892"],
    rules: function(model) {
      model.statadd("Armor Class", 6, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 6);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Voidcrystal Weapon +3"] = new RulesElement({
    name: "Voidcrystal Weapon +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2467",
    source: "Adventurer's Vault",
    categories: ["Voidcrystal Weapon +3", "ID_FMP_MAGIC_ITEM_2467"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Voidcrystal Weapon +4"] = new RulesElement({
    name: "Voidcrystal Weapon +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2468",
    source: "Adventurer's Vault",
    categories: ["Voidcrystal Weapon +4", "ID_FMP_MAGIC_ITEM_2468"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Voidcrystal Weapon +5"] = new RulesElement({
    name: "Voidcrystal Weapon +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2469",
    source: "Adventurer's Vault",
    categories: ["Voidcrystal Weapon +5", "ID_FMP_MAGIC_ITEM_2469"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Voidcrystal Weapon +6"] = new RulesElement({
    name: "Voidcrystal Weapon +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2470",
    source: "Adventurer's Vault",
    categories: ["Voidcrystal Weapon +6", "ID_FMP_MAGIC_ITEM_2470"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Wallwalkers (heroic tier)"] = new RulesElement({
    name: "Wallwalkers (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3356",
    source: "Adventurer's Vault",
    categories: ["Wallwalkers (heroic tier)", "ID_FMP_MAGIC_ITEM_3356"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Wand of Cold +1"] = new RulesElement({
    name: "Wand of Cold +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3122",
    source: "Adventurer's Vault",
    categories: ["Wand of Cold +1", "ID_FMP_MAGIC_ITEM_3122"],
    rules: function(model) {
      model.statadd("cold:damage", 1, "item");
      model.grant(elements.id["ID_FMP_POWER_1167"]);
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Wand of Cold +2"] = new RulesElement({
    name: "Wand of Cold +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3123",
    source: "Adventurer's Vault",
    categories: ["Wand of Cold +2", "ID_FMP_MAGIC_ITEM_3123"],
    rules: function(model) {
      model.statadd("cold:damage", 1, "item");
      model.grant(elements.id["ID_FMP_POWER_1167"]);
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Wand of Cold +3"] = new RulesElement({
    name: "Wand of Cold +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3124",
    source: "Adventurer's Vault",
    categories: ["Wand of Cold +3", "ID_FMP_MAGIC_ITEM_3124"],
    rules: function(model) {
      model.statadd("cold:damage", 2, "item");
      model.grant(elements.id["ID_FMP_POWER_1167"]);
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Wand of Cold +4"] = new RulesElement({
    name: "Wand of Cold +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3125",
    source: "Adventurer's Vault",
    categories: ["Wand of Cold +4", "ID_FMP_MAGIC_ITEM_3125"],
    rules: function(model) {
      model.statadd("cold:damage", 2, "item");
      model.grant(elements.id["ID_FMP_POWER_1167"]);
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Wand of Cold +5"] = new RulesElement({
    name: "Wand of Cold +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3126",
    source: "Adventurer's Vault",
    categories: ["Wand of Cold +5", "ID_FMP_MAGIC_ITEM_3126"],
    rules: function(model) {
      model.statadd("cold:damage", 3, "item");
      model.grant(elements.id["ID_FMP_POWER_1167"]);
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Wand of Cold +6"] = new RulesElement({
    name: "Wand of Cold +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3127",
    source: "Adventurer's Vault",
    categories: ["Wand of Cold +6", "ID_FMP_MAGIC_ITEM_3127"],
    rules: function(model) {
      model.statadd("cold:damage", 3, "item");
      model.grant(elements.id["ID_FMP_POWER_1167"]);
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Wand of Erupting Flame +3"] = new RulesElement({
    name: "Wand of Erupting Flame +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3128",
    source: "Adventurer's Vault",
    categories: ["Wand of Erupting Flame +3", "ID_FMP_MAGIC_ITEM_3128"],
    rules: function(model) {
      model.grant(elements.id["ID_FMP_POWER_159"]);
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Wand of Erupting Flame +4"] = new RulesElement({
    name: "Wand of Erupting Flame +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3129",
    source: "Adventurer's Vault",
    categories: ["Wand of Erupting Flame +4", "ID_FMP_MAGIC_ITEM_3129"],
    rules: function(model) {
      model.grant(elements.id["ID_FMP_POWER_159"]);
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Wand of Erupting Flame +5"] = new RulesElement({
    name: "Wand of Erupting Flame +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3130",
    source: "Adventurer's Vault",
    categories: ["Wand of Erupting Flame +5", "ID_FMP_MAGIC_ITEM_3130"],
    rules: function(model) {
      model.grant(elements.id["ID_FMP_POWER_159"]);
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Wand of Erupting Flame +6"] = new RulesElement({
    name: "Wand of Erupting Flame +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3131",
    source: "Adventurer's Vault",
    categories: ["Wand of Erupting Flame +6", "ID_FMP_MAGIC_ITEM_3131"],
    rules: function(model) {
      model.grant(elements.id["ID_FMP_POWER_159"]);
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Wand of Psychic Ravaging +1"] = new RulesElement({
    name: "Wand of Psychic Ravaging +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3132",
    source: "Adventurer's Vault",
    categories: ["Wand of Psychic Ravaging +1", "ID_FMP_MAGIC_ITEM_3132"],
    rules: function(model) {
      model.statadd("psychic:damage", 1, "item");
      model.grant(elements.id["ID_FMP_POWER_1456"]);
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Wand of Psychic Ravaging +2"] = new RulesElement({
    name: "Wand of Psychic Ravaging +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3133",
    source: "Adventurer's Vault",
    categories: ["Wand of Psychic Ravaging +2", "ID_FMP_MAGIC_ITEM_3133"],
    rules: function(model) {
      model.statadd("psychic:damage", 1, "item");
      model.grant(elements.id["ID_FMP_POWER_1456"]);
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Wand of Psychic Ravaging +3"] = new RulesElement({
    name: "Wand of Psychic Ravaging +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3134",
    source: "Adventurer's Vault",
    categories: ["Wand of Psychic Ravaging +3", "ID_FMP_MAGIC_ITEM_3134"],
    rules: function(model) {
      model.statadd("psychic:damage", 2, "item");
      model.grant(elements.id["ID_FMP_POWER_1456"]);
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Wand of Psychic Ravaging +4"] = new RulesElement({
    name: "Wand of Psychic Ravaging +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3135",
    source: "Adventurer's Vault",
    categories: ["Wand of Psychic Ravaging +4", "ID_FMP_MAGIC_ITEM_3135"],
    rules: function(model) {
      model.statadd("psychic:damage", 2, "item");
      model.grant(elements.id["ID_FMP_POWER_1456"]);
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Wand of Psychic Ravaging +5"] = new RulesElement({
    name: "Wand of Psychic Ravaging +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3136",
    source: "Adventurer's Vault",
    categories: ["Wand of Psychic Ravaging +5", "ID_FMP_MAGIC_ITEM_3136"],
    rules: function(model) {
      model.statadd("psychic:damage", 3, "item");
      model.grant(elements.id["ID_FMP_POWER_1456"]);
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Wand of Psychic Ravaging +6"] = new RulesElement({
    name: "Wand of Psychic Ravaging +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3137",
    source: "Adventurer's Vault",
    categories: ["Wand of Psychic Ravaging +6", "ID_FMP_MAGIC_ITEM_3137"],
    rules: function(model) {
      model.statadd("psychic:damage", 3, "item");
      model.grant(elements.id["ID_FMP_POWER_1456"]);
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Wand of Radiance +1"] = new RulesElement({
    name: "Wand of Radiance +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3138",
    source: "Adventurer's Vault",
    categories: ["Wand of Radiance +1", "ID_FMP_MAGIC_ITEM_3138"],
    rules: function(model) {
      model.statadd("radiant:damage", 1, "item");
      model.grant(elements.id["ID_FMP_POWER_1457"]);
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Wand of Radiance +2"] = new RulesElement({
    name: "Wand of Radiance +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3139",
    source: "Adventurer's Vault",
    categories: ["Wand of Radiance +2", "ID_FMP_MAGIC_ITEM_3139"],
    rules: function(model) {
      model.statadd("radiant:damage", 1, "item");
      model.grant(elements.id["ID_FMP_POWER_1457"]);
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Wand of Radiance +3"] = new RulesElement({
    name: "Wand of Radiance +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3140",
    source: "Adventurer's Vault",
    categories: ["Wand of Radiance +3", "ID_FMP_MAGIC_ITEM_3140"],
    rules: function(model) {
      model.statadd("radiant:damage", 1, "item");
      model.grant(elements.id["ID_FMP_POWER_1457"]);
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Wand of Radiance +4"] = new RulesElement({
    name: "Wand of Radiance +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3141",
    source: "Adventurer's Vault",
    categories: ["Wand of Radiance +4", "ID_FMP_MAGIC_ITEM_3141"],
    rules: function(model) {
      model.statadd("radiant:damage", 1, "item");
      model.grant(elements.id["ID_FMP_POWER_1457"]);
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Wand of Radiance +5"] = new RulesElement({
    name: "Wand of Radiance +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3142",
    source: "Adventurer's Vault",
    categories: ["Wand of Radiance +5", "ID_FMP_MAGIC_ITEM_3142"],
    rules: function(model) {
      model.statadd("radiant:damage", 1, "item");
      model.grant(elements.id["ID_FMP_POWER_1457"]);
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Wand of Radiance +6"] = new RulesElement({
    name: "Wand of Radiance +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3143",
    source: "Adventurer's Vault",
    categories: ["Wand of Radiance +6", "ID_FMP_MAGIC_ITEM_3143"],
    rules: function(model) {
      model.statadd("radiant:damage", 1, "item");
      model.grant(elements.id["ID_FMP_POWER_1457"]);
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Wand of Swarming Force +1"] = new RulesElement({
    name: "Wand of Swarming Force +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3144",
    source: "Adventurer's Vault",
    categories: ["Wand of Swarming Force +1", "ID_FMP_MAGIC_ITEM_3144"],
    rules: function(model) {
      model.statadd("force:damage", 1, "item");
      model.grant(elements.id["ID_FMP_POWER_1164"]);
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Wand of Swarming Force +2"] = new RulesElement({
    name: "Wand of Swarming Force +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3145",
    source: "Adventurer's Vault",
    categories: ["Wand of Swarming Force +2", "ID_FMP_MAGIC_ITEM_3145"],
    rules: function(model) {
      model.statadd("force:damage", 1, "item");
      model.grant(elements.id["ID_FMP_POWER_1164"]);
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Wand of Swarming Force +3"] = new RulesElement({
    name: "Wand of Swarming Force +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3146",
    source: "Adventurer's Vault",
    categories: ["Wand of Swarming Force +3", "ID_FMP_MAGIC_ITEM_3146"],
    rules: function(model) {
      model.statadd("force:damage", 2, "item");
      model.grant(elements.id["ID_FMP_POWER_1164"]);
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Wand of Swarming Force +4"] = new RulesElement({
    name: "Wand of Swarming Force +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3147",
    source: "Adventurer's Vault",
    categories: ["Wand of Swarming Force +4", "ID_FMP_MAGIC_ITEM_3147"],
    rules: function(model) {
      model.statadd("force:damage", 2, "item");
      model.grant(elements.id["ID_FMP_POWER_1164"]);
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Wand of Swarming Force +5"] = new RulesElement({
    name: "Wand of Swarming Force +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3148",
    source: "Adventurer's Vault",
    categories: ["Wand of Swarming Force +5", "ID_FMP_MAGIC_ITEM_3148"],
    rules: function(model) {
      model.statadd("force:damage", 3, "item");
      model.grant(elements.id["ID_FMP_POWER_1164"]);
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Wand of Swarming Force +6"] = new RulesElement({
    name: "Wand of Swarming Force +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3149",
    source: "Adventurer's Vault",
    categories: ["Wand of Swarming Force +6", "ID_FMP_MAGIC_ITEM_3149"],
    rules: function(model) {
      model.statadd("force:damage", 3, "item");
      model.grant(elements.id["ID_FMP_POWER_1164"]);
      // unsupported rule: cbimporter.Rules.ModifyRule
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["War Ring (paragon tier)"] = new RulesElement({
    name: "War Ring (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3766",
    source: "Adventurer's Vault",
    categories: ["War Ring (paragon tier)", "ID_FMP_MAGIC_ITEM_3766"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Warlock's Bracers (paragon tier)"] = new RulesElement({
    name: "Warlock's Bracers (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3293",
    source: "Adventurer's Vault",
    categories: ["Warlock's Bracers (paragon tier)", "ID_FMP_MAGIC_ITEM_3293"],
    rules: function(model) {
      model.statadd("AC", function() { /* against attacks by creatures affected by your Warlock's curse */ return 1; }, "item");
      model.statadd("Fortitude Defense", function() { /* against attacks by creatures affected by your Warlock's curse */ return 1; }, "item");
      model.statadd("Reflex Defense", function() { /* against attacks by creatures affected by your Warlock's curse */ return 1; }, "item");
      model.statadd("Will Defense", function() { /* against attacks by creatures affected by your Warlock's curse */ return 1; }, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Warsheath Armor +2"] = new RulesElement({
    name: "Warsheath Armor +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1893",
    source: "Adventurer's Vault",
    categories: ["Warsheath Armor +2", "ID_FMP_MAGIC_ITEM_1893"],
    rules: function(model) {
      model.statadd("Armor Class", 2, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 2);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Warsheath Armor +3"] = new RulesElement({
    name: "Warsheath Armor +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1894",
    source: "Adventurer's Vault",
    categories: ["Warsheath Armor +3", "ID_FMP_MAGIC_ITEM_1894"],
    rules: function(model) {
      model.statadd("Armor Class", 3, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 3);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Warsheath Armor +4"] = new RulesElement({
    name: "Warsheath Armor +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1895",
    source: "Adventurer's Vault",
    categories: ["Warsheath Armor +4", "ID_FMP_MAGIC_ITEM_1895"],
    rules: function(model) {
      model.statadd("Armor Class", 4, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 4);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Warsheath Armor +5"] = new RulesElement({
    name: "Warsheath Armor +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1896",
    source: "Adventurer's Vault",
    categories: ["Warsheath Armor +5", "ID_FMP_MAGIC_ITEM_1896"],
    rules: function(model) {
      model.statadd("Armor Class", 5, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 5);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Warsheath Armor +6"] = new RulesElement({
    name: "Warsheath Armor +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1897",
    source: "Adventurer's Vault",
    categories: ["Warsheath Armor +6", "ID_FMP_MAGIC_ITEM_1897"],
    rules: function(model) {
      model.statadd("Armor Class", 6, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 6);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Watchful Ruby Eye (heroic tier)"] = new RulesElement({
    name: "Watchful Ruby Eye (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3899",
    source: "Adventurer's Vault",
    categories: ["Watchful Ruby Eye (heroic tier)", "ID_FMP_MAGIC_ITEM_3899"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Waterbane Weapon +2"] = new RulesElement({
    name: "Waterbane Weapon +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2471",
    source: "Adventurer's Vault",
    categories: ["Waterbane Weapon +2", "ID_FMP_MAGIC_ITEM_2471"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Waterbane Weapon +3"] = new RulesElement({
    name: "Waterbane Weapon +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2472",
    source: "Adventurer's Vault",
    categories: ["Waterbane Weapon +3", "ID_FMP_MAGIC_ITEM_2472"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Waterbane Weapon +4"] = new RulesElement({
    name: "Waterbane Weapon +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2473",
    source: "Adventurer's Vault",
    categories: ["Waterbane Weapon +4", "ID_FMP_MAGIC_ITEM_2473"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Waterbane Weapon +5"] = new RulesElement({
    name: "Waterbane Weapon +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2474",
    source: "Adventurer's Vault",
    categories: ["Waterbane Weapon +5", "ID_FMP_MAGIC_ITEM_2474"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Waterbane Weapon +6"] = new RulesElement({
    name: "Waterbane Weapon +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2475",
    source: "Adventurer's Vault",
    categories: ["Waterbane Weapon +6", "ID_FMP_MAGIC_ITEM_2475"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Weapon of Healing +2"] = new RulesElement({
    name: "Weapon of Healing +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2180",
    source: "Adventurer's Vault",
    categories: ["Weapon of Healing +2", "ID_FMP_MAGIC_ITEM_2180"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Weapon of Healing +3"] = new RulesElement({
    name: "Weapon of Healing +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2181",
    source: "Adventurer's Vault",
    categories: ["Weapon of Healing +3", "ID_FMP_MAGIC_ITEM_2181"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Weapon of Healing +4"] = new RulesElement({
    name: "Weapon of Healing +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2182",
    source: "Adventurer's Vault",
    categories: ["Weapon of Healing +4", "ID_FMP_MAGIC_ITEM_2182"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Weapon of Healing +5"] = new RulesElement({
    name: "Weapon of Healing +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2183",
    source: "Adventurer's Vault",
    categories: ["Weapon of Healing +5", "ID_FMP_MAGIC_ITEM_2183"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Weapon of Healing +6"] = new RulesElement({
    name: "Weapon of Healing +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2184",
    source: "Adventurer's Vault",
    categories: ["Weapon of Healing +6", "ID_FMP_MAGIC_ITEM_2184"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Whetstone of Combustion (epic tier)"] = new RulesElement({
    name: "Whetstone of Combustion (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_4031",
    source: "Adventurer's Vault",
    categories: ["Whetstone of Combustion (epic tier)", "ID_FMP_MAGIC_ITEM_4031"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Whetstone of Combustion (heroic tier)"] = new RulesElement({
    name: "Whetstone of Combustion (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_4029",
    source: "Adventurer's Vault",
    categories: ["Whetstone of Combustion (heroic tier)", "ID_FMP_MAGIC_ITEM_4029"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Whetstone of Combustion (paragon tier)"] = new RulesElement({
    name: "Whetstone of Combustion (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_4030",
    source: "Adventurer's Vault",
    categories: ["Whetstone of Combustion (paragon tier)", "ID_FMP_MAGIC_ITEM_4030"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Whetstone of Venom (epic tier)"] = new RulesElement({
    name: "Whetstone of Venom (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_4034",
    source: "Adventurer's Vault",
    categories: ["Whetstone of Venom (epic tier)", "ID_FMP_MAGIC_ITEM_4034"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Whetstone of Venom (heroic tier)"] = new RulesElement({
    name: "Whetstone of Venom (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_4032",
    source: "Adventurer's Vault",
    categories: ["Whetstone of Venom (heroic tier)", "ID_FMP_MAGIC_ITEM_4032"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Whetstone of Venom (paragon tier)"] = new RulesElement({
    name: "Whetstone of Venom (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_4033",
    source: "Adventurer's Vault",
    categories: ["Whetstone of Venom (paragon tier)", "ID_FMP_MAGIC_ITEM_4033"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Whiteflame Armor +1"] = new RulesElement({
    name: "Whiteflame Armor +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1898",
    source: "Adventurer's Vault",
    categories: ["Whiteflame Armor +1", "ID_FMP_MAGIC_ITEM_1898"],
    rules: function(model) {
      model.statadd("resist:radiant", 5, "resist");
      model.statadd("Armor Class", 1, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 1);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Whiteflame Armor +2"] = new RulesElement({
    name: "Whiteflame Armor +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1899",
    source: "Adventurer's Vault",
    categories: ["Whiteflame Armor +2", "ID_FMP_MAGIC_ITEM_1899"],
    rules: function(model) {
      model.statadd("resist:radiant", 5, "resist");
      model.statadd("Armor Class", 2, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 2);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Whiteflame Armor +3"] = new RulesElement({
    name: "Whiteflame Armor +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1900",
    source: "Adventurer's Vault",
    categories: ["Whiteflame Armor +3", "ID_FMP_MAGIC_ITEM_1900"],
    rules: function(model) {
      model.statadd("resist:radiant", 10, "resist");
      model.statadd("Armor Class", 3, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 3);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Whiteflame Armor +4"] = new RulesElement({
    name: "Whiteflame Armor +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1901",
    source: "Adventurer's Vault",
    categories: ["Whiteflame Armor +4", "ID_FMP_MAGIC_ITEM_1901"],
    rules: function(model) {
      model.statadd("resist:radiant", 10, "resist");
      model.statadd("Armor Class", 4, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 4);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Whiteflame Armor +5"] = new RulesElement({
    name: "Whiteflame Armor +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1902",
    source: "Adventurer's Vault",
    categories: ["Whiteflame Armor +5", "ID_FMP_MAGIC_ITEM_1902"],
    rules: function(model) {
      model.statadd("resist:radiant", 15, "resist");
      model.statadd("Armor Class", 5, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 5);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Whiteflame Armor +6"] = new RulesElement({
    name: "Whiteflame Armor +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1903",
    source: "Adventurer's Vault",
    categories: ["Whiteflame Armor +6", "ID_FMP_MAGIC_ITEM_1903"],
    rules: function(model) {
      model.statadd("resist:radiant", 15, "resist");
      model.statadd("Armor Class", 6, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 6);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Wildleaf Armor +4"] = new RulesElement({
    name: "Wildleaf Armor +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1904",
    source: "Adventurer's Vault",
    categories: ["Wildleaf Armor +4", "ID_FMP_MAGIC_ITEM_1904"],
    rules: function(model) {
      model.statadd("Armor Class", 4, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 4);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Wildleaf Armor +5"] = new RulesElement({
    name: "Wildleaf Armor +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1905",
    source: "Adventurer's Vault",
    categories: ["Wildleaf Armor +5", "ID_FMP_MAGIC_ITEM_1905"],
    rules: function(model) {
      model.statadd("Armor Class", 5, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 5);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Wildleaf Armor +6"] = new RulesElement({
    name: "Wildleaf Armor +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1906",
    source: "Adventurer's Vault",
    categories: ["Wildleaf Armor +6", "ID_FMP_MAGIC_ITEM_1906"],
    rules: function(model) {
      model.statadd("Armor Class", 6, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 6);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Wildrunners (heroic tier)"] = new RulesElement({
    name: "Wildrunners (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3357",
    source: "Adventurer's Vault",
    categories: ["Wildrunners (heroic tier)", "ID_FMP_MAGIC_ITEM_3357"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Withering Weapon +3"] = new RulesElement({
    name: "Withering Weapon +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2476",
    source: "Adventurer's Vault",
    categories: ["Withering Weapon +3", "ID_FMP_MAGIC_ITEM_2476"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Withering Weapon +4"] = new RulesElement({
    name: "Withering Weapon +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2477",
    source: "Adventurer's Vault",
    categories: ["Withering Weapon +4", "ID_FMP_MAGIC_ITEM_2477"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Withering Weapon +5"] = new RulesElement({
    name: "Withering Weapon +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2478",
    source: "Adventurer's Vault",
    categories: ["Withering Weapon +5", "ID_FMP_MAGIC_ITEM_2478"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Withering Weapon +6"] = new RulesElement({
    name: "Withering Weapon +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2479",
    source: "Adventurer's Vault",
    categories: ["Withering Weapon +6", "ID_FMP_MAGIC_ITEM_2479"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Wounding Weapon +1"] = new RulesElement({
    name: "Wounding Weapon +1",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2480",
    source: "Adventurer's Vault",
    categories: ["Wounding Weapon +1", "ID_FMP_MAGIC_ITEM_2480"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Wounding Weapon +2"] = new RulesElement({
    name: "Wounding Weapon +2",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2481",
    source: "Adventurer's Vault",
    categories: ["Wounding Weapon +2", "ID_FMP_MAGIC_ITEM_2481"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Wounding Weapon +3"] = new RulesElement({
    name: "Wounding Weapon +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2482",
    source: "Adventurer's Vault",
    categories: ["Wounding Weapon +3", "ID_FMP_MAGIC_ITEM_2482"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Wounding Weapon +4"] = new RulesElement({
    name: "Wounding Weapon +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2483",
    source: "Adventurer's Vault",
    categories: ["Wounding Weapon +4", "ID_FMP_MAGIC_ITEM_2483"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Wounding Weapon +5"] = new RulesElement({
    name: "Wounding Weapon +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2484",
    source: "Adventurer's Vault",
    categories: ["Wounding Weapon +5", "ID_FMP_MAGIC_ITEM_2484"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Wounding Weapon +6"] = new RulesElement({
    name: "Wounding Weapon +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_2485",
    source: "Adventurer's Vault",
    categories: ["Wounding Weapon +6", "ID_FMP_MAGIC_ITEM_2485"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Wrestler's Gloves (heroic tier)"] = new RulesElement({
    name: "Wrestler's Gloves (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3419",
    source: "Adventurer's Vault",
    categories: ["Wrestler's Gloves (heroic tier)", "ID_FMP_MAGIC_ITEM_3419"],
    rules: function(model) {
      model.statadd("AC", function() { /* when attempting to prevent an escape from your grab */ return 1; }, "item");
      model.statadd("Fortitude Defense", function() { /* when attempting to prevent an escape from your grab */ return 1; }, "item");
      model.statadd("Reflex Defense", function() { /* when attempting to prevent an escape from your grab */ return 1; }, "item");
      model.statadd("Will Defense", function() { /* when attempting to prevent an escape from your grab */ return 1; }, "item");
      model.statadd("Saving Throws", function() { /* to catch yourself when falling */ return 1; }, "item");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Wyrmguard Shield (heroic tier)"] = new RulesElement({
    name: "Wyrmguard Shield (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3294",
    source: "Adventurer's Vault",
    categories: ["Wyrmguard Shield (heroic tier)", "ID_FMP_MAGIC_ITEM_3294"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Wyrmguard Shield (paragon tier)"] = new RulesElement({
    name: "Wyrmguard Shield (paragon tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3295",
    source: "Adventurer's Vault",
    categories: ["Wyrmguard Shield (paragon tier)", "ID_FMP_MAGIC_ITEM_3295"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Wyrmtouched Amulet +4"] = new RulesElement({
    name: "Wyrmtouched Amulet +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3719",
    source: "Adventurer's Vault",
    categories: ["Wyrmtouched Amulet +4", "ID_FMP_MAGIC_ITEM_3719"],
    rules: function(model) {
      model.statadd("resist:acid", 10, "resist");
      model.statadd("resist:cold", 10, "resist");
      model.statadd("resist:fire", 10, "resist");
      model.statadd("resist:lightning", 10, "resist");
      model.statadd("resist:poison", 10, "resist");
      model.statadd("Fortitude Defense", 4, "Enhancement");
      model.statadd("Reflex Defense", 4, "Enhancement");
      model.statadd("Will Defense", 4, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Wyrmtouched Amulet +5"] = new RulesElement({
    name: "Wyrmtouched Amulet +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3720",
    source: "Adventurer's Vault",
    categories: ["Wyrmtouched Amulet +5", "ID_FMP_MAGIC_ITEM_3720"],
    rules: function(model) {
      model.statadd("resist:acid", 15, "resist");
      model.statadd("resist:cold", 15, "resist");
      model.statadd("resist:fire", 15, "resist");
      model.statadd("resist:lightning", 15, "resist");
      model.statadd("resist:poison", 15, "resist");
      model.statadd("Fortitude Defense", 5, "Enhancement");
      model.statadd("Reflex Defense", 5, "Enhancement");
      model.statadd("Will Defense", 5, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Wyrmtouched Amulet +6"] = new RulesElement({
    name: "Wyrmtouched Amulet +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3721",
    source: "Adventurer's Vault",
    categories: ["Wyrmtouched Amulet +6", "ID_FMP_MAGIC_ITEM_3721"],
    rules: function(model) {
      model.statadd("resist:acid", 20, "resist");
      model.statadd("resist:cold", 20, "resist");
      model.statadd("resist:fire", 20, "resist");
      model.statadd("resist:lightning", 20, "resist");
      model.statadd("resist:poison", 20, "resist");
      model.statadd("Fortitude Defense", 6, "Enhancement");
      model.statadd("Reflex Defense", 6, "Enhancement");
      model.statadd("Will Defense", 6, "Enhancement");
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Zealot's Armor +3"] = new RulesElement({
    name: "Zealot's Armor +3",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1907",
    source: "Adventurer's Vault",
    categories: ["Zealot's Armor +3", "ID_FMP_MAGIC_ITEM_1907"],
    rules: function(model) {
      model.statadd("Armor Class", 3, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 3);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Zealot's Armor +4"] = new RulesElement({
    name: "Zealot's Armor +4",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1908",
    source: "Adventurer's Vault",
    categories: ["Zealot's Armor +4", "ID_FMP_MAGIC_ITEM_1908"],
    rules: function(model) {
      model.statadd("Armor Class", 4, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 4);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Zealot's Armor +5"] = new RulesElement({
    name: "Zealot's Armor +5",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1909",
    source: "Adventurer's Vault",
    categories: ["Zealot's Armor +5", "ID_FMP_MAGIC_ITEM_1909"],
    rules: function(model) {
      model.statadd("Armor Class", 5, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 5);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Zealot's Armor +6"] = new RulesElement({
    name: "Zealot's Armor +6",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_1910",
    source: "Adventurer's Vault",
    categories: ["Zealot's Armor +6", "ID_FMP_MAGIC_ITEM_1910"],
    rules: function(model) {
      model.statadd("Armor Class", 6, "Enhancement");
      model.statadd("Armor Enhancement Bonus", 6);
    }
  });
  byID[te.id] = te;
  
  te = Magic_Item["Zephyr Boots (epic tier)"] = new RulesElement({
    name: "Zephyr Boots (epic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3358",
    source: "Adventurer's Vault",
    categories: ["Zephyr Boots (epic tier)", "ID_FMP_MAGIC_ITEM_3358"]
  });
  byID[te.id] = te;
  
  te = Magic_Item["Zephyr Horseshoes (heroic tier)"] = new RulesElement({
    name: "Zephyr Horseshoes (heroic tier)",
    type: "Magic Item",
    id: "ID_FMP_MAGIC_ITEM_3985",
    source: "Adventurer's Vault",
    categories: ["Zephyr Horseshoes (heroic tier)", "ID_FMP_MAGIC_ITEM_3985"]
  });
  byID[te.id] = te;
  
  
})(this);
